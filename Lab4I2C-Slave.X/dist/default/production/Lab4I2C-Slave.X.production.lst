

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 23:53:49 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 04/07/2022 GMT
    22                           ; 
    23                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289     0000                     	;# 
   290     0001                     	;# 
   291     0002                     	;# 
   292     0003                     	;# 
   293     0004                     	;# 
   294     0005                     	;# 
   295     0006                     	;# 
   296     0007                     	;# 
   297     0008                     	;# 
   298     0009                     	;# 
   299     000A                     	;# 
   300     000B                     	;# 
   301     000C                     	;# 
   302     000D                     	;# 
   303     000E                     	;# 
   304     000E                     	;# 
   305     000F                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0014                     	;# 
   311     0015                     	;# 
   312     0015                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001B                     	;# 
   320     001C                     	;# 
   321     001D                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     0081                     	;# 
   325     0085                     	;# 
   326     0086                     	;# 
   327     0087                     	;# 
   328     0088                     	;# 
   329     0089                     	;# 
   330     008C                     	;# 
   331     008D                     	;# 
   332     008E                     	;# 
   333     008F                     	;# 
   334     0090                     	;# 
   335     0091                     	;# 
   336     0092                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0095                     	;# 
   342     0096                     	;# 
   343     0097                     	;# 
   344     0098                     	;# 
   345     0099                     	;# 
   346     009A                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0105                     	;# 
   353     0107                     	;# 
   354     0108                     	;# 
   355     0109                     	;# 
   356     010C                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     0185                     	;# 
   362     0187                     	;# 
   363     0188                     	;# 
   364     0189                     	;# 
   365     018C                     	;# 
   366     018D                     	;# 
   367     0000                     	;# 
   368     0001                     	;# 
   369     0002                     	;# 
   370     0003                     	;# 
   371     0004                     	;# 
   372     0005                     	;# 
   373     0006                     	;# 
   374     0007                     	;# 
   375     0008                     	;# 
   376     0009                     	;# 
   377     000A                     	;# 
   378     000B                     	;# 
   379     000C                     	;# 
   380     000D                     	;# 
   381     000E                     	;# 
   382     000E                     	;# 
   383     000F                     	;# 
   384     0010                     	;# 
   385     0011                     	;# 
   386     0012                     	;# 
   387     0013                     	;# 
   388     0014                     	;# 
   389     0015                     	;# 
   390     0015                     	;# 
   391     0016                     	;# 
   392     0017                     	;# 
   393     0018                     	;# 
   394     0019                     	;# 
   395     001A                     	;# 
   396     001B                     	;# 
   397     001B                     	;# 
   398     001C                     	;# 
   399     001D                     	;# 
   400     001E                     	;# 
   401     001F                     	;# 
   402     0081                     	;# 
   403     0085                     	;# 
   404     0086                     	;# 
   405     0087                     	;# 
   406     0088                     	;# 
   407     0089                     	;# 
   408     008C                     	;# 
   409     008D                     	;# 
   410     008E                     	;# 
   411     008F                     	;# 
   412     0090                     	;# 
   413     0091                     	;# 
   414     0092                     	;# 
   415     0093                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0094                     	;# 
   419     0095                     	;# 
   420     0096                     	;# 
   421     0097                     	;# 
   422     0098                     	;# 
   423     0099                     	;# 
   424     009A                     	;# 
   425     009B                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     0105                     	;# 
   431     0107                     	;# 
   432     0108                     	;# 
   433     0109                     	;# 
   434     010C                     	;# 
   435     010C                     	;# 
   436     010D                     	;# 
   437     010E                     	;# 
   438     010F                     	;# 
   439     0185                     	;# 
   440     0187                     	;# 
   441     0188                     	;# 
   442     0189                     	;# 
   443     018C                     	;# 
   444     018D                     	;# 
   445                           
   446                           	psect	nvCOMMON
   447     0079                     __pnvCOMMON:
   448     0079                     _ADC:
   449     0079                     	ds	1
   450     0005                     _PORTA	set	5
   451     001E                     _ADRESH	set	30
   452     001F                     _ADCON0bits	set	31
   453     0006                     _PORTB	set	6
   454     0008                     _PORTD	set	8
   455     0014                     _SSPCONbits	set	20
   456     000C                     _PIR1bits	set	12
   457     0013                     _SSPBUF	set	19
   458     0014                     _SSPCON	set	20
   459     0066                     _ADIF	set	102
   460     0063                     _SSPIF	set	99
   461     005E                     _PEIE	set	94
   462     005F                     _GIE	set	95
   463     009F                     _ADCON1bits	set	159
   464     0085                     _TRISA	set	133
   465     0088                     _TRISD	set	136
   466     0086                     _TRISB	set	134
   467     0094                     _SSPSTATbits	set	148
   468     0091                     _SSPCON2bits	set	145
   469     0087                     _TRISCbits	set	135
   470     0094                     _SSPSTAT	set	148
   471     0093                     _SSPADD	set	147
   472     0091                     _SSPCON2	set	145
   473     04A0                     _BF	set	1184
   474     0463                     _SSPIE	set	1123
   475     043C                     _TRISC4	set	1084
   476     043B                     _TRISC3	set	1083
   477     0189                     _ANSELH	set	393
   478     0188                     _ANSEL	set	392
   479                           
   480                           	psect	cinit
   481     000F                     start_initialization:	
   482                           ; #config settings
   483                           
   484     000F                     __initialization:
   485                           
   486                           ; Clear objects allocated to COMMON
   487     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   488     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   489     0011                     end_of_initialization:	
   490                           ;End of C runtime variable initialization code
   491                           
   492     0011                     __end_of__initialization:
   493     0011  0183               	clrf	3
   494     0012  120A  118A  2896   	ljmp	_main	;jump to C main() function
   495                           
   496                           	psect	bssCOMMON
   497     0077                     __pbssCOMMON:
   498     0077                     _dato:
   499     0077                     	ds	1
   500     0078                     _z:
   501     0078                     	ds	1
   502                           
   503                           	psect	cstackCOMMON
   504     0070                     __pcstackCOMMON:
   505     0070                     ?_setup:
   506     0070                     ?_ADC_config:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?_I2C_Slave_Init:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ?_isr:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ??_isr:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ?_main:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 1 bytes @ 0x0
   523     0070                     	ds	3
   524     0073                     ??_ADC_config:
   525     0073                     ??_I2C_Slave_Init:	
   526                           ; 1 bytes @ 0x3
   527                           
   528     0073                     I2C_Slave_Init@address:	
   529                           ; 1 bytes @ 0x3
   530                           
   531                           
   532                           ; 1 bytes @ 0x3
   533     0073                     	ds	1
   534     0074                     ??_setup:
   535     0074                     ADC_config@channel:	
   536                           ; 1 bytes @ 0x4
   537                           
   538                           
   539                           ; 1 bytes @ 0x4
   540     0074                     	ds	1
   541     0075                     ?_ADC_read:
   542                           
   543                           ; 2 bytes @ 0x5
   544     0075                     	ds	2
   545                           
   546                           	psect	cstackBANK0
   547     0020                     __pcstackBANK0:
   548     0020                     ??_ADC_read:
   549                           
   550                           ; 1 bytes @ 0x0
   551     0020                     	ds	2
   552     0022                     ADC_read@channel:
   553                           
   554                           ; 1 bytes @ 0x2
   555     0022                     	ds	1
   556     0023                     ADC_read@ADC:
   557                           
   558                           ; 2 bytes @ 0x3
   559     0023                     	ds	2
   560     0025                     ??_main:
   561                           
   562                           ; 1 bytes @ 0x5
   563     0025                     	ds	3
   564                           
   565                           	psect	maintext
   566     0096                     __pmaintext:	
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 92 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : B00/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0
   588 ;;      Temps:          0       3       0       0       0
   589 ;;      Totals:         0       3       0       0       0
   590 ;;Total ram usage:        3 bytes
   591 ;; Hardware stack levels required when called: 3
   592 ;; This function calls:
   593 ;;		_ADC_read
   594 ;;		_setup
   595 ;; This function is called by:
   596 ;;		Startup code after reset
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600     0096                     _main:	
   601                           ;psect for function _main
   602                           
   603     0096                     l909:	
   604                           ;incstack = 0
   605                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   606                           
   607                           
   608                           ;main.c: 93:     setup();
   609     0096  120A  118A  20EC  120A  118A  	fcall	_setup
   610     009B                     l114:	
   611                           ;main.c: 97:     while(1){
   612                           
   613                           
   614                           ;main.c: 98:         ADC = ADC_read (0x00000000);
   615     009B  3000               	movlw	0
   616     009C  120A  118A  20B5  120A  118A  	fcall	_ADC_read
   617     00A1  0875               	movf	?_ADC_read,w
   618     00A2  00F9               	movwf	_ADC
   619     00A3                     l911:
   620                           
   621                           ;main.c: 99:        _delay((unsigned long)((500)*(4000000/4000.0)));
   622     00A3  3003               	movlw	3
   623     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   624     00A5  1303               	bcf	3,6	;RP1=0, select bank0
   625     00A6  00A7               	movwf	??_main+2
   626     00A7  308A               	movlw	138
   627     00A8  00A6               	movwf	??_main+1
   628     00A9  3055               	movlw	85
   629     00AA  00A5               	movwf	??_main
   630     00AB                     u177:
   631     00AB  0BA5               	decfsz	??_main,f
   632     00AC  28AB               	goto	u177
   633     00AD  0BA6               	decfsz	??_main+1,f
   634     00AE  28AB               	goto	u177
   635     00AF  0BA7               	decfsz	??_main+2,f
   636     00B0  28AB               	goto	u177
   637     00B1  289B               	goto	l114
   638     00B2  120A  118A  280C   	ljmp	start
   639     00B5                     __end_of_main:
   640                           
   641                           	psect	text1
   642     00EC                     __ptext1:	
   643 ;; *************** function _setup *****************
   644 ;; Defined at:
   645 ;;		line 106 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0, pclath, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0
   662 ;;      Totals:         0       0       0       0       0
   663 ;;Total ram usage:        0 bytes
   664 ;; Hardware stack levels used: 1
   665 ;; Hardware stack levels required when called: 2
   666 ;; This function calls:
   667 ;;		_I2C_Slave_Init
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673     00EC                     _setup:	
   674                           ;psect for function _setup
   675                           
   676     00EC                     l779:	
   677                           ;incstack = 0
   678                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   679                           
   680                           
   681                           ;main.c: 107:     ANSEL = 0;
   682     00EC  1683               	bsf	3,5	;RP0=1, select bank3
   683     00ED  1703               	bsf	3,6	;RP1=1, select bank3
   684     00EE  0188               	clrf	8	;volatile
   685                           
   686                           ;main.c: 108:     ANSELH = 0;
   687     00EF  0189               	clrf	9	;volatile
   688                           
   689                           ;main.c: 110:     TRISB = 0;
   690     00F0  1683               	bsf	3,5	;RP0=1, select bank1
   691     00F1  1303               	bcf	3,6	;RP1=0, select bank1
   692     00F2  0186               	clrf	6	;volatile
   693                           
   694                           ;main.c: 111:     TRISD = 0;
   695     00F3  0188               	clrf	8	;volatile
   696                           
   697                           ;main.c: 113:     PORTB = 0;
   698     00F4  1283               	bcf	3,5	;RP0=0, select bank0
   699     00F5  1303               	bcf	3,6	;RP1=0, select bank0
   700     00F6  0186               	clrf	6	;volatile
   701                           
   702                           ;main.c: 114:     PORTD = 0;
   703     00F7  0188               	clrf	8	;volatile
   704     00F8                     l781:
   705                           
   706                           ;main.c: 115:     I2C_Slave_Init(0x41);
   707     00F8  3041               	movlw	65
   708     00F9  120A  118A  20D2  120A  118A  	fcall	_I2C_Slave_Init
   709     00FE                     l120:
   710     00FE  0008               	return
   711     00FF                     __end_of_setup:
   712                           
   713                           	psect	text2
   714     00D2                     __ptext2:	
   715 ;; *************** function _I2C_Slave_Init *****************
   716 ;; Defined at:
   717 ;;		line 93 in file "I2C.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  address         1    wreg     unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  address         1    3[COMMON] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       0       0       0       0
   732 ;;      Locals:         1       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0
   734 ;;      Totals:         1       0       0       0       0
   735 ;;Total ram usage:        1 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_setup
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745     00D2                     _I2C_Slave_Init:	
   746                           ;psect for function _I2C_Slave_Init
   747                           
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in _I2C_Slave_Init: [wreg]
   751                           ;I2C_Slave_Init@address stored from wreg
   752     00D2  00F3               	movwf	I2C_Slave_Init@address
   753     00D3                     l741:
   754                           
   755                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   756     00D3  0873               	movf	I2C_Slave_Init@address,w
   757     00D4  1683               	bsf	3,5	;RP0=1, select bank1
   758     00D5  1303               	bcf	3,6	;RP1=0, select bank1
   759     00D6  0093               	movwf	19	;volatile
   760                           
   761                           ;I2C.c: 96:     SSPCON = 0x36;
   762     00D7  3036               	movlw	54
   763     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   764     00D9  1303               	bcf	3,6	;RP1=0, select bank0
   765     00DA  0094               	movwf	20	;volatile
   766                           
   767                           ;I2C.c: 97:     SSPSTAT = 0x80;
   768     00DB  3080               	movlw	128
   769     00DC  1683               	bsf	3,5	;RP0=1, select bank1
   770     00DD  1303               	bcf	3,6	;RP1=0, select bank1
   771     00DE  0094               	movwf	20	;volatile
   772                           
   773                           ;I2C.c: 98:     SSPCON2 = 0x01;
   774     00DF  3001               	movlw	1
   775     00E0  0091               	movwf	17	;volatile
   776     00E1                     l743:
   777                           
   778                           ;I2C.c: 99:     TRISC3 = 1;
   779     00E1  1587               	bsf	7,3	;volatile
   780     00E2                     l745:
   781                           
   782                           ;I2C.c: 100:     TRISC4 = 1;
   783     00E2  1607               	bsf	7,4	;volatile
   784     00E3                     l747:
   785                           
   786                           ;I2C.c: 101:     GIE = 1;
   787     00E3  178B               	bsf	11,7	;volatile
   788     00E4                     l749:
   789                           
   790                           ;I2C.c: 102:     PEIE = 1;
   791     00E4  170B               	bsf	11,6	;volatile
   792     00E5                     l751:
   793                           
   794                           ;I2C.c: 103:     SSPIF = 0;
   795     00E5  1283               	bcf	3,5	;RP0=0, select bank0
   796     00E6  1303               	bcf	3,6	;RP1=0, select bank0
   797     00E7  118C               	bcf	12,3	;volatile
   798     00E8                     l753:
   799                           
   800                           ;I2C.c: 104:     SSPIE = 1;
   801     00E8  1683               	bsf	3,5	;RP0=1, select bank1
   802     00E9  1303               	bcf	3,6	;RP1=0, select bank1
   803     00EA  158C               	bsf	12,3	;volatile
   804     00EB                     l55:
   805     00EB  0008               	return
   806     00EC                     __end_of_I2C_Slave_Init:
   807                           
   808                           	psect	text3
   809     00B5                     __ptext3:	
   810 ;; *************** function _ADC_read *****************
   811 ;; Defined at:
   812 ;;		line 9 in file "ADC_read.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  channel         1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  channel         1    2[BANK0 ] unsigned char 
   817 ;;  ADC             2    3[BANK0 ] unsigned int 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  2    5[COMMON] unsigned int 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         2       0       0       0       0
   828 ;;      Locals:         0       3       0       0       0
   829 ;;      Temps:          0       2       0       0       0
   830 ;;      Totals:         2       5       0       0       0
   831 ;;Total ram usage:        7 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 2
   834 ;; This function calls:
   835 ;;		_ADC_config
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841     00B5                     _ADC_read:	
   842                           ;psect for function _ADC_read
   843                           
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
   847                           ;ADC_read@channel stored from wreg
   848     00B5  1283               	bcf	3,5	;RP0=0, select bank0
   849     00B6  1303               	bcf	3,6	;RP1=0, select bank0
   850     00B7  00A2               	movwf	ADC_read@channel
   851     00B8                     l901:
   852                           
   853                           ;ADC_read.c: 10:     uint16_t ADC;;ADC_read.c: 11:     ADC_config (channel);
   854     00B8  0822               	movf	ADC_read@channel,w
   855     00B9  120A  118A  2070  120A  118A  	fcall	_ADC_config
   856     00BE                     l903:
   857                           
   858                           ;ADC_read.c: 12:     ADCON0bits.GO = 1;
   859     00BE  1283               	bcf	3,5	;RP0=0, select bank0
   860     00BF  1303               	bcf	3,6	;RP1=0, select bank0
   861     00C0  149F               	bsf	31,1	;volatile
   862     00C1                     l131:	
   863                           ;ADC_read.c: 13:     while(ADCON0bits.GO == 1){;}
   864                           
   865     00C1  189F               	btfsc	31,1	;volatile
   866     00C2  28C4               	goto	u161
   867     00C3  28C5               	goto	u160
   868     00C4                     u161:
   869     00C4  28C1               	goto	l131
   870     00C5                     u160:
   871     00C5                     l133:
   872                           
   873                           ;ADC_read.c: 14:     ADIF = 0;
   874     00C5  130C               	bcf	12,6	;volatile
   875     00C6                     l905:
   876                           
   877                           ;ADC_read.c: 15:     ADC = ADRESH;
   878     00C6  081E               	movf	30,w	;volatile
   879     00C7  00A0               	movwf	??_ADC_read
   880     00C8  01A1               	clrf	??_ADC_read+1
   881     00C9  0820               	movf	??_ADC_read,w
   882     00CA  00A3               	movwf	ADC_read@ADC
   883     00CB  0821               	movf	??_ADC_read+1,w
   884     00CC  00A4               	movwf	ADC_read@ADC+1
   885                           
   886                           ;ADC_read.c: 16:     return ADC;
   887     00CD  0824               	movf	ADC_read@ADC+1,w
   888     00CE  00F6               	movwf	?_ADC_read+1
   889     00CF  0823               	movf	ADC_read@ADC,w
   890     00D0  00F5               	movwf	?_ADC_read
   891     00D1                     l134:
   892     00D1  0008               	return
   893     00D2                     __end_of_ADC_read:
   894                           
   895                           	psect	text4
   896     0070                     __ptext4:	
   897 ;; *************** function _ADC_config *****************
   898 ;; Defined at:
   899 ;;		line 8 in file "ADC_config.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  channel         1    wreg     unsigned char 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  channel         1    4[COMMON] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         1       0       0       0       0
   915 ;;      Temps:          1       0       0       0       0
   916 ;;      Totals:         2       0       0       0       0
   917 ;;Total ram usage:        2 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_ADC_read
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     0070                     _ADC_config:	
   928                           ;psect for function _ADC_config
   929                           
   930                           
   931                           ;incstack = 0
   932                           ; Regs used in _ADC_config: [wreg+status,2+status,0]
   933                           ;ADC_config@channel stored from wreg
   934     0070  00F4               	movwf	ADC_config@channel
   935     0071                     l869:
   936                           
   937                           ;ADC_config.c: 9:     PORTA = 0;
   938     0071  1283               	bcf	3,5	;RP0=0, select bank0
   939     0072  1303               	bcf	3,6	;RP1=0, select bank0
   940     0073  0185               	clrf	5	;volatile
   941                           
   942                           ;ADC_config.c: 10:     TRISA = 0;
   943     0074  1683               	bsf	3,5	;RP0=1, select bank1
   944     0075  1303               	bcf	3,6	;RP1=0, select bank1
   945     0076  0185               	clrf	5	;volatile
   946     0077                     l871:
   947                           
   948                           ;ADC_config.c: 11:     ANSEL = ANSEL | 0x01;
   949     0077  1683               	bsf	3,5	;RP0=1, select bank3
   950     0078  1703               	bsf	3,6	;RP1=1, select bank3
   951     0079  0808               	movf	8,w	;volatile
   952     007A  3801               	iorlw	1
   953     007B  0088               	movwf	8	;volatile
   954     007C                     l873:
   955                           
   956                           ;ADC_config.c: 12:     ADCON0bits.ADCS1 = 0;
   957     007C  1283               	bcf	3,5	;RP0=0, select bank0
   958     007D  1303               	bcf	3,6	;RP1=0, select bank0
   959     007E  139F               	bcf	31,7	;volatile
   960     007F                     l875:
   961                           
   962                           ;ADC_config.c: 13:     ADCON0bits.ADCS0 = 1;
   963     007F  171F               	bsf	31,6	;volatile
   964     0080                     l877:
   965                           
   966                           ;ADC_config.c: 15:     ADCON1bits.VCFG1 = 0;
   967     0080  1683               	bsf	3,5	;RP0=1, select bank1
   968     0081  1303               	bcf	3,6	;RP1=0, select bank1
   969     0082  129F               	bcf	31,5	;volatile
   970     0083                     l879:
   971                           
   972                           ;ADC_config.c: 16:     ADCON1bits.VCFG0 = 0;
   973     0083  121F               	bcf	31,4	;volatile
   974     0084                     l881:
   975                           
   976                           ;ADC_config.c: 18:     ADCON1bits.ADFM = 0;
   977     0084  139F               	bcf	31,7	;volatile
   978     0085                     l883:
   979                           
   980                           ;ADC_config.c: 20:     ADCON0bits.CHS = channel;
   981     0085  0874               	movf	ADC_config@channel,w
   982     0086  00F3               	movwf	??_ADC_config
   983     0087  0DF3               	rlf	??_ADC_config,f
   984     0088  0DF3               	rlf	??_ADC_config,f
   985     0089  1283               	bcf	3,5	;RP0=0, select bank0
   986     008A  1303               	bcf	3,6	;RP1=0, select bank0
   987     008B  081F               	movf	31,w	;volatile
   988     008C  0673               	xorwf	??_ADC_config,w
   989     008D  39C3               	andlw	-61
   990     008E  0673               	xorwf	??_ADC_config,w
   991     008F  009F               	movwf	31	;volatile
   992     0090                     l885:
   993                           
   994                           ;ADC_config.c: 22:     ADCON0bits.ADON = 1;
   995     0090  141F               	bsf	31,0	;volatile
   996     0091                     l887:
   997                           
   998                           ;ADC_config.c: 23:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   999     0091  3021               	movlw	33
  1000     0092  00F3               	movwf	??_ADC_config
  1001     0093                     u187:
  1002     0093  0BF3               	decfsz	??_ADC_config,f
  1003     0094  2893               	goto	u187
  1004     0095                     l149:
  1005     0095  0008               	return
  1006     0096                     __end_of_ADC_config:
  1007                           
  1008                           	psect	text5
  1009     0015                     __ptext5:	
  1010 ;; *************** function _isr *****************
  1011 ;; Defined at:
  1012 ;;		line 55 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          3       0       0       0       0
  1029 ;;      Totals:         3       0       0       0       0
  1030 ;;Total ram usage:        3 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		Interrupt level 1
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039     0015                     _isr:	
  1040                           ;psect for function _isr
  1041                           
  1042     0015                     i1l831:
  1043                           
  1044                           ;main.c: 56:    if(PIR1bits.SSPIF == 1){
  1045     0015  1283               	bcf	3,5	;RP0=0, select bank0
  1046     0016  1303               	bcf	3,6	;RP1=0, select bank0
  1047     0017  1D8C               	btfss	12,3	;volatile
  1048     0018  281A               	goto	u6_21
  1049     0019  281B               	goto	u6_20
  1050     001A                     u6_21:
  1051     001A  2869               	goto	i1l109
  1052     001B                     u6_20:
  1053     001B                     i1l833:
  1054                           
  1055                           ;main.c: 58:         SSPCONbits.CKP = 0;
  1056     001B  1214               	bcf	20,4	;volatile
  1057                           
  1058                           ;main.c: 60:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1059     001C  1B14               	btfsc	20,6	;volatile
  1060     001D  281F               	goto	u7_21
  1061     001E  2820               	goto	u7_20
  1062     001F                     u7_21:
  1063     001F  2824               	goto	i1l837
  1064     0020                     u7_20:
  1065     0020                     i1l835:
  1066     0020  1F94               	btfss	20,7	;volatile
  1067     0021  2823               	goto	u8_21
  1068     0022  2824               	goto	u8_20
  1069     0023                     u8_21:
  1070     0023  2829               	goto	i1l845
  1071     0024                     u8_20:
  1072     0024                     i1l837:
  1073                           
  1074                           ;main.c: 61:             z = SSPBUF;
  1075     0024  0813               	movf	19,w	;volatile
  1076     0025  00F8               	movwf	_z
  1077     0026                     i1l839:
  1078                           
  1079                           ;main.c: 62:             SSPCONbits.SSPOV = 0;
  1080     0026  1314               	bcf	20,6	;volatile
  1081     0027                     i1l841:
  1082                           
  1083                           ;main.c: 63:             SSPCONbits.WCOL = 0;
  1084     0027  1394               	bcf	20,7	;volatile
  1085     0028                     i1l843:
  1086                           
  1087                           ;main.c: 64:             SSPCONbits.CKP = 1;
  1088     0028  1614               	bsf	20,4	;volatile
  1089     0029                     i1l845:
  1090                           
  1091                           ;main.c: 67:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1092     0029  1683               	bsf	3,5	;RP0=1, select bank1
  1093     002A  1303               	bcf	3,6	;RP1=0, select bank1
  1094     002B  1A94               	btfsc	20,5	;volatile
  1095     002C  282E               	goto	u9_21
  1096     002D  282F               	goto	u9_20
  1097     002E                     u9_21:
  1098     002E  2848               	goto	i1l100
  1099     002F                     u9_20:
  1100     002F                     i1l847:
  1101     002F  1914               	btfsc	20,2	;volatile
  1102     0030  2832               	goto	u10_21
  1103     0031  2833               	goto	u10_20
  1104     0032                     u10_21:
  1105     0032  2848               	goto	i1l100
  1106     0033                     u10_20:
  1107     0033                     i1l849:
  1108                           
  1109                           ;main.c: 69:             z = SSPBUF;
  1110     0033  1283               	bcf	3,5	;RP0=0, select bank0
  1111     0034  1303               	bcf	3,6	;RP1=0, select bank0
  1112     0035  0813               	movf	19,w	;volatile
  1113     0036  00F8               	movwf	_z
  1114     0037                     i1l851:
  1115                           
  1116                           ;main.c: 71:             PIR1bits.SSPIF = 0;
  1117     0037  118C               	bcf	12,3	;volatile
  1118     0038                     i1l853:
  1119                           
  1120                           ;main.c: 72:             SSPCONbits.CKP = 1;
  1121     0038  1614               	bsf	20,4	;volatile
  1122     0039                     i1l101:	
  1123                           ;main.c: 73:             while(!SSPSTATbits.BF);
  1124                           
  1125     0039  1683               	bsf	3,5	;RP0=1, select bank1
  1126     003A  1303               	bcf	3,6	;RP1=0, select bank1
  1127     003B  1C14               	btfss	20,0	;volatile
  1128     003C  283E               	goto	u11_21
  1129     003D  283F               	goto	u11_20
  1130     003E                     u11_21:
  1131     003E  2839               	goto	i1l101
  1132     003F                     u11_20:
  1133     003F                     i1l855:
  1134                           
  1135                           ;main.c: 74:             PORTD = SSPBUF;
  1136     003F  1283               	bcf	3,5	;RP0=0, select bank0
  1137     0040  1303               	bcf	3,6	;RP1=0, select bank0
  1138     0041  0813               	movf	19,w	;volatile
  1139     0042  0088               	movwf	8	;volatile
  1140                           
  1141                           ;main.c: 75:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1142     0043  3053               	movlw	83
  1143     0044  00F0               	movwf	??_isr
  1144     0045                     u19_27:
  1145     0045  0BF0               	decfsz	??_isr,f
  1146     0046  2845               	goto	u19_27
  1147                           
  1148                           ;main.c: 77:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1149     0047  2866               	goto	i1l104
  1150     0048                     i1l100:
  1151     0048  1A94               	btfsc	20,5	;volatile
  1152     0049  284B               	goto	u12_21
  1153     004A  284C               	goto	u12_20
  1154     004B                     u12_21:
  1155     004B  2866               	goto	i1l104
  1156     004C                     u12_20:
  1157     004C                     i1l857:
  1158     004C  1D14               	btfss	20,2	;volatile
  1159     004D  284F               	goto	u13_21
  1160     004E  2850               	goto	u13_20
  1161     004F                     u13_21:
  1162     004F  2866               	goto	i1l104
  1163     0050                     u13_20:
  1164     0050                     i1l859:
  1165                           
  1166                           ;main.c: 78:             z = SSPBUF;
  1167     0050  1283               	bcf	3,5	;RP0=0, select bank0
  1168     0051  1303               	bcf	3,6	;RP1=0, select bank0
  1169     0052  0813               	movf	19,w	;volatile
  1170     0053  00F8               	movwf	_z
  1171     0054                     i1l861:
  1172                           
  1173                           ;main.c: 79:             BF = 0;
  1174     0054  1683               	bsf	3,5	;RP0=1, select bank1
  1175     0055  1303               	bcf	3,6	;RP1=0, select bank1
  1176     0056  1014               	bcf	20,0	;volatile
  1177                           
  1178                           ;main.c: 80:             SSPBUF = ADC;
  1179     0057  0879               	movf	_ADC,w
  1180     0058  1283               	bcf	3,5	;RP0=0, select bank0
  1181     0059  1303               	bcf	3,6	;RP1=0, select bank0
  1182     005A  0093               	movwf	19	;volatile
  1183     005B                     i1l863:
  1184                           
  1185                           ;main.c: 81:             SSPCONbits.CKP = 1;
  1186     005B  1614               	bsf	20,4	;volatile
  1187                           
  1188                           ;main.c: 82:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1189     005C  3053               	movlw	83
  1190     005D  00F0               	movwf	??_isr
  1191     005E                     u20_27:
  1192     005E  0BF0               	decfsz	??_isr,f
  1193     005F  285E               	goto	u20_27
  1194     0060                     i1l106:	
  1195                           ;main.c: 83:             while(SSPSTATbits.BF);
  1196                           
  1197     0060  1683               	bsf	3,5	;RP0=1, select bank1
  1198     0061  1303               	bcf	3,6	;RP1=0, select bank1
  1199     0062  1814               	btfsc	20,0	;volatile
  1200     0063  2865               	goto	u14_21
  1201     0064  2866               	goto	u14_20
  1202     0065                     u14_21:
  1203     0065  2860               	goto	i1l106
  1204     0066                     u14_20:
  1205     0066                     i1l104:
  1206                           
  1207                           ;main.c: 86:         PIR1bits.SSPIF = 0;
  1208     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1209     0067  1303               	bcf	3,6	;RP1=0, select bank0
  1210     0068  118C               	bcf	12,3	;volatile
  1211     0069                     i1l109:
  1212     0069  0872               	movf	??_isr+2,w
  1213     006A  008A               	movwf	10
  1214     006B  0E71               	swapf	??_isr+1,w
  1215     006C  0083               	movwf	3
  1216     006D  0EFE               	swapf	btemp,f
  1217     006E  0E7E               	swapf	btemp,w
  1218     006F  0009               	retfie
  1219     0070                     __end_of_isr:
  1220     007E                     btemp	set	126	;btemp
  1221     007E                     wtemp0	set	126
  1222                           
  1223                           	psect	intentry
  1224     0004                     __pintentry:	
  1225                           ;incstack = 0
  1226                           ; Regs used in _isr: [wreg]
  1227                           
  1228     0004                     interrupt_function:
  1229     007E                     saved_w	set	btemp
  1230     0004  00FE               	movwf	btemp
  1231     0005  0E03               	swapf	3,w
  1232     0006  00F1               	movwf	??_isr+1
  1233     0007  080A               	movf	10,w
  1234     0008  00F2               	movwf	??_isr+2
  1235     0009  120A  118A  2815   	ljmp	_isr
  1236                           
  1237                           	psect	idloc
  1238                           
  1239                           ;Config register IDLOC0 @ 0x2000
  1240                           ;	unspecified, using default values
  1241     2000                     	org	8192
  1242     2000  3FFF               	dw	16383
  1243                           
  1244                           ;Config register IDLOC1 @ 0x2001
  1245                           ;	unspecified, using default values
  1246     2001                     	org	8193
  1247     2001  3FFF               	dw	16383
  1248                           
  1249                           ;Config register IDLOC2 @ 0x2002
  1250                           ;	unspecified, using default values
  1251     2002                     	org	8194
  1252     2002  3FFF               	dw	16383
  1253                           
  1254                           ;Config register IDLOC3 @ 0x2003
  1255                           ;	unspecified, using default values
  1256     2003                     	org	8195
  1257     2003  3FFF               	dw	16383
  1258                           
  1259                           	psect	config
  1260                           
  1261                           ;Config register CONFIG1 @ 0x2007
  1262                           ;	Oscillator Selection bits
  1263                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1264                           ;	Watchdog Timer Enable bit
  1265                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1266                           ;	Power-up Timer Enable bit
  1267                           ;	PWRTE = OFF, PWRT disabled
  1268                           ;	RE3/MCLR pin function select bit
  1269                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1270                           ;	Code Protection bit
  1271                           ;	CP = OFF, Program memory code protection is disabled
  1272                           ;	Data Code Protection bit
  1273                           ;	CPD = OFF, Data memory code protection is disabled
  1274                           ;	Brown Out Reset Selection bits
  1275                           ;	BOREN = OFF, BOR disabled
  1276                           ;	Internal External Switchover bit
  1277                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1278                           ;	Fail-Safe Clock Monitor Enabled bit
  1279                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1280                           ;	Low Voltage Programming Enable bit
  1281                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1282                           ;	In-Circuit Debugger Mode bit
  1283                           ;	DEBUG = 0x1, unprogramme  1284     2007                     	org	8199
  1285     2007  20D4               	dw	8404
  1286                           
  1287                           ;Config register CONFIG2 @ 0x2008
  1288                           ;	Brown-out Reset Selection bit
  1289                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1290                           ;	Flash Program Memory Self Write Enable bits
  1291                           ;	WRT = OFF, Write protection off
  1292     2008                     	org	8200
  1293     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      8       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_read
    _setup->_I2C_Slave_Init
    _ADC_read->_ADC_config

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     102
                                              5 BANK0      3     3      0
                           _ADC_read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             7     5      2      87
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
                         _ADC_config
 ---------------------------------------------------------------------------------
 (2) _ADC_config                                           2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADC_config
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 23:53:49 2023

                      _z 0078              _SSPSTATbits 0094                       _BF 04A0  
                     l55 00EB                      l120 00FE                      l114 009B  
                    l131 00C1                      l133 00C5                      l134 00D1  
                    l149 0095                      _ADC 0079                      l901 00B8  
                    l741 00D3                      l903 00BE                      l751 00E5  
                    l743 00E1                      l911 00A3                      l905 00C6  
                    l753 00E8                      l745 00E2                      l747 00E3  
                    l749 00E4                      l781 00F8                      l909 0096  
                    l871 0077                      l881 0084                      l873 007C  
                    l883 0085                      l875 007F                      l779 00EC  
                    l885 0090                      l877 0080                      l869 0071  
                    l887 0091                      l879 0083                      _GIE 005F  
                    u160 00C5                      u161 00C4                      u177 00AB  
                    u187 0093                      _isr 0015                     _ADIF 0066  
                   ?_isr 0070                     _PEIE 005E                     u6_20 001B  
                   u6_21 001A                     u7_20 0020                     u7_21 001F  
                   u8_20 0024                     u8_21 0023                     u9_20 002F  
                   u9_21 002E                     _dato 0077                     _main 0096  
                   btemp 007E                     start 000C         __end_of_ADC_read 00D2  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l100 0048                    i1l101 0039                    i1l104 0066  
                  i1l106 0060                    i1l109 0069                    i1l831 0015  
                  i1l841 0027                    i1l833 001B                    i1l851 0037  
                  i1l843 0028                    i1l835 0020                    i1l861 0054  
                  i1l853 0038                    i1l845 0029                    i1l837 0024  
                  i1l863 005B                    i1l855 003F                    i1l847 002F  
                  i1l839 0026                    i1l857 004C                    i1l849 0033  
                  i1l859 0050                    u10_20 0033                    u10_21 0032  
                  u11_20 003F                    u11_21 003E                    u12_20 004C  
                  u12_21 004B                    u20_27 005E                    u13_20 0050  
                  u13_21 004F                    u14_20 0066                    u14_21 0065  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  u19_27 0045                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _SSPIE 0463                    _SSPIF 0063  
                  _setup 00EC                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00B5  
                 ??_main 0025                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPCON 0014                   _SSPBUF 0013  
           ??_ADC_config 0073                   saved_w 007E                ?_ADC_read 0075  
     __end_of_ADC_config 0096  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_setup 00FF          ADC_read@channel 0022               ??_ADC_read 0020  
                ??_setup 0074    I2C_Slave_Init@address 0073               __pnvCOMMON 0079  
             __pmaintext 0096               __pintentry 0004                  _SSPCON2 0091  
                _SSPSTAT 0094                  __ptext1 00EC                  __ptext2 00D2  
                __ptext3 00B5                  __ptext4 0070                  __ptext5 0015  
   end_of_initialization 0011           _I2C_Slave_Init 00D2                _TRISCbits 0087  
 __end_of_I2C_Slave_Init 00EC      start_initialization 000F              __end_of_isr 0070  
      ADC_config@channel 0074          ?_I2C_Slave_Init 0070              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                 _ADC_read 00B5  
      interrupt_function 0004                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F              ADC_read@ADC 0023               _ADC_config 0070  
       ??_I2C_Slave_Init 0073                 intlevel1 0000              ?_ADC_config 0070  
            _SSPCON2bits 0091               _SSPCONbits 0014  
