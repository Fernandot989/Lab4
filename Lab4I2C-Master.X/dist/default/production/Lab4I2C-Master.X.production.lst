

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 23:55:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Version 2.40
    42                           ; Generated 04/07/2022 GMT
    43                           ; 
    44                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000E                     	;# 
    92     000F                     	;# 
    93     0010                     	;# 
    94     0011                     	;# 
    95     0012                     	;# 
    96     0013                     	;# 
    97     0014                     	;# 
    98     0015                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     0019                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     0087                     	;# 
   115     0088                     	;# 
   116     0089                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     008E                     	;# 
   120     008F                     	;# 
   121     0090                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0095                     	;# 
   129     0096                     	;# 
   130     0097                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009A                     	;# 
   134     009B                     	;# 
   135     009C                     	;# 
   136     009D                     	;# 
   137     009E                     	;# 
   138     009F                     	;# 
   139     0105                     	;# 
   140     0107                     	;# 
   141     0108                     	;# 
   142     0109                     	;# 
   143     010C                     	;# 
   144     010C                     	;# 
   145     010D                     	;# 
   146     010E                     	;# 
   147     010F                     	;# 
   148     0185                     	;# 
   149     0187                     	;# 
   150     0188                     	;# 
   151     0189                     	;# 
   152     018C                     	;# 
   153     018D                     	;# 
   154     0000                     	;# 
   155     0001                     	;# 
   156     0002                     	;# 
   157     0003                     	;# 
   158     0004                     	;# 
   159     0005                     	;# 
   160     0006                     	;# 
   161     0007                     	;# 
   162     0008                     	;# 
   163     0009                     	;# 
   164     000A                     	;# 
   165     000B                     	;# 
   166     000C                     	;# 
   167     000D                     	;# 
   168     000E                     	;# 
   169     000E                     	;# 
   170     000F                     	;# 
   171     0010                     	;# 
   172     0011                     	;# 
   173     0012                     	;# 
   174     0013                     	;# 
   175     0014                     	;# 
   176     0015                     	;# 
   177     0015                     	;# 
   178     0016                     	;# 
   179     0017                     	;# 
   180     0018                     	;# 
   181     0019                     	;# 
   182     001A                     	;# 
   183     001B                     	;# 
   184     001B                     	;# 
   185     001C                     	;# 
   186     001D                     	;# 
   187     001E                     	;# 
   188     001F                     	;# 
   189     0081                     	;# 
   190     0085                     	;# 
   191     0086                     	;# 
   192     0087                     	;# 
   193     0088                     	;# 
   194     0089                     	;# 
   195     008C                     	;# 
   196     008D                     	;# 
   197     008E                     	;# 
   198     008F                     	;# 
   199     0090                     	;# 
   200     0091                     	;# 
   201     0092                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0094                     	;# 
   206     0095                     	;# 
   207     0096                     	;# 
   208     0097                     	;# 
   209     0098                     	;# 
   210     0099                     	;# 
   211     009A                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     009F                     	;# 
   217     0105                     	;# 
   218     0107                     	;# 
   219     0108                     	;# 
   220     0109                     	;# 
   221     010C                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     0185                     	;# 
   227     0187                     	;# 
   228     0188                     	;# 
   229     0189                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0000                     	;# 
   233     0001                     	;# 
   234     0002                     	;# 
   235     0003                     	;# 
   236     0004                     	;# 
   237     0005                     	;# 
   238     0006                     	;# 
   239     0007                     	;# 
   240     0008                     	;# 
   241     0009                     	;# 
   242     000A                     	;# 
   243     000B                     	;# 
   244     000C                     	;# 
   245     000D                     	;# 
   246     000E                     	;# 
   247     000E                     	;# 
   248     000F                     	;# 
   249     0010                     	;# 
   250     0011                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0015                     	;# 
   255     0015                     	;# 
   256     0016                     	;# 
   257     0017                     	;# 
   258     0018                     	;# 
   259     0019                     	;# 
   260     001A                     	;# 
   261     001B                     	;# 
   262     001B                     	;# 
   263     001C                     	;# 
   264     001D                     	;# 
   265     001E                     	;# 
   266     001F                     	;# 
   267     0081                     	;# 
   268     0085                     	;# 
   269     0086                     	;# 
   270     0087                     	;# 
   271     0088                     	;# 
   272     0089                     	;# 
   273     008C                     	;# 
   274     008D                     	;# 
   275     008E                     	;# 
   276     008F                     	;# 
   277     0090                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0094                     	;# 
   284     0095                     	;# 
   285     0096                     	;# 
   286     0097                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009A                     	;# 
   290     009B                     	;# 
   291     009C                     	;# 
   292     009D                     	;# 
   293     009E                     	;# 
   294     009F                     	;# 
   295     0105                     	;# 
   296     0107                     	;# 
   297     0108                     	;# 
   298     0109                     	;# 
   299     010C                     	;# 
   300     010C                     	;# 
   301     010D                     	;# 
   302     010E                     	;# 
   303     010F                     	;# 
   304     0185                     	;# 
   305     0187                     	;# 
   306     0188                     	;# 
   307     0189                     	;# 
   308     018C                     	;# 
   309     018D                     	;# 
   310     0000                     	;# 
   311     0001                     	;# 
   312     0002                     	;# 
   313     0003                     	;# 
   314     0004                     	;# 
   315     0005                     	;# 
   316     0006                     	;# 
   317     0007                     	;# 
   318     0008                     	;# 
   319     0009                     	;# 
   320     000A                     	;# 
   321     000B                     	;# 
   322     000C                     	;# 
   323     000D                     	;# 
   324     000E                     	;# 
   325     000E                     	;# 
   326     000F                     	;# 
   327     0010                     	;# 
   328     0011                     	;# 
   329     0012                     	;# 
   330     0013                     	;# 
   331     0014                     	;# 
   332     0015                     	;# 
   333     0015                     	;# 
   334     0016                     	;# 
   335     0017                     	;# 
   336     0018                     	;# 
   337     0019                     	;# 
   338     001A                     	;# 
   339     001B                     	;# 
   340     001B                     	;# 
   341     001C                     	;# 
   342     001D                     	;# 
   343     001E                     	;# 
   344     001F                     	;# 
   345     0081                     	;# 
   346     0085                     	;# 
   347     0086                     	;# 
   348     0087                     	;# 
   349     0088                     	;# 
   350     0089                     	;# 
   351     008C                     	;# 
   352     008D                     	;# 
   353     008E                     	;# 
   354     008F                     	;# 
   355     0090                     	;# 
   356     0091                     	;# 
   357     0092                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0094                     	;# 
   362     0095                     	;# 
   363     0096                     	;# 
   364     0097                     	;# 
   365     0098                     	;# 
   366     0099                     	;# 
   367     009A                     	;# 
   368     009B                     	;# 
   369     009C                     	;# 
   370     009D                     	;# 
   371     009E                     	;# 
   372     009F                     	;# 
   373     0105                     	;# 
   374     0107                     	;# 
   375     0108                     	;# 
   376     0109                     	;# 
   377     010C                     	;# 
   378     010C                     	;# 
   379     010D                     	;# 
   380     010E                     	;# 
   381     010F                     	;# 
   382     0185                     	;# 
   383     0187                     	;# 
   384     0188                     	;# 
   385     0189                     	;# 
   386     018C                     	;# 
   387     018D                     	;# 
   388     0013                     _SSPBUF	set	19
   389     0014                     _SSPCON	set	20
   390     0007                     _PORTC	set	7
   391     0008                     _PORTD	set	8
   392     0006                     _PORTB	set	6
   393     0039                     _RC1	set	57
   394     0038                     _RC0	set	56
   395     0063                     _SSPIF	set	99
   396     005E                     _PEIE	set	94
   397     005F                     _GIE	set	95
   398     0091                     _SSPCON2bits	set	145
   399     0087                     _TRISCbits	set	135
   400     0094                     _SSPSTAT	set	148
   401     0093                     _SSPADD	set	147
   402     0091                     _SSPCON2	set	145
   403     0087                     _TRISC	set	135
   404     0088                     _TRISD	set	136
   405     0086                     _TRISB	set	134
   406     0463                     _SSPIE	set	1123
   407     043C                     _TRISC4	set	1084
   408     043B                     _TRISC3	set	1083
   409     0189                     _ANSELH	set	393
   410     0188                     _ANSEL	set	392
   411                           
   412                           	psect	strings
   413     0800                     __pstrings:
   414     0800                     stringtab:
   415     0800                     __stringtab:
   416     0800                     stringcode:	
   417                           ;	String table - string pointers are 1 byte each
   418                           
   419     0800                     stringdir:
   420     0800  3008               	movlw	high stringdir
   421     0801  008A               	movwf	10
   422     0802  0804               	movf	4,w
   423     0803  0A84               	incf	4,f
   424     0804  0782               	addwf	2,f
   425     0805                     __stringbase:
   426     0805  3400               	retlw	0
   427     0806                     __end_of__stringtab:
   428     0806                     STR_1:
   429     0806  3470               	retlw	112	;'p'
   430     0807  346F               	retlw	111	;'o'
   431     0808  3474               	retlw	116	;'t'
   432     0809  343A               	retlw	58	;':'
   433     080A  3400               	retlw	0
   434     080B                     STR_2:
   435     080B  342E               	retlw	46	;'.'
   436     080C  3400               	retlw	0
   437                           
   438                           	psect	cinit
   439     07F3                     start_initialization:	
   440                           ; #config settings
   441                           
   442     07F3                     __initialization:
   443                           
   444                           ; Clear objects allocated to BANK0
   445     07F3  1383               	bcf	3,7	;select IRP bank0
   446     07F4  304C               	movlw	low __pbssBANK0
   447     07F5  0084               	movwf	4
   448     07F6  3062               	movlw	low (__pbssBANK0+22)
   449     07F7  120A  158A  2710  120A  118A  	fcall	clear_ram0
   450     07FC                     end_of_initialization:	
   451                           ;End of C runtime variable initialization code
   452                           
   453     07FC                     __end_of__initialization:
   454     07FC  0183               	clrf	3
   455     07FD  120A  118A  2D46   	ljmp	_main	;jump to C main() function
   456                           
   457                           	psect	bssBANK0
   458     004C                     __pbssBANK0:
   459     004C                     _vADC:
   460     004C                     	ds	4
   461     0050                     _u:
   462     0050                     	ds	2
   463     0052                     _de:
   464     0052                     	ds	2
   465     0054                     _ce:
   466     0054                     	ds	2
   467     0056                     _cent:
   468     0056                     	ds	1
   469     0057                     _decen:
   470     0057                     	ds	1
   471     0058                     _unid:
   472     0058                     	ds	1
   473     0059                     _an:
   474     0059                     	ds	1
   475     005A                     _mes:
   476     005A                     	ds	1
   477     005B                     _dia:
   478     005B                     	ds	1
   479     005C                     _hor:
   480     005C                     	ds	1
   481     005D                     _min:
   482     005D                     	ds	1
   483     005E                     _seg:
   484     005E                     	ds	1
   485     005F                     _va:
   486     005F                     	ds	1
   487     0060                     _t:
   488     0060                     	ds	1
   489     0061                     _ADC:
   490     0061                     	ds	1
   491                           
   492                           	psect	clrtext
   493     0F10                     clear_ram0:	
   494                           ;	Called with FSR containing the base address, and
   495                           ;	W with the last address+1
   496                           
   497     0F10  0064               	clrwdt	;clear the watchdog before getting into this loop
   498     0F11                     clrloop0:
   499     0F11  0180               	clrf	0	;clear RAM location pointed to by FSR
   500     0F12  0A84               	incf	4,f	;increment pointer
   501     0F13  0604               	xorwf	4,w	;XOR with final address
   502     0F14  1903               	btfsc	3,2	;have we reached the end yet?
   503     0F15  3400               	retlw	0	;all done for this memory range, return
   504     0F16  0604               	xorwf	4,w	;XOR again to restore value
   505     0F17  2F11               	goto	clrloop0	;do the next byte
   506                           
   507                           	psect	cstackCOMMON
   508     0070                     __pcstackCOMMON:
   509     0070                     ?_setup:
   510     0070                     ?_Lcd8_Init:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_Lcd8_Clear:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_Lcd8_Write_String:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_I2C_Master_Start:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ??_I2C_Master_Start:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_I2C_Master_Write:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_I2C_Master_Stop:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ??_I2C_Master_Stop:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_intachar:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ??_intachar:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_Lcd8_Write_Char:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ??_Lcd8_Write_Char:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_I2C_Master_RepeatedStart:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ??_I2C_Master_RepeatedStart:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_main:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_I2C_Master_Wait:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ??_I2C_Master_Wait:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_Lcd8_Cmd:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ??_Lcd8_Cmd:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_I2C_Master_Read:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?___awdiv:	
   571                           ; 2 bytes @ 0x0
   572                           
   573     0070                     ?___awmod:	
   574                           ; 2 bytes @ 0x0
   575                           
   576     0070                     ?___lwdiv:	
   577                           ; 2 bytes @ 0x0
   578                           
   579     0070                     ?___lwmod:	
   580                           ; 2 bytes @ 0x0
   581                           
   582     0070                     ?___lmul:	
   583                           ; 2 bytes @ 0x0
   584                           
   585     0070                     ?___lldiv:	
   586                           ; 4 bytes @ 0x0
   587                           
   588     0070                     ?___fltol:	
   589                           ; 4 bytes @ 0x0
   590                           
   591     0070                     intachar@n:	
   592                           ; 4 bytes @ 0x0
   593                           
   594     0070                     I2C_Master_Write@d:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     I2C_Master_Read@a:	
   598                           ; 2 bytes @ 0x0
   599                           
   600     0070                     ___awdiv@divisor:	
   601                           ; 2 bytes @ 0x0
   602                           
   603     0070                     ___awmod@divisor:	
   604                           ; 2 bytes @ 0x0
   605                           
   606     0070                     ___lwdiv@divisor:	
   607                           ; 2 bytes @ 0x0
   608                           
   609     0070                     ___lwmod@divisor:	
   610                           ; 2 bytes @ 0x0
   611                           
   612     0070                     ___lmul@multiplier:	
   613                           ; 2 bytes @ 0x0
   614                           
   615     0070                     ___lldiv@divisor:	
   616                           ; 4 bytes @ 0x0
   617                           
   618     0070                     ___fltol@f1:	
   619                           ; 4 bytes @ 0x0
   620                           
   621                           
   622                           ; 4 bytes @ 0x0
   623     0070                     	ds	1
   624     0071                     Lcd8_Write_Char@a:
   625                           
   626                           ; 1 bytes @ 0x1
   627     0071                     	ds	1
   628     0072                     ??_Lcd8_Write_String:
   629     0072                     ??_I2C_Master_Write:	
   630                           ; 1 bytes @ 0x2
   631                           
   632     0072                     ??_I2C_Master_Read:	
   633                           ; 1 bytes @ 0x2
   634                           
   635     0072                     Lcd8_Cmd@a:	
   636                           ; 1 bytes @ 0x2
   637                           
   638     0072                     ___awdiv@dividend:	
   639                           ; 1 bytes @ 0x2
   640                           
   641     0072                     ___awmod@dividend:	
   642                           ; 2 bytes @ 0x2
   643                           
   644     0072                     ___lwdiv@dividend:	
   645                           ; 2 bytes @ 0x2
   646                           
   647     0072                     ___lwmod@dividend:	
   648                           ; 2 bytes @ 0x2
   649                           
   650                           
   651                           ; 2 bytes @ 0x2
   652     0072                     	ds	1
   653     0073                     ??_Lcd8_Init:
   654     0073                     ??_Lcd8_Clear:	
   655                           ; 1 bytes @ 0x3
   656                           
   657     0073                     ?_Lcd8_Set_Cursor:	
   658                           ; 1 bytes @ 0x3
   659                           
   660     0073                     Lcd8_Set_Cursor@b:	
   661                           ; 1 bytes @ 0x3
   662                           
   663     0073                     Lcd8_Write_String@i:	
   664                           ; 1 bytes @ 0x3
   665                           
   666                           
   667                           ; 1 bytes @ 0x3
   668     0073                     	ds	1
   669     0074                     ??_Lcd8_Set_Cursor:
   670     0074                     ??___awdiv:	
   671                           ; 1 bytes @ 0x4
   672                           
   673     0074                     ??___awmod:	
   674                           ; 1 bytes @ 0x4
   675                           
   676     0074                     ??___fltol:	
   677                           ; 1 bytes @ 0x4
   678                           
   679     0074                     ??___lwdiv:	
   680                           ; 1 bytes @ 0x4
   681                           
   682     0074                     ??___lwmod:	
   683                           ; 1 bytes @ 0x4
   684                           
   685     0074                     Lcd8_Set_Cursor@a:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     Lcd8_Write_String@a:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     I2C_Master_Read@temp:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     ___lmul@multiplicand:	
   695                           ; 2 bytes @ 0x4
   696                           
   697     0074                     ___lldiv@dividend:	
   698                           ; 4 bytes @ 0x4
   699                           
   700                           
   701                           ; 4 bytes @ 0x4
   702     0074                     	ds	1
   703     0075                     Lcd8_Set_Cursor@x:
   704     0075                     ___awdiv@counter:	
   705                           ; 1 bytes @ 0x5
   706                           
   707     0075                     ___awmod@counter:	
   708                           ; 1 bytes @ 0x5
   709                           
   710     0075                     ___lwmod@counter:	
   711                           ; 1 bytes @ 0x5
   712                           
   713     0075                     ___lwdiv@quotient:	
   714                           ; 1 bytes @ 0x5
   715                           
   716                           
   717                           ; 2 bytes @ 0x5
   718     0075                     	ds	1
   719     0076                     ___awdiv@sign:
   720     0076                     ___awmod@sign:	
   721                           ; 1 bytes @ 0x6
   722                           
   723                           
   724                           ; 1 bytes @ 0x6
   725     0076                     	ds	1
   726     0077                     ___lwdiv@counter:
   727     0077                     ___awdiv@quotient:	
   728                           ; 1 bytes @ 0x7
   729                           
   730                           
   731                           ; 2 bytes @ 0x7
   732     0077                     	ds	1
   733     0078                     ??___lmul:
   734     0078                     ??___lldiv:	
   735                           ; 1 bytes @ 0x8
   736                           
   737     0078                     ___fltol@sign1:	
   738                           ; 1 bytes @ 0x8
   739                           
   740                           
   741                           ; 1 bytes @ 0x8
   742     0078                     	ds	1
   743     0079                     ___fltol@exp1:
   744     0079                     ___lmul@product:	
   745                           ; 1 bytes @ 0x9
   746                           
   747     0079                     ___lldiv@quotient:	
   748                           ; 4 bytes @ 0x9
   749                           
   750                           
   751                           ; 4 bytes @ 0x9
   752     0079                     	ds	1
   753     007A                     ?_deshacer:
   754     007A                     deshacer@p:	
   755                           ; 1 bytes @ 0xA
   756                           
   757                           
   758                           ; 2 bytes @ 0xA
   759     007A                     	ds	2
   760     007C                     deshacer@nume:
   761                           
   762                           ; 2 bytes @ 0xC
   763     007C                     	ds	1
   764     007D                     ??___aldiv:
   765     007D                     ___lldiv@counter:	
   766                           ; 1 bytes @ 0xD
   767                           
   768                           
   769                           ; 1 bytes @ 0xD
   770     007D                     	ds	1
   771     007E                     ??_setup:
   772                           
   773                           	psect	cstackBANK0
   774     0020                     __pcstackBANK0:	
   775                           ; 1 bytes @ 0xE
   776                           
   777     0020                     ??_deshacer:
   778     0020                     ?_I2C_Master_Init:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0020                     ?___aldiv:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0020                     I2C_Master_Init@c:	
   785                           ; 4 bytes @ 0x0
   786                           
   787     0020                     ___aldiv@divisor:	
   788                           ; 4 bytes @ 0x0
   789                           
   790                           
   791                           ; 4 bytes @ 0x0
   792     0020                     	ds	2
   793     0022                     deshacer@cente:
   794                           
   795                           ; 1 bytes @ 0x2
   796     0022                     	ds	1
   797     0023                     deshacer@uni:
   798                           
   799                           ; 1 bytes @ 0x3
   800     0023                     	ds	1
   801     0024                     ??_I2C_Master_Init:
   802     0024                     deshacer@dec:	
   803                           ; 1 bytes @ 0x4
   804                           
   805     0024                     ___aldiv@dividend:	
   806                           ; 1 bytes @ 0x4
   807                           
   808                           
   809                           ; 4 bytes @ 0x4
   810     0024                     	ds	4
   811     0028                     ___aldiv@counter:
   812                           
   813                           ; 1 bytes @ 0x8
   814     0028                     	ds	1
   815     0029                     ___aldiv@sign:
   816                           
   817                           ; 1 bytes @ 0x9
   818     0029                     	ds	1
   819     002A                     ___aldiv@quotient:
   820                           
   821                           ; 4 bytes @ 0xA
   822     002A                     	ds	4
   823     002E                     ?_map:
   824     002E                     map@minen:	
   825                           ; 2 bytes @ 0xE
   826                           
   827                           
   828                           ; 1 bytes @ 0xE
   829     002E                     	ds	1
   830     002F                     map@maxen:
   831                           
   832                           ; 1 bytes @ 0xF
   833     002F                     	ds	1
   834     0030                     map@minsa:
   835                           
   836                           ; 1 bytes @ 0x10
   837     0030                     	ds	1
   838     0031                     map@maxsa:
   839                           
   840                           ; 2 bytes @ 0x11
   841     0031                     	ds	2
   842     0033                     ??_map:
   843                           
   844                           ; 1 bytes @ 0x13
   845     0033                     	ds	4
   846     0037                     map@resultado:
   847                           
   848                           ; 2 bytes @ 0x17
   849     0037                     	ds	2
   850     0039                     map@v:
   851                           
   852                           ; 1 bytes @ 0x19
   853     0039                     	ds	1
   854     003A                     ?___xxtofl:
   855     003A                     ___xxtofl@val:	
   856                           ; 4 bytes @ 0x1A
   857                           
   858                           
   859                           ; 4 bytes @ 0x1A
   860     003A                     	ds	4
   861     003E                     ??___xxtofl:
   862                           
   863                           ; 1 bytes @ 0x1E
   864     003E                     	ds	4
   865     0042                     ___xxtofl@sign:
   866                           
   867                           ; 1 bytes @ 0x22
   868     0042                     	ds	1
   869     0043                     ___xxtofl@exp:
   870                           
   871                           ; 1 bytes @ 0x23
   872     0043                     	ds	1
   873     0044                     ___xxtofl@arg:
   874                           
   875                           ; 4 bytes @ 0x24
   876     0044                     	ds	4
   877     0048                     ??_main:
   878                           
   879                           ; 1 bytes @ 0x28
   880     0048                     	ds	4
   881                           
   882                           	psect	maintext
   883     0546                     __pmaintext:	
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 62 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : B00/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0
   905 ;;      Temps:          0       4       0       0       0
   906 ;;      Totals:         0       4       0       0       0
   907 ;;Total ram usage:        4 bytes
   908 ;; Hardware stack levels required when called: 3
   909 ;; This function calls:
   910 ;;		_I2C_Master_Read
   911 ;;		_I2C_Master_RepeatedStart
   912 ;;		_I2C_Master_Start
   913 ;;		_I2C_Master_Stop
   914 ;;		_I2C_Master_Write
   915 ;;		_Lcd8_Clear
   916 ;;		_Lcd8_Init
   917 ;;		_Lcd8_Set_Cursor
   918 ;;		_Lcd8_Write_Char
   919 ;;		_Lcd8_Write_String
   920 ;;		___fltol
   921 ;;		___xxtofl
   922 ;;		_deshacer
   923 ;;		_intachar
   924 ;;		_map
   925 ;;		_setup
   926 ;; This function is called by:
   927 ;;		Startup code after reset
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931     0546                     _main:	
   932                           ;psect for function _main
   933                           
   934     0546                     l1978:	
   935                           ;incstack = 0
   936                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   937                           
   938                           
   939                           ;main.c: 63:     setup();
   940     0546  120A  158A  2790  120A  118A  	fcall	_setup
   941                           
   942                           ;main.c: 64:     Lcd8_Init();
   943     054B  120A  118A  21A2  120A  118A  	fcall	_Lcd8_Init
   944                           
   945                           ;main.c: 65:     Lcd8_Clear();
   946     0550  120A  158A  2740  120A  118A  	fcall	_Lcd8_Clear
   947                           
   948                           ;main.c: 66:     Lcd8_Set_Cursor(1,2);
   949     0555  3002               	movlw	2
   950     0556  00F3               	movwf	Lcd8_Set_Cursor@b
   951     0557  3001               	movlw	1
   952     0558  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
   953     055D                     l1980:
   954                           
   955                           ;main.c: 67:     Lcd8_Write_String("pot:");
   956     055D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   957     055E  120A  158A  27B0  120A  118A  	fcall	_Lcd8_Write_String
   958     0563                     l1982:
   959                           
   960                           ;main.c: 69:         I2C_Master_Start();
   961     0563  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Start
   962     0568                     l1984:
   963                           
   964                           ;main.c: 70:         I2C_Master_Write(0x41);
   965     0568  3041               	movlw	65
   966     0569  00F0               	movwf	I2C_Master_Write@d
   967     056A  3000               	movlw	0
   968     056B  00F1               	movwf	I2C_Master_Write@d+1
   969     056C  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
   970     0571                     l1986:
   971                           
   972                           ;main.c: 71:         ADC = I2C_Master_Read(0);
   973     0571  3000               	movlw	0
   974     0572  00F0               	movwf	I2C_Master_Read@a
   975     0573  00F1               	movwf	I2C_Master_Read@a+1
   976     0574  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
   977     0579  0870               	movf	?_I2C_Master_Read,w
   978     057A  1283               	bcf	3,5	;RP0=0, select bank0
   979     057B  1303               	bcf	3,6	;RP1=0, select bank0
   980     057C  00E1               	movwf	_ADC
   981     057D                     l1988:
   982                           
   983                           ;main.c: 72:         I2C_Master_Stop();
   984     057D  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Stop
   985     0582                     l1990:
   986                           
   987                           ;main.c: 73:         PORTB = ADC;
   988     0582  1283               	bcf	3,5	;RP0=0, select bank0
   989     0583  1303               	bcf	3,6	;RP1=0, select bank0
   990     0584  0861               	movf	_ADC,w
   991     0585  0086               	movwf	6	;volatile
   992     0586                     l1992:
   993                           
   994                           ;main.c: 75:         vADC = map(ADC, 0, 255, 0, 500);
   995     0586  30F4               	movlw	244
   996     0587  00B1               	movwf	map@maxsa
   997     0588  3001               	movlw	1
   998     0589  00B2               	movwf	map@maxsa+1
   999     058A  01B0               	clrf	map@minsa
  1000     058B  30FF               	movlw	255
  1001     058C  00AF               	movwf	map@maxen
  1002     058D  01AE               	clrf	map@minen
  1003     058E  0861               	movf	_ADC,w
  1004     058F  120A  118A  210B  120A  118A  	fcall	_map
  1005     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1006     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1007     0596  082E               	movf	?_map,w
  1008     0597  00C8               	movwf	??_main
  1009     0598  082F               	movf	?_map+1,w
  1010     0599  00C9               	movwf	??_main+1
  1011     059A  01CA               	clrf	??_main+2
  1012     059B  01CB               	clrf	??_main+3
  1013     059C  084B               	movf	??_main+3,w
  1014     059D  00BD               	movwf	___xxtofl@val+3
  1015     059E  084A               	movf	??_main+2,w
  1016     059F  00BC               	movwf	___xxtofl@val+2
  1017     05A0  0849               	movf	??_main+1,w
  1018     05A1  00BB               	movwf	___xxtofl@val+1
  1019     05A2  0848               	movf	??_main,w
  1020     05A3  00BA               	movwf	___xxtofl@val
  1021     05A4  3000               	movlw	0
  1022     05A5  120A  118A  248C  120A  118A  	fcall	___xxtofl
  1023     05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1024     05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1025     05AC  083D               	movf	?___xxtofl+3,w
  1026     05AD  00CF               	movwf	_vADC+3
  1027     05AE  083C               	movf	?___xxtofl+2,w
  1028     05AF  00CE               	movwf	_vADC+2
  1029     05B0  083B               	movf	?___xxtofl+1,w
  1030     05B1  00CD               	movwf	_vADC+1
  1031     05B2  083A               	movf	?___xxtofl,w
  1032     05B3  00CC               	movwf	_vADC
  1033     05B4                     l1994:
  1034                           
  1035                           ;main.c: 76:         unid = intachar(deshacer(2, vADC));
  1036     05B4  3002               	movlw	2
  1037     05B5  00FA               	movwf	deshacer@p
  1038     05B6  3000               	movlw	0
  1039     05B7  00FB               	movwf	deshacer@p+1
  1040     05B8  084F               	movf	_vADC+3,w
  1041     05B9  00F3               	movwf	___fltol@f1+3
  1042     05BA  084E               	movf	_vADC+2,w
  1043     05BB  00F2               	movwf	___fltol@f1+2
  1044     05BC  084D               	movf	_vADC+1,w
  1045     05BD  00F1               	movwf	___fltol@f1+1
  1046     05BE  084C               	movf	_vADC,w
  1047     05BF  00F0               	movwf	___fltol@f1
  1048     05C0  120A  118A  2379  120A  118A  	fcall	___fltol
  1049     05C5  0871               	movf	?___fltol+1,w
  1050     05C6  00FD               	movwf	deshacer@nume+1
  1051     05C7  0870               	movf	?___fltol,w
  1052     05C8  00FC               	movwf	deshacer@nume
  1053     05C9  120A  118A  224D  120A  118A  	fcall	_deshacer
  1054     05CE  120A  118A  2152  120A  118A  	fcall	_intachar
  1055     05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1056     05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1057     05D5  00D8               	movwf	_unid
  1058     05D6                     l1996:
  1059                           
  1060                           ;main.c: 77:         Lcd8_Set_Cursor(2,1);
  1061     05D6  01F3               	clrf	Lcd8_Set_Cursor@b
  1062     05D7  0AF3               	incf	Lcd8_Set_Cursor@b,f
  1063     05D8  3002               	movlw	2
  1064     05D9  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1065     05DE                     l1998:
  1066                           
  1067                           ;main.c: 78:         Lcd8_Write_Char(unid);
  1068     05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1069     05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1070     05E0  0858               	movf	_unid,w
  1071     05E1  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1072     05E6                     l2000:
  1073                           
  1074                           ;main.c: 79:         Lcd8_Set_Cursor(2,2);
  1075     05E6  3002               	movlw	2
  1076     05E7  00F3               	movwf	Lcd8_Set_Cursor@b
  1077     05E8  3002               	movlw	2
  1078     05E9  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1079     05EE                     l2002:
  1080                           
  1081                           ;main.c: 80:         Lcd8_Write_String(".");
  1082     05EE  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1083     05EF  120A  158A  27B0  120A  118A  	fcall	_Lcd8_Write_String
  1084     05F4                     l2004:
  1085                           
  1086                           ;main.c: 81:         decen = intachar(deshacer(1, vADC));
  1087     05F4  3001               	movlw	1
  1088     05F5  00FA               	movwf	deshacer@p
  1089     05F6  3000               	movlw	0
  1090     05F7  00FB               	movwf	deshacer@p+1
  1091     05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1092     05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1093     05FA  084F               	movf	_vADC+3,w
  1094     05FB  00F3               	movwf	___fltol@f1+3
  1095     05FC  084E               	movf	_vADC+2,w
  1096     05FD  00F2               	movwf	___fltol@f1+2
  1097     05FE  084D               	movf	_vADC+1,w
  1098     05FF  00F1               	movwf	___fltol@f1+1
  1099     0600  084C               	movf	_vADC,w
  1100     0601  00F0               	movwf	___fltol@f1
  1101     0602  120A  118A  2379  120A  118A  	fcall	___fltol
  1102     0607  0871               	movf	?___fltol+1,w
  1103     0608  00FD               	movwf	deshacer@nume+1
  1104     0609  0870               	movf	?___fltol,w
  1105     060A  00FC               	movwf	deshacer@nume
  1106     060B  120A  118A  224D  120A  118A  	fcall	_deshacer
  1107     0610  120A  118A  2152  120A  118A  	fcall	_intachar
  1108     0615  1283               	bcf	3,5	;RP0=0, select bank0
  1109     0616  1303               	bcf	3,6	;RP1=0, select bank0
  1110     0617  00D7               	movwf	_decen
  1111     0618                     l2006:
  1112                           
  1113                           ;main.c: 82:         Lcd8_Set_Cursor(2,3);
  1114     0618  3003               	movlw	3
  1115     0619  00F3               	movwf	Lcd8_Set_Cursor@b
  1116     061A  3002               	movlw	2
  1117     061B  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1118     0620                     l2008:
  1119                           
  1120                           ;main.c: 83:         Lcd8_Write_Char(decen);
  1121     0620  1283               	bcf	3,5	;RP0=0, select bank0
  1122     0621  1303               	bcf	3,6	;RP1=0, select bank0
  1123     0622  0857               	movf	_decen,w
  1124     0623  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1125     0628                     l2010:
  1126                           
  1127                           ;main.c: 84:         cent = intachar(deshacer(0, vADC));
  1128     0628  3000               	movlw	0
  1129     0629  00FA               	movwf	deshacer@p
  1130     062A  00FB               	movwf	deshacer@p+1
  1131     062B  1283               	bcf	3,5	;RP0=0, select bank0
  1132     062C  1303               	bcf	3,6	;RP1=0, select bank0
  1133     062D  084F               	movf	_vADC+3,w
  1134     062E  00F3               	movwf	___fltol@f1+3
  1135     062F  084E               	movf	_vADC+2,w
  1136     0630  00F2               	movwf	___fltol@f1+2
  1137     0631  084D               	movf	_vADC+1,w
  1138     0632  00F1               	movwf	___fltol@f1+1
  1139     0633  084C               	movf	_vADC,w
  1140     0634  00F0               	movwf	___fltol@f1
  1141     0635  120A  118A  2379  120A  118A  	fcall	___fltol
  1142     063A  0871               	movf	?___fltol+1,w
  1143     063B  00FD               	movwf	deshacer@nume+1
  1144     063C  0870               	movf	?___fltol,w
  1145     063D  00FC               	movwf	deshacer@nume
  1146     063E  120A  118A  224D  120A  118A  	fcall	_deshacer
  1147     0643  120A  118A  2152  120A  118A  	fcall	_intachar
  1148     0648  1283               	bcf	3,5	;RP0=0, select bank0
  1149     0649  1303               	bcf	3,6	;RP1=0, select bank0
  1150     064A  00D6               	movwf	_cent
  1151     064B                     l2012:
  1152                           
  1153                           ;main.c: 85:         Lcd8_Set_Cursor(2,4);
  1154     064B  3004               	movlw	4
  1155     064C  00F3               	movwf	Lcd8_Set_Cursor@b
  1156     064D  3002               	movlw	2
  1157     064E  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1158     0653                     l2014:
  1159                           
  1160                           ;main.c: 86:         Lcd8_Write_Char(cent);
  1161     0653  1283               	bcf	3,5	;RP0=0, select bank0
  1162     0654  1303               	bcf	3,6	;RP1=0, select bank0
  1163     0655  0856               	movf	_cent,w
  1164     0656  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1165                           
  1166                           ;main.c: 87:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1167     065B  3002               	movlw	2
  1168     065C  1283               	bcf	3,5	;RP0=0, select bank0
  1169     065D  1303               	bcf	3,6	;RP1=0, select bank0
  1170     065E  00CA               	movwf	??_main+2
  1171     065F  3004               	movlw	4
  1172     0660  00C9               	movwf	??_main+1
  1173     0661  30B9               	movlw	185
  1174     0662  00C8               	movwf	??_main
  1175     0663                     u1977:
  1176     0663  0BC8               	decfsz	??_main,f
  1177     0664  2E63               	goto	u1977
  1178     0665  0BC9               	decfsz	??_main+1,f
  1179     0666  2E63               	goto	u1977
  1180     0667  0BCA               	decfsz	??_main+2,f
  1181     0668  2E63               	goto	u1977
  1182     0669  2E6A               	nop2
  1183     066A                     l2016:
  1184                           
  1185                           ;main.c: 90:         I2C_Master_Start();
  1186     066A  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Start
  1187     066F                     l2018:
  1188                           
  1189                           ;main.c: 91:         I2C_Master_Write(0xD0);
  1190     066F  30D0               	movlw	208
  1191     0670  00F0               	movwf	I2C_Master_Write@d
  1192     0671  3000               	movlw	0
  1193     0672  00F1               	movwf	I2C_Master_Write@d+1
  1194     0673  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1195     0678                     l2020:
  1196                           
  1197                           ;main.c: 92:         I2C_Master_Write(0x00);
  1198     0678  3000               	movlw	0
  1199     0679  00F0               	movwf	I2C_Master_Write@d
  1200     067A  00F1               	movwf	I2C_Master_Write@d+1
  1201     067B  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1202     0680                     l2022:
  1203                           
  1204                           ;main.c: 93:         I2C_Master_RepeatedStart();
  1205     0680  120A  158A  2718  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1206     0685                     l2024:
  1207                           
  1208                           ;main.c: 94:         I2C_Master_Write(0xD1);
  1209     0685  30D1               	movlw	209
  1210     0686  00F0               	movwf	I2C_Master_Write@d
  1211     0687  3000               	movlw	0
  1212     0688  00F1               	movwf	I2C_Master_Write@d+1
  1213     0689  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1214     068E                     l2026:
  1215                           
  1216                           ;main.c: 95:         seg = I2C_Master_Read(0);
  1217     068E  3000               	movlw	0
  1218     068F  00F0               	movwf	I2C_Master_Read@a
  1219     0690  00F1               	movwf	I2C_Master_Read@a+1
  1220     0691  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1221     0696  0870               	movf	?_I2C_Master_Read,w
  1222     0697  1283               	bcf	3,5	;RP0=0, select bank0
  1223     0698  1303               	bcf	3,6	;RP1=0, select bank0
  1224     0699  00DE               	movwf	_seg
  1225     069A                     l2028:
  1226                           
  1227                           ;main.c: 97:         Lcd8_Set_Cursor(1,14);
  1228     069A  300E               	movlw	14
  1229     069B  00F3               	movwf	Lcd8_Set_Cursor@b
  1230     069C  3001               	movlw	1
  1231     069D  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1232     06A2                     l2030:
  1233                           
  1234                           ;main.c: 98:         Lcd8_Write_Char(seg);
  1235     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1236     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1237     06A4  085E               	movf	_seg,w
  1238     06A5  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1239     06AA                     l2032:
  1240                           
  1241                           ;main.c: 100:         I2C_Master_Start();
  1242     06AA  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Start
  1243     06AF                     l2034:
  1244                           
  1245                           ;main.c: 101:         I2C_Master_Write(0xD0);
  1246     06AF  30D0               	movlw	208
  1247     06B0  00F0               	movwf	I2C_Master_Write@d
  1248     06B1  3000               	movlw	0
  1249     06B2  00F1               	movwf	I2C_Master_Write@d+1
  1250     06B3  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1251     06B8                     l2036:
  1252                           
  1253                           ;main.c: 102:         I2C_Master_Write(0x01);
  1254     06B8  3001               	movlw	1
  1255     06B9  00F0               	movwf	I2C_Master_Write@d
  1256     06BA  3000               	movlw	0
  1257     06BB  00F1               	movwf	I2C_Master_Write@d+1
  1258     06BC  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1259     06C1                     l2038:
  1260                           
  1261                           ;main.c: 103:         I2C_Master_RepeatedStart();
  1262     06C1  120A  158A  2718  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1263     06C6                     l2040:
  1264                           
  1265                           ;main.c: 104:         I2C_Master_Write(0xD1);
  1266     06C6  30D1               	movlw	209
  1267     06C7  00F0               	movwf	I2C_Master_Write@d
  1268     06C8  3000               	movlw	0
  1269     06C9  00F1               	movwf	I2C_Master_Write@d+1
  1270     06CA  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1271     06CF                     l2042:
  1272                           
  1273                           ;main.c: 105:         min = I2C_Master_Read(0);
  1274     06CF  3000               	movlw	0
  1275     06D0  00F0               	movwf	I2C_Master_Read@a
  1276     06D1  00F1               	movwf	I2C_Master_Read@a+1
  1277     06D2  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1278     06D7  0870               	movf	?_I2C_Master_Read,w
  1279     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1280     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1281     06DA  00DD               	movwf	_min
  1282     06DB                     l2044:
  1283                           
  1284                           ;main.c: 107:         Lcd8_Set_Cursor(1,11);
  1285     06DB  300B               	movlw	11
  1286     06DC  00F3               	movwf	Lcd8_Set_Cursor@b
  1287     06DD  3001               	movlw	1
  1288     06DE  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1289     06E3                     l2046:
  1290                           
  1291                           ;main.c: 108:         Lcd8_Write_Char(seg);
  1292     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1293     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1294     06E5  085E               	movf	_seg,w
  1295     06E6  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1296     06EB                     l2048:
  1297                           
  1298                           ;main.c: 110:         I2C_Master_Start();
  1299     06EB  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Start
  1300     06F0                     l2050:
  1301                           
  1302                           ;main.c: 111:         I2C_Master_Write(0xD0);
  1303     06F0  30D0               	movlw	208
  1304     06F1  00F0               	movwf	I2C_Master_Write@d
  1305     06F2  3000               	movlw	0
  1306     06F3  00F1               	movwf	I2C_Master_Write@d+1
  1307     06F4  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1308     06F9                     l2052:
  1309                           
  1310                           ;main.c: 112:         I2C_Master_Write(0x02);
  1311     06F9  3002               	movlw	2
  1312     06FA  00F0               	movwf	I2C_Master_Write@d
  1313     06FB  3000               	movlw	0
  1314     06FC  00F1               	movwf	I2C_Master_Write@d+1
  1315     06FD  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1316     0702                     l2054:
  1317                           
  1318                           ;main.c: 113:         I2C_Master_RepeatedStart();
  1319     0702  120A  158A  2718  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1320     0707                     l2056:
  1321                           
  1322                           ;main.c: 114:         I2C_Master_Write(0xD1);
  1323     0707  30D1               	movlw	209
  1324     0708  00F0               	movwf	I2C_Master_Write@d
  1325     0709  3000               	movlw	0
  1326     070A  00F1               	movwf	I2C_Master_Write@d+1
  1327     070B  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1328     0710                     l2058:
  1329                           
  1330                           ;main.c: 115:         hor = I2C_Master_Read(0);
  1331     0710  3000               	movlw	0
  1332     0711  00F0               	movwf	I2C_Master_Read@a
  1333     0712  00F1               	movwf	I2C_Master_Read@a+1
  1334     0713  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1335     0718  0870               	movf	?_I2C_Master_Read,w
  1336     0719  1283               	bcf	3,5	;RP0=0, select bank0
  1337     071A  1303               	bcf	3,6	;RP1=0, select bank0
  1338     071B  00DC               	movwf	_hor
  1339     071C                     l2060:
  1340                           
  1341                           ;main.c: 117:         Lcd8_Set_Cursor(1,8);
  1342     071C  3008               	movlw	8
  1343     071D  00F3               	movwf	Lcd8_Set_Cursor@b
  1344     071E  3001               	movlw	1
  1345     071F  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1346     0724                     l2062:
  1347                           
  1348                           ;main.c: 118:         Lcd8_Write_Char(seg);
  1349     0724  1283               	bcf	3,5	;RP0=0, select bank0
  1350     0725  1303               	bcf	3,6	;RP1=0, select bank0
  1351     0726  085E               	movf	_seg,w
  1352     0727  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1353     072C                     l2064:
  1354                           
  1355                           ;main.c: 120:         I2C_Master_Start();
  1356     072C  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Start
  1357     0731                     l2066:
  1358                           
  1359                           ;main.c: 121:         I2C_Master_Write(0xD0);
  1360     0731  30D0               	movlw	208
  1361     0732  00F0               	movwf	I2C_Master_Write@d
  1362     0733  3000               	movlw	0
  1363     0734  00F1               	movwf	I2C_Master_Write@d+1
  1364     0735  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1365     073A                     l2068:
  1366                           
  1367                           ;main.c: 122:         I2C_Master_Write(0x04);
  1368     073A  3004               	movlw	4
  1369     073B  00F0               	movwf	I2C_Master_Write@d
  1370     073C  3000               	movlw	0
  1371     073D  00F1               	movwf	I2C_Master_Write@d+1
  1372     073E  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1373     0743                     l2070:
  1374                           
  1375                           ;main.c: 123:         I2C_Master_RepeatedStart();
  1376     0743  120A  158A  2718  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1377     0748                     l2072:
  1378                           
  1379                           ;main.c: 124:         I2C_Master_Write(0xD1);
  1380     0748  30D1               	movlw	209
  1381     0749  00F0               	movwf	I2C_Master_Write@d
  1382     074A  3000               	movlw	0
  1383     074B  00F1               	movwf	I2C_Master_Write@d+1
  1384     074C  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1385     0751                     l2074:
  1386                           
  1387                           ;main.c: 125:         dia = I2C_Master_Read(0);
  1388     0751  3000               	movlw	0
  1389     0752  00F0               	movwf	I2C_Master_Read@a
  1390     0753  00F1               	movwf	I2C_Master_Read@a+1
  1391     0754  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1392     0759  0870               	movf	?_I2C_Master_Read,w
  1393     075A  1283               	bcf	3,5	;RP0=0, select bank0
  1394     075B  1303               	bcf	3,6	;RP1=0, select bank0
  1395     075C  00DB               	movwf	_dia
  1396     075D                     l2076:
  1397                           
  1398                           ;main.c: 127:         Lcd8_Set_Cursor(2,8);
  1399     075D  3008               	movlw	8
  1400     075E  00F3               	movwf	Lcd8_Set_Cursor@b
  1401     075F  3002               	movlw	2
  1402     0760  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1403     0765                     l2078:
  1404                           
  1405                           ;main.c: 128:         Lcd8_Write_Char(dia);
  1406     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1407     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1408     0767  085B               	movf	_dia,w
  1409     0768  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1410     076D                     l2080:
  1411                           
  1412                           ;main.c: 130:         I2C_Master_Start();
  1413     076D  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Start
  1414     0772                     l2082:
  1415                           
  1416                           ;main.c: 131:         I2C_Master_Write(0xD0);
  1417     0772  30D0               	movlw	208
  1418     0773  00F0               	movwf	I2C_Master_Write@d
  1419     0774  3000               	movlw	0
  1420     0775  00F1               	movwf	I2C_Master_Write@d+1
  1421     0776  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1422     077B                     l2084:
  1423                           
  1424                           ;main.c: 132:         I2C_Master_Write(0x05);
  1425     077B  3005               	movlw	5
  1426     077C  00F0               	movwf	I2C_Master_Write@d
  1427     077D  3000               	movlw	0
  1428     077E  00F1               	movwf	I2C_Master_Write@d+1
  1429     077F  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1430     0784                     l2086:
  1431                           
  1432                           ;main.c: 133:         I2C_Master_RepeatedStart();
  1433     0784  120A  158A  2718  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1434     0789                     l2088:
  1435                           
  1436                           ;main.c: 134:         I2C_Master_Write(0xD1);
  1437     0789  30D1               	movlw	209
  1438     078A  00F0               	movwf	I2C_Master_Write@d
  1439     078B  3000               	movlw	0
  1440     078C  00F1               	movwf	I2C_Master_Write@d+1
  1441     078D  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1442     0792                     l2090:
  1443                           
  1444                           ;main.c: 135:         mes = I2C_Master_Read(0);
  1445     0792  3000               	movlw	0
  1446     0793  00F0               	movwf	I2C_Master_Read@a
  1447     0794  00F1               	movwf	I2C_Master_Read@a+1
  1448     0795  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1449     079A  0870               	movf	?_I2C_Master_Read,w
  1450     079B  1283               	bcf	3,5	;RP0=0, select bank0
  1451     079C  1303               	bcf	3,6	;RP1=0, select bank0
  1452     079D  00DA               	movwf	_mes
  1453     079E                     l2092:
  1454                           
  1455                           ;main.c: 137:         Lcd8_Set_Cursor(2,11);
  1456     079E  300B               	movlw	11
  1457     079F  00F3               	movwf	Lcd8_Set_Cursor@b
  1458     07A0  3002               	movlw	2
  1459     07A1  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1460     07A6                     l2094:
  1461                           
  1462                           ;main.c: 138:         Lcd8_Write_Char(mes);
  1463     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1464     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1465     07A8  085A               	movf	_mes,w
  1466     07A9  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1467     07AE                     l2096:
  1468                           
  1469                           ;main.c: 140:         I2C_Master_Start();
  1470     07AE  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Start
  1471     07B3                     l2098:
  1472                           
  1473                           ;main.c: 141:         I2C_Master_Write(0xD0);
  1474     07B3  30D0               	movlw	208
  1475     07B4  00F0               	movwf	I2C_Master_Write@d
  1476     07B5  3000               	movlw	0
  1477     07B6  00F1               	movwf	I2C_Master_Write@d+1
  1478     07B7  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1479     07BC                     l2100:
  1480                           
  1481                           ;main.c: 142:         I2C_Master_Write(0x06);
  1482     07BC  3006               	movlw	6
  1483     07BD  00F0               	movwf	I2C_Master_Write@d
  1484     07BE  3000               	movlw	0
  1485     07BF  00F1               	movwf	I2C_Master_Write@d+1
  1486     07C0  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1487     07C5                     l2102:
  1488                           
  1489                           ;main.c: 143:         I2C_Master_RepeatedStart();
  1490     07C5  120A  158A  2718  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1491     07CA                     l2104:
  1492                           
  1493                           ;main.c: 144:         I2C_Master_Write(0xD1);
  1494     07CA  30D1               	movlw	209
  1495     07CB  00F0               	movwf	I2C_Master_Write@d
  1496     07CC  3000               	movlw	0
  1497     07CD  00F1               	movwf	I2C_Master_Write@d+1
  1498     07CE  120A  118A  2005  120A  118A  	fcall	_I2C_Master_Write
  1499     07D3                     l2106:
  1500                           
  1501                           ;main.c: 145:         an = I2C_Master_Read(0);
  1502     07D3  3000               	movlw	0
  1503     07D4  00F0               	movwf	I2C_Master_Read@a
  1504     07D5  00F1               	movwf	I2C_Master_Read@a+1
  1505     07D6  120A  158A  27D2  120A  118A  	fcall	_I2C_Master_Read
  1506     07DB  0870               	movf	?_I2C_Master_Read,w
  1507     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1508     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1509     07DE  00D9               	movwf	_an
  1510     07DF                     l2108:
  1511                           
  1512                           ;main.c: 147:         Lcd8_Set_Cursor(2,14);
  1513     07DF  300E               	movlw	14
  1514     07E0  00F3               	movwf	Lcd8_Set_Cursor@b
  1515     07E1  3002               	movlw	2
  1516     07E2  120A  158A  2770  120A  118A  	fcall	_Lcd8_Set_Cursor
  1517     07E7                     l2110:
  1518                           
  1519                           ;main.c: 148:         Lcd8_Write_Char(an);
  1520     07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1521     07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1522     07E9  0859               	movf	_an,w
  1523     07EA  120A  158A  274D  120A  118A  	fcall	_Lcd8_Write_Char
  1524     07EF  2D63               	goto	l1982
  1525     07F0  120A  118A  2800   	ljmp	start
  1526     07F3                     __end_of_main:
  1527                           
  1528                           	psect	text1
  1529     0F90                     __ptext1:	
  1530 ;; *************** function _setup *****************
  1531 ;; Defined at:
  1532 ;;		line 155 in file "main.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;		None
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0
  1549 ;;      Totals:         0       0       0       0       0
  1550 ;;Total ram usage:        0 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 2
  1553 ;; This function calls:
  1554 ;;		_I2C_Master_Init
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560     0F90                     _setup:	
  1561                           ;psect for function _setup
  1562                           
  1563     0F90                     l1712:	
  1564                           ;incstack = 0
  1565                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1566                           
  1567                           
  1568                           ;main.c: 156:     ANSEL = 0;
  1569     0F90  1683               	bsf	3,5	;RP0=1, select bank3
  1570     0F91  1703               	bsf	3,6	;RP1=1, select bank3
  1571     0F92  0188               	clrf	8	;volatile
  1572                           
  1573                           ;main.c: 157:     ANSELH = 0;
  1574     0F93  0189               	clrf	9	;volatile
  1575                           
  1576                           ;main.c: 158:     TRISB = 0;
  1577     0F94  1683               	bsf	3,5	;RP0=1, select bank1
  1578     0F95  1303               	bcf	3,6	;RP1=0, select bank1
  1579     0F96  0186               	clrf	6	;volatile
  1580                           
  1581                           ;main.c: 159:     TRISD = 0;
  1582     0F97  0188               	clrf	8	;volatile
  1583                           
  1584                           ;main.c: 160:     PORTB = 0;
  1585     0F98  1283               	bcf	3,5	;RP0=0, select bank0
  1586     0F99  1303               	bcf	3,6	;RP1=0, select bank0
  1587     0F9A  0186               	clrf	6	;volatile
  1588                           
  1589                           ;main.c: 161:     PORTD = 0;
  1590     0F9B  0188               	clrf	8	;volatile
  1591                           
  1592                           ;main.c: 162:     TRISC = 0;
  1593     0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  1594     0F9D  1303               	bcf	3,6	;RP1=0, select bank1
  1595     0F9E  0187               	clrf	7	;volatile
  1596                           
  1597                           ;main.c: 163:     PORTC = 0;
  1598     0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  1599     0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  1600     0FA1  0187               	clrf	7	;volatile
  1601     0FA2                     l1714:
  1602                           
  1603                           ;main.c: 164:     I2C_Master_Init(100000);
  1604     0FA2  3000               	movlw	0
  1605     0FA3  00A3               	movwf	I2C_Master_Init@c+3
  1606     0FA4  3001               	movlw	1
  1607     0FA5  00A2               	movwf	I2C_Master_Init@c+2
  1608     0FA6  3086               	movlw	134
  1609     0FA7  00A1               	movwf	I2C_Master_Init@c+1
  1610     0FA8  30A0               	movlw	160
  1611     0FA9  00A0               	movwf	I2C_Master_Init@c
  1612     0FAA  120A  118A  200F  120A  158A  	fcall	_I2C_Master_Init
  1613     0FAF                     l91:
  1614     0FAF  0008               	return
  1615     0FB0                     __end_of_setup:
  1616                           
  1617                           	psect	text2
  1618     000F                     __ptext2:	
  1619 ;; *************** function _I2C_Master_Init *****************
  1620 ;; Defined at:
  1621 ;;		line 16 in file "I2C.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  c               4    0[BANK0 ] const unsigned long 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       4       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          0       4       0       0       0
  1638 ;;      Totals:         0       8       0       0       0
  1639 ;;Total ram usage:        8 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 1
  1642 ;; This function calls:
  1643 ;;		___lldiv
  1644 ;; This function is called by:
  1645 ;;		_setup
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649     000F                     _I2C_Master_Init:	
  1650                           ;psect for function _I2C_Master_Init
  1651                           
  1652     000F                     l1504:	
  1653                           ;incstack = 0
  1654                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1655                           
  1656                           
  1657                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1658     000F  3028               	movlw	40
  1659     0010  1283               	bcf	3,5	;RP0=0, select bank0
  1660     0011  1303               	bcf	3,6	;RP1=0, select bank0
  1661     0012  0094               	movwf	20	;volatile
  1662     0013                     l1506:
  1663                           
  1664                           ;I2C.c: 19:     SSPCON2 = 0;
  1665     0013  1683               	bsf	3,5	;RP0=1, select bank1
  1666     0014  1303               	bcf	3,6	;RP1=0, select bank1
  1667     0015  0191               	clrf	17	;volatile
  1668     0016                     l1508:
  1669                           
  1670                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1671     0016  1283               	bcf	3,5	;RP0=0, select bank0
  1672     0017  1303               	bcf	3,6	;RP1=0, select bank0
  1673     0018  0820               	movf	I2C_Master_Init@c,w
  1674     0019  00A4               	movwf	??_I2C_Master_Init
  1675     001A  0821               	movf	I2C_Master_Init@c+1,w
  1676     001B  00A5               	movwf	??_I2C_Master_Init+1
  1677     001C  0822               	movf	I2C_Master_Init@c+2,w
  1678     001D  00A6               	movwf	??_I2C_Master_Init+2
  1679     001E  0823               	movf	I2C_Master_Init@c+3,w
  1680     001F  00A7               	movwf	??_I2C_Master_Init+3
  1681     0020  3002               	movlw	2
  1682     0021                     u1065:
  1683     0021  1003               	clrc
  1684     0022  0DA4               	rlf	??_I2C_Master_Init,f
  1685     0023  0DA5               	rlf	??_I2C_Master_Init+1,f
  1686     0024  0DA6               	rlf	??_I2C_Master_Init+2,f
  1687     0025  0DA7               	rlf	??_I2C_Master_Init+3,f
  1688     0026                     u1060:
  1689     0026  3EFF               	addlw	-1
  1690     0027  1D03               	skipz
  1691     0028  2821               	goto	u1065
  1692     0029  0827               	movf	??_I2C_Master_Init+3,w
  1693     002A  00F3               	movwf	___lldiv@divisor+3
  1694     002B  0826               	movf	??_I2C_Master_Init+2,w
  1695     002C  00F2               	movwf	___lldiv@divisor+2
  1696     002D  0825               	movf	??_I2C_Master_Init+1,w
  1697     002E  00F1               	movwf	___lldiv@divisor+1
  1698     002F  0824               	movf	??_I2C_Master_Init,w
  1699     0030  00F0               	movwf	___lldiv@divisor
  1700     0031  3000               	movlw	0
  1701     0032  00F7               	movwf	___lldiv@dividend+3
  1702     0033  307A               	movlw	122
  1703     0034  00F6               	movwf	___lldiv@dividend+2
  1704     0035  3012               	movlw	18
  1705     0036  00F5               	movwf	___lldiv@dividend+1
  1706     0037  3000               	movlw	0
  1707     0038  00F4               	movwf	___lldiv@dividend
  1708     0039  120A  118A  22AC  120A  118A  	fcall	___lldiv
  1709     003E  0870               	movf	?___lldiv,w
  1710     003F  3EFF               	addlw	255
  1711     0040  1683               	bsf	3,5	;RP0=1, select bank1
  1712     0041  1303               	bcf	3,6	;RP1=0, select bank1
  1713     0042  0093               	movwf	19	;volatile
  1714     0043                     l1510:
  1715                           
  1716                           ;I2C.c: 21:     SSPSTAT = 0;
  1717     0043  0194               	clrf	20	;volatile
  1718     0044                     l1512:
  1719                           
  1720                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1721     0044  1587               	bsf	7,3	;volatile
  1722     0045                     l1514:
  1723                           
  1724                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1725     0045  1607               	bsf	7,4	;volatile
  1726     0046                     l153:
  1727     0046  0008               	return
  1728     0047                     __end_of_I2C_Master_Init:
  1729                           
  1730                           	psect	text3
  1731     02AC                     __ptext3:	
  1732 ;; *************** function ___lldiv *****************
  1733 ;; Defined at:
  1734 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  divisor         4    0[COMMON] unsigned long 
  1737 ;;  dividend        4    4[COMMON] unsigned long 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  quotient        4    9[COMMON] unsigned long 
  1740 ;;  counter         1   13[COMMON] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  4    0[COMMON] unsigned long 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         8       0       0       0       0
  1751 ;;      Locals:         5       0       0       0       0
  1752 ;;      Temps:          1       0       0       0       0
  1753 ;;      Totals:        14       0       0       0       0
  1754 ;;Total ram usage:       14 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_I2C_Master_Init
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763     02AC                     ___lldiv:	
  1764                           ;psect for function ___lldiv
  1765                           
  1766     02AC                     l1472:	
  1767                           ;incstack = 0
  1768                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1769                           
  1770     02AC  3000               	movlw	0
  1771     02AD  00FC               	movwf	___lldiv@quotient+3
  1772     02AE  3000               	movlw	0
  1773     02AF  00FB               	movwf	___lldiv@quotient+2
  1774     02B0  3000               	movlw	0
  1775     02B1  00FA               	movwf	___lldiv@quotient+1
  1776     02B2  3000               	movlw	0
  1777     02B3  00F9               	movwf	___lldiv@quotient
  1778     02B4  0873               	movf	___lldiv@divisor+3,w
  1779     02B5  0472               	iorwf	___lldiv@divisor+2,w
  1780     02B6  0471               	iorwf	___lldiv@divisor+1,w
  1781     02B7  0470               	iorwf	___lldiv@divisor,w
  1782     02B8  1903               	skipnz
  1783     02B9  2ABB               	goto	u991
  1784     02BA  2ABC               	goto	u990
  1785     02BB                     u991:
  1786     02BB  2B09               	goto	l1492
  1787     02BC                     u990:
  1788     02BC                     l1474:
  1789     02BC  01FD               	clrf	___lldiv@counter
  1790     02BD  0AFD               	incf	___lldiv@counter,f
  1791     02BE  2ACC               	goto	l1478
  1792     02BF                     l1476:
  1793     02BF  3001               	movlw	1
  1794     02C0  00F8               	movwf	??___lldiv
  1795     02C1                     u1005:
  1796     02C1  1003               	clrc
  1797     02C2  0DF0               	rlf	___lldiv@divisor,f
  1798     02C3  0DF1               	rlf	___lldiv@divisor+1,f
  1799     02C4  0DF2               	rlf	___lldiv@divisor+2,f
  1800     02C5  0DF3               	rlf	___lldiv@divisor+3,f
  1801     02C6  0BF8               	decfsz	??___lldiv,f
  1802     02C7  2AC1               	goto	u1005
  1803     02C8  3001               	movlw	1
  1804     02C9  00F8               	movwf	??___lldiv
  1805     02CA  0878               	movf	??___lldiv,w
  1806     02CB  07FD               	addwf	___lldiv@counter,f
  1807     02CC                     l1478:
  1808     02CC  1FF3               	btfss	___lldiv@divisor+3,7
  1809     02CD  2ACF               	goto	u1011
  1810     02CE  2AD0               	goto	u1010
  1811     02CF                     u1011:
  1812     02CF  2ABF               	goto	l1476
  1813     02D0                     u1010:
  1814     02D0                     l1480:
  1815     02D0  3001               	movlw	1
  1816     02D1  00F8               	movwf	??___lldiv
  1817     02D2                     u1025:
  1818     02D2  1003               	clrc
  1819     02D3  0DF9               	rlf	___lldiv@quotient,f
  1820     02D4  0DFA               	rlf	___lldiv@quotient+1,f
  1821     02D5  0DFB               	rlf	___lldiv@quotient+2,f
  1822     02D6  0DFC               	rlf	___lldiv@quotient+3,f
  1823     02D7  0BF8               	decfsz	??___lldiv,f
  1824     02D8  2AD2               	goto	u1025
  1825     02D9                     l1482:
  1826     02D9  0873               	movf	___lldiv@divisor+3,w
  1827     02DA  0277               	subwf	___lldiv@dividend+3,w
  1828     02DB  1D03               	skipz
  1829     02DC  2AE7               	goto	u1035
  1830     02DD  0872               	movf	___lldiv@divisor+2,w
  1831     02DE  0276               	subwf	___lldiv@dividend+2,w
  1832     02DF  1D03               	skipz
  1833     02E0  2AE7               	goto	u1035
  1834     02E1  0871               	movf	___lldiv@divisor+1,w
  1835     02E2  0275               	subwf	___lldiv@dividend+1,w
  1836     02E3  1D03               	skipz
  1837     02E4  2AE7               	goto	u1035
  1838     02E5  0870               	movf	___lldiv@divisor,w
  1839     02E6  0274               	subwf	___lldiv@dividend,w
  1840     02E7                     u1035:
  1841     02E7  1C03               	skipc
  1842     02E8  2AEA               	goto	u1031
  1843     02E9  2AEB               	goto	u1030
  1844     02EA                     u1031:
  1845     02EA  2AFA               	goto	l1488
  1846     02EB                     u1030:
  1847     02EB                     l1484:
  1848     02EB  0870               	movf	___lldiv@divisor,w
  1849     02EC  02F4               	subwf	___lldiv@dividend,f
  1850     02ED  0871               	movf	___lldiv@divisor+1,w
  1851     02EE  1C03               	skipc
  1852     02EF  0F71               	incfsz	___lldiv@divisor+1,w
  1853     02F0  02F5               	subwf	___lldiv@dividend+1,f
  1854     02F1  0872               	movf	___lldiv@divisor+2,w
  1855     02F2  1C03               	skipc
  1856     02F3  0F72               	incfsz	___lldiv@divisor+2,w
  1857     02F4  02F6               	subwf	___lldiv@dividend+2,f
  1858     02F5  0873               	movf	___lldiv@divisor+3,w
  1859     02F6  1C03               	skipc
  1860     02F7  0F73               	incfsz	___lldiv@divisor+3,w
  1861     02F8  02F7               	subwf	___lldiv@dividend+3,f
  1862     02F9                     l1486:
  1863     02F9  1479               	bsf	___lldiv@quotient,0
  1864     02FA                     l1488:
  1865     02FA  3001               	movlw	1
  1866     02FB                     u1045:
  1867     02FB  1003               	clrc
  1868     02FC  0CF3               	rrf	___lldiv@divisor+3,f
  1869     02FD  0CF2               	rrf	___lldiv@divisor+2,f
  1870     02FE  0CF1               	rrf	___lldiv@divisor+1,f
  1871     02FF  0CF0               	rrf	___lldiv@divisor,f
  1872     0300  3EFF               	addlw	-1
  1873     0301  1D03               	skipz
  1874     0302  2AFB               	goto	u1045
  1875     0303                     l1490:
  1876     0303  3001               	movlw	1
  1877     0304  02FD               	subwf	___lldiv@counter,f
  1878     0305  1D03               	btfss	3,2
  1879     0306  2B08               	goto	u1051
  1880     0307  2B09               	goto	u1050
  1881     0308                     u1051:
  1882     0308  2AD0               	goto	l1480
  1883     0309                     u1050:
  1884     0309                     l1492:
  1885     0309  087C               	movf	___lldiv@quotient+3,w
  1886     030A  00F3               	movwf	?___lldiv+3
  1887     030B  087B               	movf	___lldiv@quotient+2,w
  1888     030C  00F2               	movwf	?___lldiv+2
  1889     030D  087A               	movf	___lldiv@quotient+1,w
  1890     030E  00F1               	movwf	?___lldiv+1
  1891     030F  0879               	movf	___lldiv@quotient,w
  1892     0310  00F0               	movwf	?___lldiv
  1893     0311                     l342:
  1894     0311  0008               	return
  1895     0312                     __end_of___lldiv:
  1896                           
  1897                           	psect	text4
  1898     010B                     __ptext4:	
  1899 ;; *************** function _map *****************
  1900 ;; Defined at:
  1901 ;;		line 220 in file "main.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  v               1    wreg     unsigned char 
  1904 ;;  minen           1   14[BANK0 ] unsigned char 
  1905 ;;  maxen           1   15[BANK0 ] unsigned char 
  1906 ;;  minsa           1   16[BANK0 ] unsigned char 
  1907 ;;  maxsa           2   17[BANK0 ] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  v               1   25[BANK0 ] unsigned char 
  1910 ;;  resultado       2   23[BANK0 ] unsigned int 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2   14[BANK0 ] unsigned int 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         0       5       0       0       0
  1921 ;;      Locals:         0       3       0       0       0
  1922 ;;      Temps:          0       4       0       0       0
  1923 ;;      Totals:         0      12       0       0       0
  1924 ;;Total ram usage:       12 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 1
  1927 ;; This function calls:
  1928 ;;		___aldiv
  1929 ;;		___lmul
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935     010B                     _map:	
  1936                           ;psect for function _map
  1937                           
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  1941                           ;map@v stored from wreg
  1942     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1943     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1944     010D  00B9               	movwf	map@v
  1945     010E                     l1786:
  1946                           
  1947                           ;main.c: 221:     uint16_t resultado;;main.c: 222:     resultado = (((maxsa-minsa)* (lon
      +                          g long)(v-minen))/maxen)+minsa;
  1948     010E  082F               	movf	map@maxen,w
  1949     010F  00B3               	movwf	??_map
  1950     0110  01B4               	clrf	??_map+1
  1951     0111  01B5               	clrf	??_map+2
  1952     0112  01B6               	clrf	??_map+3
  1953     0113  0836               	movf	??_map+3,w
  1954     0114  00A3               	movwf	___aldiv@divisor+3
  1955     0115  0835               	movf	??_map+2,w
  1956     0116  00A2               	movwf	___aldiv@divisor+2
  1957     0117  0834               	movf	??_map+1,w
  1958     0118  00A1               	movwf	___aldiv@divisor+1
  1959     0119  0833               	movf	??_map,w
  1960     011A  00A0               	movwf	___aldiv@divisor
  1961     011B  0830               	movf	map@minsa,w
  1962     011C  0231               	subwf	map@maxsa,w
  1963     011D  00F0               	movwf	___lmul@multiplier
  1964     011E  0832               	movf	map@maxsa+1,w
  1965     011F  1C03               	skipc
  1966     0120  0332               	decf	map@maxsa+1,w
  1967     0121  00F1               	movwf	___lmul@multiplier+1
  1968     0122  01F2               	clrf	___lmul@multiplier+2
  1969     0123  01F3               	clrf	___lmul@multiplier+3
  1970     0124  082E               	movf	map@minen,w
  1971     0125  0239               	subwf	map@v,w
  1972     0126  00F4               	movwf	___lmul@multiplicand
  1973     0127  01F5               	clrf	___lmul@multiplicand+1
  1974     0128  1C03               	skipc
  1975     0129  03F5               	decf	___lmul@multiplicand+1,f
  1976     012A  01F6               	clrf	___lmul@multiplicand+2
  1977     012B  1BF5               	btfsc	___lmul@multiplicand+1,7
  1978     012C  03F6               	decf	___lmul@multiplicand+2,f
  1979     012D  0876               	movf	___lmul@multiplicand+2,w
  1980     012E  00F7               	movwf	___lmul@multiplicand+3
  1981     012F  120A  118A  20C5  120A  118A  	fcall	___lmul
  1982     0134  0873               	movf	?___lmul+3,w
  1983     0135  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0136  1303               	bcf	3,6	;RP1=0, select bank0
  1985     0137  00A7               	movwf	___aldiv@dividend+3
  1986     0138  0872               	movf	?___lmul+2,w
  1987     0139  00A6               	movwf	___aldiv@dividend+2
  1988     013A  0871               	movf	?___lmul+1,w
  1989     013B  00A5               	movwf	___aldiv@dividend+1
  1990     013C  0870               	movf	?___lmul,w
  1991     013D  00A4               	movwf	___aldiv@dividend
  1992     013E  120A  118A  23EF  120A  118A  	fcall	___aldiv
  1993     0143  1283               	bcf	3,5	;RP0=0, select bank0
  1994     0144  1303               	bcf	3,6	;RP1=0, select bank0
  1995     0145  0830               	movf	map@minsa,w
  1996     0146  0720               	addwf	?___aldiv,w
  1997     0147  00B7               	movwf	map@resultado
  1998     0148  3000               	movlw	0
  1999     0149  1803               	skipnc
  2000     014A  3001               	movlw	1
  2001     014B  0721               	addwf	?___aldiv+1,w
  2002     014C  00B8               	movwf	map@resultado+1
  2003     014D                     l1788:
  2004                           
  2005                           ;main.c: 223:     return resultado;
  2006     014D  0838               	movf	map@resultado+1,w
  2007     014E  00AF               	movwf	?_map+1
  2008     014F  0837               	movf	map@resultado,w
  2009     0150  00AE               	movwf	?_map
  2010     0151                     l124:
  2011     0151  0008               	return
  2012     0152                     __end_of_map:
  2013                           
  2014                           	psect	text5
  2015     00C5                     __ptext5:	
  2016 ;; *************** function ___lmul *****************
  2017 ;; Defined at:
  2018 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  multiplier      4    0[COMMON] unsigned long 
  2021 ;;  multiplicand    4    4[COMMON] unsigned long 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  product         4    9[COMMON] unsigned long 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  4    0[COMMON] unsigned long 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         8       0       0       0       0
  2034 ;;      Locals:         4       0       0       0       0
  2035 ;;      Temps:          1       0       0       0       0
  2036 ;;      Totals:        13       0       0       0       0
  2037 ;;Total ram usage:       13 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_map
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046     00C5                     ___lmul:	
  2047                           ;psect for function ___lmul
  2048                           
  2049     00C5                     l1528:	
  2050                           ;incstack = 0
  2051                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2052                           
  2053     00C5  3000               	movlw	0
  2054     00C6  00FC               	movwf	___lmul@product+3
  2055     00C7  3000               	movlw	0
  2056     00C8  00FB               	movwf	___lmul@product+2
  2057     00C9  3000               	movlw	0
  2058     00CA  00FA               	movwf	___lmul@product+1
  2059     00CB  3000               	movlw	0
  2060     00CC  00F9               	movwf	___lmul@product
  2061     00CD                     l1530:
  2062     00CD  1C70               	btfss	___lmul@multiplier,0
  2063     00CE  28D0               	goto	u1091
  2064     00CF  28D1               	goto	u1090
  2065     00D0                     u1091:
  2066     00D0  28E8               	goto	l1534
  2067     00D1                     u1090:
  2068     00D1                     l1532:
  2069     00D1  0874               	movf	___lmul@multiplicand,w
  2070     00D2  07F9               	addwf	___lmul@product,f
  2071     00D3  0875               	movf	___lmul@multiplicand+1,w
  2072     00D4  1103               	clrz
  2073     00D5  1803               	skipnc
  2074     00D6  3E01               	addlw	1
  2075     00D7  1903               	skipnz
  2076     00D8  28DA               	goto	u1101
  2077     00D9  07FA               	addwf	___lmul@product+1,f
  2078     00DA                     u1101:
  2079     00DA  0876               	movf	___lmul@multiplicand+2,w
  2080     00DB  1103               	clrz
  2081     00DC  1803               	skipnc
  2082     00DD  3E01               	addlw	1
  2083     00DE  1903               	skipnz
  2084     00DF  28E1               	goto	u1102
  2085     00E0  07FB               	addwf	___lmul@product+2,f
  2086     00E1                     u1102:
  2087     00E1  0877               	movf	___lmul@multiplicand+3,w
  2088     00E2  1103               	clrz
  2089     00E3  1803               	skipnc
  2090     00E4  3E01               	addlw	1
  2091     00E5  1903               	skipnz
  2092     00E6  28E8               	goto	u1103
  2093     00E7  07FC               	addwf	___lmul@product+3,f
  2094     00E8                     u1103:
  2095     00E8                     l1534:
  2096     00E8  3001               	movlw	1
  2097     00E9  00F8               	movwf	??___lmul
  2098     00EA                     u1115:
  2099     00EA  1003               	clrc
  2100     00EB  0DF4               	rlf	___lmul@multiplicand,f
  2101     00EC  0DF5               	rlf	___lmul@multiplicand+1,f
  2102     00ED  0DF6               	rlf	___lmul@multiplicand+2,f
  2103     00EE  0DF7               	rlf	___lmul@multiplicand+3,f
  2104     00EF  0BF8               	decfsz	??___lmul,f
  2105     00F0  28EA               	goto	u1115
  2106     00F1                     l1536:
  2107     00F1  3001               	movlw	1
  2108     00F2                     u1125:
  2109     00F2  1003               	clrc
  2110     00F3  0CF3               	rrf	___lmul@multiplier+3,f
  2111     00F4  0CF2               	rrf	___lmul@multiplier+2,f
  2112     00F5  0CF1               	rrf	___lmul@multiplier+1,f
  2113     00F6  0CF0               	rrf	___lmul@multiplier,f
  2114     00F7  3EFF               	addlw	-1
  2115     00F8  1D03               	skipz
  2116     00F9  28F2               	goto	u1125
  2117     00FA  0873               	movf	___lmul@multiplier+3,w
  2118     00FB  0472               	iorwf	___lmul@multiplier+2,w
  2119     00FC  0471               	iorwf	___lmul@multiplier+1,w
  2120     00FD  0470               	iorwf	___lmul@multiplier,w
  2121     00FE  1D03               	skipz
  2122     00FF  2901               	goto	u1131
  2123     0100  2902               	goto	u1130
  2124     0101                     u1131:
  2125     0101  28CD               	goto	l1530
  2126     0102                     u1130:
  2127     0102                     l1538:
  2128     0102  087C               	movf	___lmul@product+3,w
  2129     0103  00F3               	movwf	?___lmul+3
  2130     0104  087B               	movf	___lmul@product+2,w
  2131     0105  00F2               	movwf	?___lmul+2
  2132     0106  087A               	movf	___lmul@product+1,w
  2133     0107  00F1               	movwf	?___lmul+1
  2134     0108  0879               	movf	___lmul@product,w
  2135     0109  00F0               	movwf	?___lmul
  2136     010A                     l320:
  2137     010A  0008               	return
  2138     010B                     __end_of___lmul:
  2139                           
  2140                           	psect	text6
  2141     03EF                     __ptext6:	
  2142 ;; *************** function ___aldiv *****************
  2143 ;; Defined at:
  2144 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  divisor         4    0[BANK0 ] long 
  2147 ;;  dividend        4    4[BANK0 ] long 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  quotient        4   10[BANK0 ] long 
  2150 ;;  sign            1    9[BANK0 ] unsigned char 
  2151 ;;  counter         1    8[BANK0 ] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  4    0[BANK0 ] long 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         0       8       0       0       0
  2162 ;;      Locals:         0       6       0       0       0
  2163 ;;      Temps:          1       0       0       0       0
  2164 ;;      Totals:         1      14       0       0       0
  2165 ;;Total ram usage:       15 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_map
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174     03EF                     ___aldiv:	
  2175                           ;psect for function ___aldiv
  2176                           
  2177     03EF                     l1542:	
  2178                           ;incstack = 0
  2179                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2180                           
  2181     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2182     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2183     03F1  01A9               	clrf	___aldiv@sign
  2184     03F2                     l1544:
  2185     03F2  1FA3               	btfss	___aldiv@divisor+3,7
  2186     03F3  2BF5               	goto	u1141
  2187     03F4  2BF6               	goto	u1140
  2188     03F5                     u1141:
  2189     03F5  2C03               	goto	l371
  2190     03F6                     u1140:
  2191     03F6                     l1546:
  2192     03F6  09A0               	comf	___aldiv@divisor,f
  2193     03F7  09A1               	comf	___aldiv@divisor+1,f
  2194     03F8  09A2               	comf	___aldiv@divisor+2,f
  2195     03F9  09A3               	comf	___aldiv@divisor+3,f
  2196     03FA  0AA0               	incf	___aldiv@divisor,f
  2197     03FB  1903               	skipnz
  2198     03FC  0AA1               	incf	___aldiv@divisor+1,f
  2199     03FD  1903               	skipnz
  2200     03FE  0AA2               	incf	___aldiv@divisor+2,f
  2201     03FF  1903               	skipnz
  2202     0400  0AA3               	incf	___aldiv@divisor+3,f
  2203     0401  01A9               	clrf	___aldiv@sign
  2204     0402  0AA9               	incf	___aldiv@sign,f
  2205     0403                     l371:
  2206     0403  1FA7               	btfss	___aldiv@dividend+3,7
  2207     0404  2C06               	goto	u1151
  2208     0405  2C07               	goto	u1150
  2209     0406                     u1151:
  2210     0406  2C16               	goto	l1552
  2211     0407                     u1150:
  2212     0407                     l1548:
  2213     0407  09A4               	comf	___aldiv@dividend,f
  2214     0408  09A5               	comf	___aldiv@dividend+1,f
  2215     0409  09A6               	comf	___aldiv@dividend+2,f
  2216     040A  09A7               	comf	___aldiv@dividend+3,f
  2217     040B  0AA4               	incf	___aldiv@dividend,f
  2218     040C  1903               	skipnz
  2219     040D  0AA5               	incf	___aldiv@dividend+1,f
  2220     040E  1903               	skipnz
  2221     040F  0AA6               	incf	___aldiv@dividend+2,f
  2222     0410  1903               	skipnz
  2223     0411  0AA7               	incf	___aldiv@dividend+3,f
  2224     0412                     l1550:
  2225     0412  3001               	movlw	1
  2226     0413  00FD               	movwf	??___aldiv
  2227     0414  087D               	movf	??___aldiv,w
  2228     0415  06A9               	xorwf	___aldiv@sign,f
  2229     0416                     l1552:
  2230     0416  3000               	movlw	0
  2231     0417  00AD               	movwf	___aldiv@quotient+3
  2232     0418  3000               	movlw	0
  2233     0419  00AC               	movwf	___aldiv@quotient+2
  2234     041A  3000               	movlw	0
  2235     041B  00AB               	movwf	___aldiv@quotient+1
  2236     041C  3000               	movlw	0
  2237     041D  00AA               	movwf	___aldiv@quotient
  2238     041E                     l1554:
  2239     041E  0823               	movf	___aldiv@divisor+3,w
  2240     041F  0422               	iorwf	___aldiv@divisor+2,w
  2241     0420  0421               	iorwf	___aldiv@divisor+1,w
  2242     0421  0420               	iorwf	___aldiv@divisor,w
  2243     0422  1903               	skipnz
  2244     0423  2C25               	goto	u1161
  2245     0424  2C26               	goto	u1160
  2246     0425                     u1161:
  2247     0425  2C73               	goto	l1574
  2248     0426                     u1160:
  2249     0426                     l1556:
  2250     0426  01A8               	clrf	___aldiv@counter
  2251     0427  0AA8               	incf	___aldiv@counter,f
  2252     0428  2C36               	goto	l1560
  2253     0429                     l1558:
  2254     0429  3001               	movlw	1
  2255     042A  00FD               	movwf	??___aldiv
  2256     042B                     u1175:
  2257     042B  1003               	clrc
  2258     042C  0DA0               	rlf	___aldiv@divisor,f
  2259     042D  0DA1               	rlf	___aldiv@divisor+1,f
  2260     042E  0DA2               	rlf	___aldiv@divisor+2,f
  2261     042F  0DA3               	rlf	___aldiv@divisor+3,f
  2262     0430  0BFD               	decfsz	??___aldiv,f
  2263     0431  2C2B               	goto	u1175
  2264     0432  3001               	movlw	1
  2265     0433  00FD               	movwf	??___aldiv
  2266     0434  087D               	movf	??___aldiv,w
  2267     0435  07A8               	addwf	___aldiv@counter,f
  2268     0436                     l1560:
  2269     0436  1FA3               	btfss	___aldiv@divisor+3,7
  2270     0437  2C39               	goto	u1181
  2271     0438  2C3A               	goto	u1180
  2272     0439                     u1181:
  2273     0439  2C29               	goto	l1558
  2274     043A                     u1180:
  2275     043A                     l1562:
  2276     043A  3001               	movlw	1
  2277     043B  00FD               	movwf	??___aldiv
  2278     043C                     u1195:
  2279     043C  1003               	clrc
  2280     043D  0DAA               	rlf	___aldiv@quotient,f
  2281     043E  0DAB               	rlf	___aldiv@quotient+1,f
  2282     043F  0DAC               	rlf	___aldiv@quotient+2,f
  2283     0440  0DAD               	rlf	___aldiv@quotient+3,f
  2284     0441  0BFD               	decfsz	??___aldiv,f
  2285     0442  2C3C               	goto	u1195
  2286     0443                     l1564:
  2287     0443  0823               	movf	___aldiv@divisor+3,w
  2288     0444  0227               	subwf	___aldiv@dividend+3,w
  2289     0445  1D03               	skipz
  2290     0446  2C51               	goto	u1205
  2291     0447  0822               	movf	___aldiv@divisor+2,w
  2292     0448  0226               	subwf	___aldiv@dividend+2,w
  2293     0449  1D03               	skipz
  2294     044A  2C51               	goto	u1205
  2295     044B  0821               	movf	___aldiv@divisor+1,w
  2296     044C  0225               	subwf	___aldiv@dividend+1,w
  2297     044D  1D03               	skipz
  2298     044E  2C51               	goto	u1205
  2299     044F  0820               	movf	___aldiv@divisor,w
  2300     0450  0224               	subwf	___aldiv@dividend,w
  2301     0451                     u1205:
  2302     0451  1C03               	skipc
  2303     0452  2C54               	goto	u1201
  2304     0453  2C55               	goto	u1200
  2305     0454                     u1201:
  2306     0454  2C64               	goto	l1570
  2307     0455                     u1200:
  2308     0455                     l1566:
  2309     0455  0820               	movf	___aldiv@divisor,w
  2310     0456  02A4               	subwf	___aldiv@dividend,f
  2311     0457  0821               	movf	___aldiv@divisor+1,w
  2312     0458  1C03               	skipc
  2313     0459  0F21               	incfsz	___aldiv@divisor+1,w
  2314     045A  02A5               	subwf	___aldiv@dividend+1,f
  2315     045B  0822               	movf	___aldiv@divisor+2,w
  2316     045C  1C03               	skipc
  2317     045D  0F22               	incfsz	___aldiv@divisor+2,w
  2318     045E  02A6               	subwf	___aldiv@dividend+2,f
  2319     045F  0823               	movf	___aldiv@divisor+3,w
  2320     0460  1C03               	skipc
  2321     0461  0F23               	incfsz	___aldiv@divisor+3,w
  2322     0462  02A7               	subwf	___aldiv@dividend+3,f
  2323     0463                     l1568:
  2324     0463  142A               	bsf	___aldiv@quotient,0
  2325     0464                     l1570:
  2326     0464  3001               	movlw	1
  2327     0465                     u1215:
  2328     0465  1003               	clrc
  2329     0466  0CA3               	rrf	___aldiv@divisor+3,f
  2330     0467  0CA2               	rrf	___aldiv@divisor+2,f
  2331     0468  0CA1               	rrf	___aldiv@divisor+1,f
  2332     0469  0CA0               	rrf	___aldiv@divisor,f
  2333     046A  3EFF               	addlw	-1
  2334     046B  1D03               	skipz
  2335     046C  2C65               	goto	u1215
  2336     046D                     l1572:
  2337     046D  3001               	movlw	1
  2338     046E  02A8               	subwf	___aldiv@counter,f
  2339     046F  1D03               	btfss	3,2
  2340     0470  2C72               	goto	u1221
  2341     0471  2C73               	goto	u1220
  2342     0472                     u1221:
  2343     0472  2C3A               	goto	l1562
  2344     0473                     u1220:
  2345     0473                     l1574:
  2346     0473  0829               	movf	___aldiv@sign,w
  2347     0474  1903               	btfsc	3,2
  2348     0475  2C77               	goto	u1231
  2349     0476  2C78               	goto	u1230
  2350     0477                     u1231:
  2351     0477  2C83               	goto	l1578
  2352     0478                     u1230:
  2353     0478                     l1576:
  2354     0478  09AA               	comf	___aldiv@quotient,f
  2355     0479  09AB               	comf	___aldiv@quotient+1,f
  2356     047A  09AC               	comf	___aldiv@quotient+2,f
  2357     047B  09AD               	comf	___aldiv@quotient+3,f
  2358     047C  0AAA               	incf	___aldiv@quotient,f
  2359     047D  1903               	skipnz
  2360     047E  0AAB               	incf	___aldiv@quotient+1,f
  2361     047F  1903               	skipnz
  2362     0480  0AAC               	incf	___aldiv@quotient+2,f
  2363     0481  1903               	skipnz
  2364     0482  0AAD               	incf	___aldiv@quotient+3,f
  2365     0483                     l1578:
  2366     0483  082D               	movf	___aldiv@quotient+3,w
  2367     0484  00A3               	movwf	?___aldiv+3
  2368     0485  082C               	movf	___aldiv@quotient+2,w
  2369     0486  00A2               	movwf	?___aldiv+2
  2370     0487  082B               	movf	___aldiv@quotient+1,w
  2371     0488  00A1               	movwf	?___aldiv+1
  2372     0489  082A               	movf	___aldiv@quotient,w
  2373     048A  00A0               	movwf	?___aldiv
  2374     048B                     l381:
  2375     048B  0008               	return
  2376     048C                     __end_of___aldiv:
  2377                           
  2378                           	psect	text7
  2379     0152                     __ptext7:	
  2380 ;; *************** function _intachar *****************
  2381 ;; Defined at:
  2382 ;;		line 167 in file "main.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  n               1    wreg     unsigned char 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  n               1    0[COMMON] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      unsigned char 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       0       0       0       0
  2397 ;;      Locals:         1       0       0       0       0
  2398 ;;      Temps:          0       0       0       0       0
  2399 ;;      Totals:         1       0       0       0       0
  2400 ;;Total ram usage:        1 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409     0152                     _intachar:	
  2410                           ;psect for function _intachar
  2411                           
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in _intachar: [wreg+status,2+status,0]
  2415                           ;intachar@n stored from wreg
  2416     0152  00F0               	movwf	intachar@n
  2417     0153                     l1816:
  2418                           
  2419                           ;main.c: 168:     if(n == 0){
  2420     0153  0870               	movf	intachar@n,w
  2421     0154  1D03               	btfss	3,2
  2422     0155  2957               	goto	u1631
  2423     0156  2958               	goto	u1630
  2424     0157                     u1631:
  2425     0157  295A               	goto	l1824
  2426     0158                     u1630:
  2427     0158                     l1818:
  2428                           
  2429                           ;main.c: 169:         return '0';
  2430     0158  3030               	movlw	48
  2431     0159  29A1               	goto	l95
  2432     015A                     l1824:
  2433     015A  0370               	decf	intachar@n,w
  2434     015B  1D03               	btfss	3,2
  2435     015C  295E               	goto	u1641
  2436     015D  295F               	goto	u1640
  2437     015E                     u1641:
  2438     015E  2961               	goto	l1832
  2439     015F                     u1640:
  2440     015F                     l1826:
  2441                           
  2442                           ;main.c: 172:         return '1';
  2443     015F  3031               	movlw	49
  2444     0160  29A1               	goto	l95
  2445     0161                     l1832:
  2446     0161  3002               	movlw	2
  2447     0162  0670               	xorwf	intachar@n,w
  2448     0163  1D03               	btfss	3,2
  2449     0164  2966               	goto	u1651
  2450     0165  2967               	goto	u1650
  2451     0166                     u1651:
  2452     0166  2969               	goto	l1840
  2453     0167                     u1650:
  2454     0167                     l1834:
  2455                           
  2456                           ;main.c: 175:         return '2';
  2457     0167  3032               	movlw	50
  2458     0168  29A1               	goto	l95
  2459     0169                     l1840:
  2460     0169  3003               	movlw	3
  2461     016A  0670               	xorwf	intachar@n,w
  2462     016B  1D03               	btfss	3,2
  2463     016C  296E               	goto	u1661
  2464     016D  296F               	goto	u1660
  2465     016E                     u1661:
  2466     016E  2971               	goto	l1848
  2467     016F                     u1660:
  2468     016F                     l1842:
  2469                           
  2470                           ;main.c: 178:         return '3';
  2471     016F  3033               	movlw	51
  2472     0170  29A1               	goto	l95
  2473     0171                     l1848:
  2474     0171  3004               	movlw	4
  2475     0172  0670               	xorwf	intachar@n,w
  2476     0173  1D03               	btfss	3,2
  2477     0174  2976               	goto	u1671
  2478     0175  2977               	goto	u1670
  2479     0176                     u1671:
  2480     0176  2979               	goto	l1856
  2481     0177                     u1670:
  2482     0177                     l1850:
  2483                           
  2484                           ;main.c: 181:         return '4';
  2485     0177  3034               	movlw	52
  2486     0178  29A1               	goto	l95
  2487     0179                     l1856:
  2488     0179  3005               	movlw	5
  2489     017A  0670               	xorwf	intachar@n,w
  2490     017B  1D03               	btfss	3,2
  2491     017C  297E               	goto	u1681
  2492     017D  297F               	goto	u1680
  2493     017E                     u1681:
  2494     017E  2981               	goto	l1864
  2495     017F                     u1680:
  2496     017F                     l1858:
  2497                           
  2498                           ;main.c: 184:         return '5';
  2499     017F  3035               	movlw	53
  2500     0180  29A1               	goto	l95
  2501     0181                     l1864:
  2502     0181  3006               	movlw	6
  2503     0182  0670               	xorwf	intachar@n,w
  2504     0183  1D03               	btfss	3,2
  2505     0184  2986               	goto	u1691
  2506     0185  2987               	goto	u1690
  2507     0186                     u1691:
  2508     0186  2989               	goto	l1872
  2509     0187                     u1690:
  2510     0187                     l1866:
  2511                           
  2512                           ;main.c: 187:         return '6';
  2513     0187  3036               	movlw	54
  2514     0188  29A1               	goto	l95
  2515     0189                     l1872:
  2516     0189  3007               	movlw	7
  2517     018A  0670               	xorwf	intachar@n,w
  2518     018B  1D03               	btfss	3,2
  2519     018C  298E               	goto	u1701
  2520     018D  298F               	goto	u1700
  2521     018E                     u1701:
  2522     018E  2991               	goto	l1880
  2523     018F                     u1700:
  2524     018F                     l1874:
  2525                           
  2526                           ;main.c: 190:         return '7';
  2527     018F  3037               	movlw	55
  2528     0190  29A1               	goto	l95
  2529     0191                     l1880:
  2530     0191  3008               	movlw	8
  2531     0192  0670               	xorwf	intachar@n,w
  2532     0193  1D03               	btfss	3,2
  2533     0194  2996               	goto	u1711
  2534     0195  2997               	goto	u1710
  2535     0196                     u1711:
  2536     0196  2999               	goto	l1888
  2537     0197                     u1710:
  2538     0197                     l1882:
  2539                           
  2540                           ;main.c: 193:         return '8';
  2541     0197  3038               	movlw	56
  2542     0198  29A1               	goto	l95
  2543     0199                     l1888:
  2544     0199  3009               	movlw	9
  2545     019A  0670               	xorwf	intachar@n,w
  2546     019B  1D03               	btfss	3,2
  2547     019C  299E               	goto	u1721
  2548     019D  299F               	goto	u1720
  2549     019E                     u1721:
  2550     019E  29A1               	goto	l108
  2551     019F                     u1720:
  2552     019F                     l1890:
  2553                           
  2554                           ;main.c: 196:         return '9';
  2555     019F  3039               	movlw	57
  2556     01A0  29A1               	goto	l95
  2557     01A1                     l108:
  2558     01A1                     l95:
  2559     01A1  0008               	return
  2560     01A2                     __end_of_intachar:
  2561                           
  2562                           	psect	text8
  2563     024D                     __ptext8:	
  2564 ;; *************** function _deshacer *****************
  2565 ;; Defined at:
  2566 ;;		line 200 in file "main.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  p               2   10[COMMON] int 
  2569 ;;  nume            2   12[COMMON] unsigned int 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  dec             1    4[BANK0 ] unsigned char 
  2572 ;;  uni             1    3[BANK0 ] unsigned char 
  2573 ;;  cente           1    2[BANK0 ] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      unsigned char 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2583 ;;      Params:         4       0       0       0       0
  2584 ;;      Locals:         0       3       0       0       0
  2585 ;;      Temps:          0       2       0       0       0
  2586 ;;      Totals:         4       5       0       0       0
  2587 ;;Total ram usage:        9 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 1
  2590 ;; This function calls:
  2591 ;;		___awdiv
  2592 ;;		___awmod
  2593 ;;		___lwdiv
  2594 ;;		___lwmod
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600     024D                     _deshacer:	
  2601                           ;psect for function _deshacer
  2602                           
  2603     024D                     l1792:	
  2604                           ;incstack = 0
  2605                           ; Regs used in _deshacer: [wreg+status,2+status,0+pclath+cstack]
  2606                           
  2607                           
  2608                           ;main.c: 201:     uint8_t cente;;main.c: 202:     uint8_t dec;;main.c: 203:     uint8_t 
      +                          uni;;main.c: 204:     cente = (nume/100);
  2609     024D  3064               	movlw	100
  2610     024E  00F0               	movwf	___lwdiv@divisor
  2611     024F  3000               	movlw	0
  2612     0250  00F1               	movwf	___lwdiv@divisor+1
  2613     0251  087D               	movf	deshacer@nume+1,w
  2614     0252  00F3               	movwf	___lwdiv@dividend+1
  2615     0253  087C               	movf	deshacer@nume,w
  2616     0254  00F2               	movwf	___lwdiv@dividend
  2617     0255  120A  118A  2081  120A  118A  	fcall	___lwdiv
  2618     025A  0870               	movf	?___lwdiv,w
  2619     025B  1283               	bcf	3,5	;RP0=0, select bank0
  2620     025C  1303               	bcf	3,6	;RP1=0, select bank0
  2621     025D  00A2               	movwf	deshacer@cente
  2622                           
  2623                           ;main.c: 205:     dec = (nume%100);
  2624     025E  3064               	movlw	100
  2625     025F  00F0               	movwf	___lwmod@divisor
  2626     0260  3000               	movlw	0
  2627     0261  00F1               	movwf	___lwmod@divisor+1
  2628     0262  087D               	movf	deshacer@nume+1,w
  2629     0263  00F3               	movwf	___lwmod@dividend+1
  2630     0264  087C               	movf	deshacer@nume,w
  2631     0265  00F2               	movwf	___lwmod@dividend
  2632     0266  120A  118A  2047  120A  118A  	fcall	___lwmod
  2633     026B  0870               	movf	?___lwmod,w
  2634     026C  1283               	bcf	3,5	;RP0=0, select bank0
  2635     026D  1303               	bcf	3,6	;RP1=0, select bank0
  2636     026E  00A4               	movwf	deshacer@dec
  2637                           
  2638                           ;main.c: 206:     uni = (dec%10);
  2639     026F  300A               	movlw	10
  2640     0270  00F0               	movwf	___awmod@divisor
  2641     0271  3000               	movlw	0
  2642     0272  00F1               	movwf	___awmod@divisor+1
  2643     0273  0824               	movf	deshacer@dec,w
  2644     0274  00A0               	movwf	??_deshacer
  2645     0275  01A1               	clrf	??_deshacer+1
  2646     0276  0820               	movf	??_deshacer,w
  2647     0277  00F2               	movwf	___awmod@dividend
  2648     0278  0821               	movf	??_deshacer+1,w
  2649     0279  00F3               	movwf	___awmod@dividend+1
  2650     027A  120A  118A  21F4  120A  118A  	fcall	___awmod
  2651     027F  0870               	movf	?___awmod,w
  2652     0280  1283               	bcf	3,5	;RP0=0, select bank0
  2653     0281  1303               	bcf	3,6	;RP1=0, select bank0
  2654     0282  00A3               	movwf	deshacer@uni
  2655     0283                     l1794:
  2656                           
  2657                           ;main.c: 207:     if(p == 2){
  2658     0283  3002               	movlw	2
  2659     0284  067A               	xorwf	deshacer@p,w
  2660     0285  047B               	iorwf	deshacer@p+1,w
  2661     0286  1D03               	btfss	3,2
  2662     0287  2A89               	goto	u1601
  2663     0288  2A8A               	goto	u1600
  2664     0289                     u1601:
  2665     0289  2A8C               	goto	l1802
  2666     028A                     u1600:
  2667     028A                     l1796:
  2668                           
  2669                           ;main.c: 208:         return cente;
  2670     028A  0822               	movf	deshacer@cente,w
  2671     028B  2AAB               	goto	l117
  2672     028C                     l1802:
  2673     028C  037A               	decf	deshacer@p,w
  2674     028D  047B               	iorwf	deshacer@p+1,w
  2675     028E  1D03               	btfss	3,2
  2676     028F  2A91               	goto	u1611
  2677     0290  2A92               	goto	u1610
  2678     0291                     u1611:
  2679     0291  2AA4               	goto	l1810
  2680     0292                     u1610:
  2681     0292                     l1804:
  2682                           
  2683                           ;main.c: 211:         return (dec/10);
  2684     0292  300A               	movlw	10
  2685     0293  00F0               	movwf	___awdiv@divisor
  2686     0294  3000               	movlw	0
  2687     0295  00F1               	movwf	___awdiv@divisor+1
  2688     0296  0824               	movf	deshacer@dec,w
  2689     0297  00A0               	movwf	??_deshacer
  2690     0298  01A1               	clrf	??_deshacer+1
  2691     0299  0820               	movf	??_deshacer,w
  2692     029A  00F2               	movwf	___awdiv@dividend
  2693     029B  0821               	movf	??_deshacer+1,w
  2694     029C  00F3               	movwf	___awdiv@dividend+1
  2695     029D  120A  118A  2312  120A  118A  	fcall	___awdiv
  2696     02A2  0870               	movf	?___awdiv,w
  2697     02A3  2AAB               	goto	l117
  2698     02A4                     l1810:
  2699     02A4  087A               	movf	deshacer@p,w
  2700     02A5  047B               	iorwf	deshacer@p+1,w
  2701     02A6  1D03               	btfss	3,2
  2702     02A7  2AA9               	goto	u1621
  2703     02A8  2AAA               	goto	u1620
  2704     02A9                     u1621:
  2705     02A9  2AAB               	goto	l117
  2706     02AA                     u1620:
  2707     02AA                     l1812:
  2708                           
  2709                           ;main.c: 214:         return uni;
  2710     02AA  0823               	movf	deshacer@uni,w
  2711     02AB                     l117:
  2712     02AB  0008               	return
  2713     02AC                     __end_of_deshacer:
  2714                           
  2715                           	psect	text9
  2716     0047                     __ptext9:	
  2717 ;; *************** function ___lwmod *****************
  2718 ;; Defined at:
  2719 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  divisor         2    0[COMMON] unsigned int 
  2722 ;;  dividend        2    2[COMMON] unsigned int 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  counter         1    5[COMMON] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  2    0[COMMON] unsigned int 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         4       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0
  2736 ;;      Temps:          1       0       0       0       0
  2737 ;;      Totals:         6       0       0       0       0
  2738 ;;Total ram usage:        6 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_deshacer
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747     0047                     ___lwmod:	
  2748                           ;psect for function ___lwmod
  2749                           
  2750     0047                     l1690:	
  2751                           ;incstack = 0
  2752                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2753                           
  2754     0047  0870               	movf	___lwmod@divisor,w
  2755     0048  0471               	iorwf	___lwmod@divisor+1,w
  2756     0049  1903               	btfsc	3,2
  2757     004A  284C               	goto	u1501
  2758     004B  284D               	goto	u1500
  2759     004C                     u1501:
  2760     004C  287C               	goto	l1708
  2761     004D                     u1500:
  2762     004D                     l1692:
  2763     004D  01F5               	clrf	___lwmod@counter
  2764     004E  0AF5               	incf	___lwmod@counter,f
  2765     004F  285B               	goto	l1698
  2766     0050                     l1694:
  2767     0050  3001               	movlw	1
  2768     0051                     u1515:
  2769     0051  1003               	clrc
  2770     0052  0DF0               	rlf	___lwmod@divisor,f
  2771     0053  0DF1               	rlf	___lwmod@divisor+1,f
  2772     0054  3EFF               	addlw	-1
  2773     0055  1D03               	skipz
  2774     0056  2851               	goto	u1515
  2775     0057                     l1696:
  2776     0057  3001               	movlw	1
  2777     0058  00F4               	movwf	??___lwmod
  2778     0059  0874               	movf	??___lwmod,w
  2779     005A  07F5               	addwf	___lwmod@counter,f
  2780     005B                     l1698:
  2781     005B  1FF1               	btfss	___lwmod@divisor+1,7
  2782     005C  285E               	goto	u1521
  2783     005D  285F               	goto	u1520
  2784     005E                     u1521:
  2785     005E  2850               	goto	l1694
  2786     005F                     u1520:
  2787     005F                     l1700:
  2788     005F  0871               	movf	___lwmod@divisor+1,w
  2789     0060  0273               	subwf	___lwmod@dividend+1,w
  2790     0061  1D03               	skipz
  2791     0062  2865               	goto	u1535
  2792     0063  0870               	movf	___lwmod@divisor,w
  2793     0064  0272               	subwf	___lwmod@dividend,w
  2794     0065                     u1535:
  2795     0065  1C03               	skipc
  2796     0066  2868               	goto	u1531
  2797     0067  2869               	goto	u1530
  2798     0068                     u1531:
  2799     0068  286F               	goto	l1704
  2800     0069                     u1530:
  2801     0069                     l1702:
  2802     0069  0870               	movf	___lwmod@divisor,w
  2803     006A  02F2               	subwf	___lwmod@dividend,f
  2804     006B  0871               	movf	___lwmod@divisor+1,w
  2805     006C  1C03               	skipc
  2806     006D  03F3               	decf	___lwmod@dividend+1,f
  2807     006E  02F3               	subwf	___lwmod@dividend+1,f
  2808     006F                     l1704:
  2809     006F  3001               	movlw	1
  2810     0070                     u1545:
  2811     0070  1003               	clrc
  2812     0071  0CF1               	rrf	___lwmod@divisor+1,f
  2813     0072  0CF0               	rrf	___lwmod@divisor,f
  2814     0073  3EFF               	addlw	-1
  2815     0074  1D03               	skipz
  2816     0075  2870               	goto	u1545
  2817     0076                     l1706:
  2818     0076  3001               	movlw	1
  2819     0077  02F5               	subwf	___lwmod@counter,f
  2820     0078  1D03               	btfss	3,2
  2821     0079  287B               	goto	u1551
  2822     007A  287C               	goto	u1550
  2823     007B                     u1551:
  2824     007B  285F               	goto	l1700
  2825     007C                     u1550:
  2826     007C                     l1708:
  2827     007C  0873               	movf	___lwmod@dividend+1,w
  2828     007D  00F1               	movwf	?___lwmod+1
  2829     007E  0872               	movf	___lwmod@dividend,w
  2830     007F  00F0               	movwf	?___lwmod
  2831     0080                     l588:
  2832     0080  0008               	return
  2833     0081                     __end_of___lwmod:
  2834                           
  2835                           	psect	text10
  2836     0081                     __ptext10:	
  2837 ;; *************** function ___lwdiv *****************
  2838 ;; Defined at:
  2839 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  divisor         2    0[COMMON] unsigned int 
  2842 ;;  dividend        2    2[COMMON] unsigned int 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  quotient        2    5[COMMON] unsigned int 
  2845 ;;  counter         1    7[COMMON] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  2    0[COMMON] unsigned int 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         4       0       0       0       0
  2856 ;;      Locals:         3       0       0       0       0
  2857 ;;      Temps:          1       0       0       0       0
  2858 ;;      Totals:         8       0       0       0       0
  2859 ;;Total ram usage:        8 bytes
  2860 ;; Hardware stack levels used: 1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_deshacer
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868     0081                     ___lwdiv:	
  2869                           ;psect for function ___lwdiv
  2870                           
  2871     0081                     l1664:	
  2872                           ;incstack = 0
  2873                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2874                           
  2875     0081  01F5               	clrf	___lwdiv@quotient
  2876     0082  01F6               	clrf	___lwdiv@quotient+1
  2877     0083                     l1666:
  2878     0083  0870               	movf	___lwdiv@divisor,w
  2879     0084  0471               	iorwf	___lwdiv@divisor+1,w
  2880     0085  1903               	btfsc	3,2
  2881     0086  2888               	goto	u1431
  2882     0087  2889               	goto	u1430
  2883     0088                     u1431:
  2884     0088  28C0               	goto	l1686
  2885     0089                     u1430:
  2886     0089                     l1668:
  2887     0089  01F7               	clrf	___lwdiv@counter
  2888     008A  0AF7               	incf	___lwdiv@counter,f
  2889     008B  2897               	goto	l1674
  2890     008C                     l1670:
  2891     008C  3001               	movlw	1
  2892     008D                     u1445:
  2893     008D  1003               	clrc
  2894     008E  0DF0               	rlf	___lwdiv@divisor,f
  2895     008F  0DF1               	rlf	___lwdiv@divisor+1,f
  2896     0090  3EFF               	addlw	-1
  2897     0091  1D03               	skipz
  2898     0092  288D               	goto	u1445
  2899     0093                     l1672:
  2900     0093  3001               	movlw	1
  2901     0094  00F4               	movwf	??___lwdiv
  2902     0095  0874               	movf	??___lwdiv,w
  2903     0096  07F7               	addwf	___lwdiv@counter,f
  2904     0097                     l1674:
  2905     0097  1FF1               	btfss	___lwdiv@divisor+1,7
  2906     0098  289A               	goto	u1451
  2907     0099  289B               	goto	u1450
  2908     009A                     u1451:
  2909     009A  288C               	goto	l1670
  2910     009B                     u1450:
  2911     009B                     l1676:
  2912     009B  3001               	movlw	1
  2913     009C                     u1465:
  2914     009C  1003               	clrc
  2915     009D  0DF5               	rlf	___lwdiv@quotient,f
  2916     009E  0DF6               	rlf	___lwdiv@quotient+1,f
  2917     009F  3EFF               	addlw	-1
  2918     00A0  1D03               	skipz
  2919     00A1  289C               	goto	u1465
  2920     00A2  0871               	movf	___lwdiv@divisor+1,w
  2921     00A3  0273               	subwf	___lwdiv@dividend+1,w
  2922     00A4  1D03               	skipz
  2923     00A5  28A8               	goto	u1475
  2924     00A6  0870               	movf	___lwdiv@divisor,w
  2925     00A7  0272               	subwf	___lwdiv@dividend,w
  2926     00A8                     u1475:
  2927     00A8  1C03               	skipc
  2928     00A9  28AB               	goto	u1471
  2929     00AA  28AC               	goto	u1470
  2930     00AB                     u1471:
  2931     00AB  28B3               	goto	l1682
  2932     00AC                     u1470:
  2933     00AC                     l1678:
  2934     00AC  0870               	movf	___lwdiv@divisor,w
  2935     00AD  02F2               	subwf	___lwdiv@dividend,f
  2936     00AE  0871               	movf	___lwdiv@divisor+1,w
  2937     00AF  1C03               	skipc
  2938     00B0  03F3               	decf	___lwdiv@dividend+1,f
  2939     00B1  02F3               	subwf	___lwdiv@dividend+1,f
  2940     00B2                     l1680:
  2941     00B2  1475               	bsf	___lwdiv@quotient,0
  2942     00B3                     l1682:
  2943     00B3  3001               	movlw	1
  2944     00B4                     u1485:
  2945     00B4  1003               	clrc
  2946     00B5  0CF1               	rrf	___lwdiv@divisor+1,f
  2947     00B6  0CF0               	rrf	___lwdiv@divisor,f
  2948     00B7  3EFF               	addlw	-1
  2949     00B8  1D03               	skipz
  2950     00B9  28B4               	goto	u1485
  2951     00BA                     l1684:
  2952     00BA  3001               	movlw	1
  2953     00BB  02F7               	subwf	___lwdiv@counter,f
  2954     00BC  1D03               	btfss	3,2
  2955     00BD  28BF               	goto	u1491
  2956     00BE  28C0               	goto	u1490
  2957     00BF                     u1491:
  2958     00BF  289B               	goto	l1676
  2959     00C0                     u1490:
  2960     00C0                     l1686:
  2961     00C0  0876               	movf	___lwdiv@quotient+1,w
  2962     00C1  00F1               	movwf	?___lwdiv+1
  2963     00C2  0875               	movf	___lwdiv@quotient,w
  2964     00C3  00F0               	movwf	?___lwdiv
  2965     00C4                     l578:
  2966     00C4  0008               	return
  2967     00C5                     __end_of___lwdiv:
  2968                           
  2969                           	psect	text11
  2970     01F4                     __ptext11:	
  2971 ;; *************** function ___awmod *****************
  2972 ;; Defined at:
  2973 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  divisor         2    0[COMMON] int 
  2976 ;;  dividend        2    2[COMMON] int 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  sign            1    6[COMMON] unsigned char 
  2979 ;;  counter         1    5[COMMON] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  2    0[COMMON] int 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         4       0       0       0       0
  2990 ;;      Locals:         2       0       0       0       0
  2991 ;;      Temps:          1       0       0       0       0
  2992 ;;      Totals:         7       0       0       0       0
  2993 ;;Total ram usage:        7 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_deshacer
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002     01F4                     ___awmod:	
  3003                           ;psect for function ___awmod
  3004                           
  3005     01F4                     l1626:	
  3006                           ;incstack = 0
  3007                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3008                           
  3009     01F4  01F6               	clrf	___awmod@sign
  3010     01F5                     l1628:
  3011     01F5  1FF3               	btfss	___awmod@dividend+1,7
  3012     01F6  29F8               	goto	u1341
  3013     01F7  29F9               	goto	u1340
  3014     01F8                     u1341:
  3015     01F8  2A00               	goto	l1634
  3016     01F9                     u1340:
  3017     01F9                     l1630:
  3018     01F9  09F2               	comf	___awmod@dividend,f
  3019     01FA  09F3               	comf	___awmod@dividend+1,f
  3020     01FB  0AF2               	incf	___awmod@dividend,f
  3021     01FC  1903               	skipnz
  3022     01FD  0AF3               	incf	___awmod@dividend+1,f
  3023     01FE                     l1632:
  3024     01FE  01F6               	clrf	___awmod@sign
  3025     01FF  0AF6               	incf	___awmod@sign,f
  3026     0200                     l1634:
  3027     0200  1FF1               	btfss	___awmod@divisor+1,7
  3028     0201  2A03               	goto	u1351
  3029     0202  2A04               	goto	u1350
  3030     0203                     u1351:
  3031     0203  2A09               	goto	l1638
  3032     0204                     u1350:
  3033     0204                     l1636:
  3034     0204  09F0               	comf	___awmod@divisor,f
  3035     0205  09F1               	comf	___awmod@divisor+1,f
  3036     0206  0AF0               	incf	___awmod@divisor,f
  3037     0207  1903               	skipnz
  3038     0208  0AF1               	incf	___awmod@divisor+1,f
  3039     0209                     l1638:
  3040     0209  0870               	movf	___awmod@divisor,w
  3041     020A  0471               	iorwf	___awmod@divisor+1,w
  3042     020B  1903               	btfsc	3,2
  3043     020C  2A0E               	goto	u1361
  3044     020D  2A0F               	goto	u1360
  3045     020E                     u1361:
  3046     020E  2A3E               	goto	l1656
  3047     020F                     u1360:
  3048     020F                     l1640:
  3049     020F  01F5               	clrf	___awmod@counter
  3050     0210  0AF5               	incf	___awmod@counter,f
  3051     0211  2A1D               	goto	l1646
  3052     0212                     l1642:
  3053     0212  3001               	movlw	1
  3054     0213                     u1375:
  3055     0213  1003               	clrc
  3056     0214  0DF0               	rlf	___awmod@divisor,f
  3057     0215  0DF1               	rlf	___awmod@divisor+1,f
  3058     0216  3EFF               	addlw	-1
  3059     0217  1D03               	skipz
  3060     0218  2A13               	goto	u1375
  3061     0219                     l1644:
  3062     0219  3001               	movlw	1
  3063     021A  00F4               	movwf	??___awmod
  3064     021B  0874               	movf	??___awmod,w
  3065     021C  07F5               	addwf	___awmod@counter,f
  3066     021D                     l1646:
  3067     021D  1FF1               	btfss	___awmod@divisor+1,7
  3068     021E  2A20               	goto	u1381
  3069     021F  2A21               	goto	u1380
  3070     0220                     u1381:
  3071     0220  2A12               	goto	l1642
  3072     0221                     u1380:
  3073     0221                     l1648:
  3074     0221  0871               	movf	___awmod@divisor+1,w
  3075     0222  0273               	subwf	___awmod@dividend+1,w
  3076     0223  1D03               	skipz
  3077     0224  2A27               	goto	u1395
  3078     0225  0870               	movf	___awmod@divisor,w
  3079     0226  0272               	subwf	___awmod@dividend,w
  3080     0227                     u1395:
  3081     0227  1C03               	skipc
  3082     0228  2A2A               	goto	u1391
  3083     0229  2A2B               	goto	u1390
  3084     022A                     u1391:
  3085     022A  2A31               	goto	l1652
  3086     022B                     u1390:
  3087     022B                     l1650:
  3088     022B  0870               	movf	___awmod@divisor,w
  3089     022C  02F2               	subwf	___awmod@dividend,f
  3090     022D  0871               	movf	___awmod@divisor+1,w
  3091     022E  1C03               	skipc
  3092     022F  03F3               	decf	___awmod@dividend+1,f
  3093     0230  02F3               	subwf	___awmod@dividend+1,f
  3094     0231                     l1652:
  3095     0231  3001               	movlw	1
  3096     0232                     u1405:
  3097     0232  1003               	clrc
  3098     0233  0CF1               	rrf	___awmod@divisor+1,f
  3099     0234  0CF0               	rrf	___awmod@divisor,f
  3100     0235  3EFF               	addlw	-1
  3101     0236  1D03               	skipz
  3102     0237  2A32               	goto	u1405
  3103     0238                     l1654:
  3104     0238  3001               	movlw	1
  3105     0239  02F5               	subwf	___awmod@counter,f
  3106     023A  1D03               	btfss	3,2
  3107     023B  2A3D               	goto	u1411
  3108     023C  2A3E               	goto	u1410
  3109     023D                     u1411:
  3110     023D  2A21               	goto	l1648
  3111     023E                     u1410:
  3112     023E                     l1656:
  3113     023E  0876               	movf	___awmod@sign,w
  3114     023F  1903               	btfsc	3,2
  3115     0240  2A42               	goto	u1421
  3116     0241  2A43               	goto	u1420
  3117     0242                     u1421:
  3118     0242  2A48               	goto	l1660
  3119     0243                     u1420:
  3120     0243                     l1658:
  3121     0243  09F2               	comf	___awmod@dividend,f
  3122     0244  09F3               	comf	___awmod@dividend+1,f
  3123     0245  0AF2               	incf	___awmod@dividend,f
  3124     0246  1903               	skipnz
  3125     0247  0AF3               	incf	___awmod@dividend+1,f
  3126     0248                     l1660:
  3127     0248  0873               	movf	___awmod@dividend+1,w
  3128     0249  00F1               	movwf	?___awmod+1
  3129     024A  0872               	movf	___awmod@dividend,w
  3130     024B  00F0               	movwf	?___awmod
  3131     024C                     l472:
  3132     024C  0008               	return
  3133     024D                     __end_of___awmod:
  3134                           
  3135                           	psect	text12
  3136     0312                     __ptext12:	
  3137 ;; *************** function ___awdiv *****************
  3138 ;; Defined at:
  3139 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  divisor         2    0[COMMON] int 
  3142 ;;  dividend        2    2[COMMON] int 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  quotient        2    7[COMMON] int 
  3145 ;;  sign            1    6[COMMON] unsigned char 
  3146 ;;  counter         1    5[COMMON] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2    0[COMMON] int 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         4       0       0       0       0
  3157 ;;      Locals:         4       0       0       0       0
  3158 ;;      Temps:          1       0       0       0       0
  3159 ;;      Totals:         9       0       0       0       0
  3160 ;;Total ram usage:        9 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_deshacer
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169     0312                     ___awdiv:	
  3170                           ;psect for function ___awdiv
  3171                           
  3172     0312                     l1582:	
  3173                           ;incstack = 0
  3174                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3175                           
  3176     0312  01F6               	clrf	___awdiv@sign
  3177     0313                     l1584:
  3178     0313  1FF1               	btfss	___awdiv@divisor+1,7
  3179     0314  2B16               	goto	u1241
  3180     0315  2B17               	goto	u1240
  3181     0316                     u1241:
  3182     0316  2B1E               	goto	l1590
  3183     0317                     u1240:
  3184     0317                     l1586:
  3185     0317  09F0               	comf	___awdiv@divisor,f
  3186     0318  09F1               	comf	___awdiv@divisor+1,f
  3187     0319  0AF0               	incf	___awdiv@divisor,f
  3188     031A  1903               	skipnz
  3189     031B  0AF1               	incf	___awdiv@divisor+1,f
  3190     031C                     l1588:
  3191     031C  01F6               	clrf	___awdiv@sign
  3192     031D  0AF6               	incf	___awdiv@sign,f
  3193     031E                     l1590:
  3194     031E  1FF3               	btfss	___awdiv@dividend+1,7
  3195     031F  2B21               	goto	u1251
  3196     0320  2B22               	goto	u1250
  3197     0321                     u1251:
  3198     0321  2B2B               	goto	l1596
  3199     0322                     u1250:
  3200     0322                     l1592:
  3201     0322  09F2               	comf	___awdiv@dividend,f
  3202     0323  09F3               	comf	___awdiv@dividend+1,f
  3203     0324  0AF2               	incf	___awdiv@dividend,f
  3204     0325  1903               	skipnz
  3205     0326  0AF3               	incf	___awdiv@dividend+1,f
  3206     0327                     l1594:
  3207     0327  3001               	movlw	1
  3208     0328  00F4               	movwf	??___awdiv
  3209     0329  0874               	movf	??___awdiv,w
  3210     032A  06F6               	xorwf	___awdiv@sign,f
  3211     032B                     l1596:
  3212     032B  01F7               	clrf	___awdiv@quotient
  3213     032C  01F8               	clrf	___awdiv@quotient+1
  3214     032D                     l1598:
  3215     032D  0870               	movf	___awdiv@divisor,w
  3216     032E  0471               	iorwf	___awdiv@divisor+1,w
  3217     032F  1903               	btfsc	3,2
  3218     0330  2B32               	goto	u1261
  3219     0331  2B33               	goto	u1260
  3220     0332                     u1261:
  3221     0332  2B6A               	goto	l1618
  3222     0333                     u1260:
  3223     0333                     l1600:
  3224     0333  01F5               	clrf	___awdiv@counter
  3225     0334  0AF5               	incf	___awdiv@counter,f
  3226     0335  2B41               	goto	l1606
  3227     0336                     l1602:
  3228     0336  3001               	movlw	1
  3229     0337                     u1275:
  3230     0337  1003               	clrc
  3231     0338  0DF0               	rlf	___awdiv@divisor,f
  3232     0339  0DF1               	rlf	___awdiv@divisor+1,f
  3233     033A  3EFF               	addlw	-1
  3234     033B  1D03               	skipz
  3235     033C  2B37               	goto	u1275
  3236     033D                     l1604:
  3237     033D  3001               	movlw	1
  3238     033E  00F4               	movwf	??___awdiv
  3239     033F  0874               	movf	??___awdiv,w
  3240     0340  07F5               	addwf	___awdiv@counter,f
  3241     0341                     l1606:
  3242     0341  1FF1               	btfss	___awdiv@divisor+1,7
  3243     0342  2B44               	goto	u1281
  3244     0343  2B45               	goto	u1280
  3245     0344                     u1281:
  3246     0344  2B36               	goto	l1602
  3247     0345                     u1280:
  3248     0345                     l1608:
  3249     0345  3001               	movlw	1
  3250     0346                     u1295:
  3251     0346  1003               	clrc
  3252     0347  0DF7               	rlf	___awdiv@quotient,f
  3253     0348  0DF8               	rlf	___awdiv@quotient+1,f
  3254     0349  3EFF               	addlw	-1
  3255     034A  1D03               	skipz
  3256     034B  2B46               	goto	u1295
  3257     034C  0871               	movf	___awdiv@divisor+1,w
  3258     034D  0273               	subwf	___awdiv@dividend+1,w
  3259     034E  1D03               	skipz
  3260     034F  2B52               	goto	u1305
  3261     0350  0870               	movf	___awdiv@divisor,w
  3262     0351  0272               	subwf	___awdiv@dividend,w
  3263     0352                     u1305:
  3264     0352  1C03               	skipc
  3265     0353  2B55               	goto	u1301
  3266     0354  2B56               	goto	u1300
  3267     0355                     u1301:
  3268     0355  2B5D               	goto	l1614
  3269     0356                     u1300:
  3270     0356                     l1610:
  3271     0356  0870               	movf	___awdiv@divisor,w
  3272     0357  02F2               	subwf	___awdiv@dividend,f
  3273     0358  0871               	movf	___awdiv@divisor+1,w
  3274     0359  1C03               	skipc
  3275     035A  03F3               	decf	___awdiv@dividend+1,f
  3276     035B  02F3               	subwf	___awdiv@dividend+1,f
  3277     035C                     l1612:
  3278     035C  1477               	bsf	___awdiv@quotient,0
  3279     035D                     l1614:
  3280     035D  3001               	movlw	1
  3281     035E                     u1315:
  3282     035E  1003               	clrc
  3283     035F  0CF1               	rrf	___awdiv@divisor+1,f
  3284     0360  0CF0               	rrf	___awdiv@divisor,f
  3285     0361  3EFF               	addlw	-1
  3286     0362  1D03               	skipz
  3287     0363  2B5E               	goto	u1315
  3288     0364                     l1616:
  3289     0364  3001               	movlw	1
  3290     0365  02F5               	subwf	___awdiv@counter,f
  3291     0366  1D03               	btfss	3,2
  3292     0367  2B69               	goto	u1321
  3293     0368  2B6A               	goto	u1320
  3294     0369                     u1321:
  3295     0369  2B45               	goto	l1608
  3296     036A                     u1320:
  3297     036A                     l1618:
  3298     036A  0876               	movf	___awdiv@sign,w
  3299     036B  1903               	btfsc	3,2
  3300     036C  2B6E               	goto	u1331
  3301     036D  2B6F               	goto	u1330
  3302     036E                     u1331:
  3303     036E  2B74               	goto	l1622
  3304     036F                     u1330:
  3305     036F                     l1620:
  3306     036F  09F7               	comf	___awdiv@quotient,f
  3307     0370  09F8               	comf	___awdiv@quotient+1,f
  3308     0371  0AF7               	incf	___awdiv@quotient,f
  3309     0372  1903               	skipnz
  3310     0373  0AF8               	incf	___awdiv@quotient+1,f
  3311     0374                     l1622:
  3312     0374  0878               	movf	___awdiv@quotient+1,w
  3313     0375  00F1               	movwf	?___awdiv+1
  3314     0376  0877               	movf	___awdiv@quotient,w
  3315     0377  00F0               	movwf	?___awdiv
  3316     0378                     l459:
  3317     0378  0008               	return
  3318     0379                     __end_of___awdiv:
  3319                           
  3320                           	psect	text13
  3321     048C                     __ptext13:	
  3322 ;; *************** function ___xxtofl *****************
  3323 ;; Defined at:
  3324 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  sign            1    wreg     unsigned char 
  3327 ;;  val             4   26[BANK0 ] long 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  sign            1   34[BANK0 ] unsigned char 
  3330 ;;  arg             4   36[BANK0 ] unsigned long 
  3331 ;;  exp             1   35[BANK0 ] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  4   26[BANK0 ] unsigned char 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       4       0       0       0
  3342 ;;      Locals:         0       6       0       0       0
  3343 ;;      Temps:          0       4       0       0       0
  3344 ;;      Totals:         0      14       0       0       0
  3345 ;;Total ram usage:       14 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354     048C                     ___xxtofl:	
  3355                           ;psect for function ___xxtofl
  3356                           
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3360                           ;___xxtofl@sign stored from wreg
  3361     048C  1283               	bcf	3,5	;RP0=0, select bank0
  3362     048D  1303               	bcf	3,6	;RP1=0, select bank0
  3363     048E  00C2               	movwf	___xxtofl@sign
  3364     048F                     l1934:
  3365     048F  0842               	movf	___xxtofl@sign,w
  3366     0490  1903               	btfsc	3,2
  3367     0491  2C93               	goto	u1831
  3368     0492  2C94               	goto	u1830
  3369     0493                     u1831:
  3370     0493  2CA8               	goto	l1940
  3371     0494                     u1830:
  3372     0494                     l1936:
  3373     0494  1FBD               	btfss	___xxtofl@val+3,7
  3374     0495  2C97               	goto	u1841
  3375     0496  2C98               	goto	u1840
  3376     0497                     u1841:
  3377     0497  2CA8               	goto	l1940
  3378     0498                     u1840:
  3379     0498                     l1938:
  3380     0498  093A               	comf	___xxtofl@val,w
  3381     0499  00C4               	movwf	___xxtofl@arg
  3382     049A  093B               	comf	___xxtofl@val+1,w
  3383     049B  00C5               	movwf	___xxtofl@arg+1
  3384     049C  093C               	comf	___xxtofl@val+2,w
  3385     049D  00C6               	movwf	___xxtofl@arg+2
  3386     049E  093D               	comf	___xxtofl@val+3,w
  3387     049F  00C7               	movwf	___xxtofl@arg+3
  3388     04A0  0AC4               	incf	___xxtofl@arg,f
  3389     04A1  1903               	skipnz
  3390     04A2  0AC5               	incf	___xxtofl@arg+1,f
  3391     04A3  1903               	skipnz
  3392     04A4  0AC6               	incf	___xxtofl@arg+2,f
  3393     04A5  1903               	skipnz
  3394     04A6  0AC7               	incf	___xxtofl@arg+3,f
  3395     04A7  2CB0               	goto	l739
  3396     04A8                     l1940:
  3397     04A8  083D               	movf	___xxtofl@val+3,w
  3398     04A9  00C7               	movwf	___xxtofl@arg+3
  3399     04AA  083C               	movf	___xxtofl@val+2,w
  3400     04AB  00C6               	movwf	___xxtofl@arg+2
  3401     04AC  083B               	movf	___xxtofl@val+1,w
  3402     04AD  00C5               	movwf	___xxtofl@arg+1
  3403     04AE  083A               	movf	___xxtofl@val,w
  3404     04AF  00C4               	movwf	___xxtofl@arg
  3405     04B0                     l739:
  3406     04B0  083D               	movf	___xxtofl@val+3,w
  3407     04B1  043C               	iorwf	___xxtofl@val+2,w
  3408     04B2  043B               	iorwf	___xxtofl@val+1,w
  3409     04B3  043A               	iorwf	___xxtofl@val,w
  3410     04B4  1D03               	skipz
  3411     04B5  2CB7               	goto	u1851
  3412     04B6  2CB8               	goto	u1850
  3413     04B7                     u1851:
  3414     04B7  2CC1               	goto	l1946
  3415     04B8                     u1850:
  3416     04B8                     l1942:
  3417     04B8  3000               	movlw	0
  3418     04B9  00BD               	movwf	?___xxtofl+3
  3419     04BA  3000               	movlw	0
  3420     04BB  00BC               	movwf	?___xxtofl+2
  3421     04BC  3000               	movlw	0
  3422     04BD  00BB               	movwf	?___xxtofl+1
  3423     04BE  3000               	movlw	0
  3424     04BF  00BA               	movwf	?___xxtofl
  3425     04C0  2D45               	goto	l741
  3426     04C1                     l1946:
  3427     04C1  3096               	movlw	150
  3428     04C2  00C3               	movwf	___xxtofl@exp
  3429     04C3  2CD1               	goto	l1950
  3430     04C4                     l1948:
  3431     04C4  3001               	movlw	1
  3432     04C5  00BE               	movwf	??___xxtofl
  3433     04C6  083E               	movf	??___xxtofl,w
  3434     04C7  07C3               	addwf	___xxtofl@exp,f
  3435     04C8  3001               	movlw	1
  3436     04C9                     u1865:
  3437     04C9  1003               	clrc
  3438     04CA  0CC7               	rrf	___xxtofl@arg+3,f
  3439     04CB  0CC6               	rrf	___xxtofl@arg+2,f
  3440     04CC  0CC5               	rrf	___xxtofl@arg+1,f
  3441     04CD  0CC4               	rrf	___xxtofl@arg,f
  3442     04CE  3EFF               	addlw	-1
  3443     04CF  1D03               	skipz
  3444     04D0  2CC9               	goto	u1865
  3445     04D1                     l1950:
  3446     04D1  30FE               	movlw	254
  3447     04D2  0547               	andwf	___xxtofl@arg+3,w
  3448     04D3  1D03               	btfss	3,2
  3449     04D4  2CD6               	goto	u1871
  3450     04D5  2CD7               	goto	u1870
  3451     04D6                     u1871:
  3452     04D6  2CC4               	goto	l1948
  3453     04D7                     u1870:
  3454     04D7  2CF3               	goto	l745
  3455     04D8                     l1952:
  3456     04D8  3001               	movlw	1
  3457     04D9  00BE               	movwf	??___xxtofl
  3458     04DA  083E               	movf	??___xxtofl,w
  3459     04DB  07C3               	addwf	___xxtofl@exp,f
  3460     04DC                     l1954:
  3461     04DC  3001               	movlw	1
  3462     04DD  07C4               	addwf	___xxtofl@arg,f
  3463     04DE  3000               	movlw	0
  3464     04DF  1803               	skipnc
  3465     04E0  3001               	movlw	1
  3466     04E1  07C5               	addwf	___xxtofl@arg+1,f
  3467     04E2  3000               	movlw	0
  3468     04E3  1803               	skipnc
  3469     04E4  3001               	movlw	1
  3470     04E5  07C6               	addwf	___xxtofl@arg+2,f
  3471     04E6  3000               	movlw	0
  3472     04E7  1803               	skipnc
  3473     04E8  3001               	movlw	1
  3474     04E9  07C7               	addwf	___xxtofl@arg+3,f
  3475     04EA                     l1956:
  3476     04EA  3001               	movlw	1
  3477     04EB                     u1885:
  3478     04EB  1003               	clrc
  3479     04EC  0CC7               	rrf	___xxtofl@arg+3,f
  3480     04ED  0CC6               	rrf	___xxtofl@arg+2,f
  3481     04EE  0CC5               	rrf	___xxtofl@arg+1,f
  3482     04EF  0CC4               	rrf	___xxtofl@arg,f
  3483     04F0  3EFF               	addlw	-1
  3484     04F1  1D03               	skipz
  3485     04F2  2CEB               	goto	u1885
  3486     04F3                     l745:
  3487     04F3  30FF               	movlw	255
  3488     04F4  0547               	andwf	___xxtofl@arg+3,w
  3489     04F5  1D03               	btfss	3,2
  3490     04F6  2CF8               	goto	u1891
  3491     04F7  2CF9               	goto	u1890
  3492     04F8                     u1891:
  3493     04F8  2CD8               	goto	l1952
  3494     04F9                     u1890:
  3495     04F9  2D05               	goto	l1960
  3496     04FA                     l1958:
  3497     04FA  3001               	movlw	1
  3498     04FB  02C3               	subwf	___xxtofl@exp,f
  3499     04FC  3001               	movlw	1
  3500     04FD  00BE               	movwf	??___xxtofl
  3501     04FE                     u1905:
  3502     04FE  1003               	clrc
  3503     04FF  0DC4               	rlf	___xxtofl@arg,f
  3504     0500  0DC5               	rlf	___xxtofl@arg+1,f
  3505     0501  0DC6               	rlf	___xxtofl@arg+2,f
  3506     0502  0DC7               	rlf	___xxtofl@arg+3,f
  3507     0503  0BBE               	decfsz	??___xxtofl,f
  3508     0504  2CFE               	goto	u1905
  3509     0505                     l1960:
  3510     0505  1BC6               	btfsc	___xxtofl@arg+2,7
  3511     0506  2D08               	goto	u1911
  3512     0507  2D09               	goto	u1910
  3513     0508                     u1911:
  3514     0508  2D0F               	goto	l752
  3515     0509                     u1910:
  3516     0509                     l1962:
  3517     0509  3002               	movlw	2
  3518     050A  0243               	subwf	___xxtofl@exp,w
  3519     050B  1803               	skipnc
  3520     050C  2D0E               	goto	u1921
  3521     050D  2D0F               	goto	u1920
  3522     050E                     u1921:
  3523     050E  2CFA               	goto	l1958
  3524     050F                     u1920:
  3525     050F                     l752:
  3526     050F  1843               	btfsc	___xxtofl@exp,0
  3527     0510  2D12               	goto	u1931
  3528     0511  2D13               	goto	u1930
  3529     0512                     u1931:
  3530     0512  2D1B               	goto	l753
  3531     0513                     u1930:
  3532     0513                     l1964:
  3533     0513  30FF               	movlw	255
  3534     0514  05C4               	andwf	___xxtofl@arg,f
  3535     0515  30FF               	movlw	255
  3536     0516  05C5               	andwf	___xxtofl@arg+1,f
  3537     0517  307F               	movlw	127
  3538     0518  05C6               	andwf	___xxtofl@arg+2,f
  3539     0519  30FF               	movlw	255
  3540     051A  05C7               	andwf	___xxtofl@arg+3,f
  3541     051B                     l753:
  3542     051B  1003               	clrc
  3543     051C  0CC3               	rrf	___xxtofl@exp,f
  3544     051D                     l1966:
  3545     051D  0843               	movf	___xxtofl@exp,w
  3546     051E  00BE               	movwf	??___xxtofl
  3547     051F  01BF               	clrf	??___xxtofl+1
  3548     0520  01C0               	clrf	??___xxtofl+2
  3549     0521  01C1               	clrf	??___xxtofl+3
  3550     0522  3018               	movlw	24
  3551     0523                     u1945:
  3552     0523  1003               	clrc
  3553     0524  0DBE               	rlf	??___xxtofl,f
  3554     0525  0DBF               	rlf	??___xxtofl+1,f
  3555     0526  0DC0               	rlf	??___xxtofl+2,f
  3556     0527  0DC1               	rlf	??___xxtofl+3,f
  3557     0528                     u1940:
  3558     0528  3EFF               	addlw	-1
  3559     0529  1D03               	skipz
  3560     052A  2D23               	goto	u1945
  3561     052B  083E               	movf	??___xxtofl,w
  3562     052C  04C4               	iorwf	___xxtofl@arg,f
  3563     052D  083F               	movf	??___xxtofl+1,w
  3564     052E  04C5               	iorwf	___xxtofl@arg+1,f
  3565     052F  0840               	movf	??___xxtofl+2,w
  3566     0530  04C6               	iorwf	___xxtofl@arg+2,f
  3567     0531  0841               	movf	??___xxtofl+3,w
  3568     0532  04C7               	iorwf	___xxtofl@arg+3,f
  3569     0533                     l1968:
  3570     0533  0842               	movf	___xxtofl@sign,w
  3571     0534  1903               	btfsc	3,2
  3572     0535  2D37               	goto	u1951
  3573     0536  2D38               	goto	u1950
  3574     0537                     u1951:
  3575     0537  2D3D               	goto	l1974
  3576     0538                     u1950:
  3577     0538                     l1970:
  3578     0538  1FBD               	btfss	___xxtofl@val+3,7
  3579     0539  2D3B               	goto	u1961
  3580     053A  2D3C               	goto	u1960
  3581     053B                     u1961:
  3582     053B  2D3D               	goto	l1974
  3583     053C                     u1960:
  3584     053C                     l1972:
  3585     053C  17C7               	bsf	___xxtofl@arg+3,7
  3586     053D                     l1974:
  3587     053D  0847               	movf	___xxtofl@arg+3,w
  3588     053E  00BD               	movwf	?___xxtofl+3
  3589     053F  0846               	movf	___xxtofl@arg+2,w
  3590     0540  00BC               	movwf	?___xxtofl+2
  3591     0541  0845               	movf	___xxtofl@arg+1,w
  3592     0542  00BB               	movwf	?___xxtofl+1
  3593     0543  0844               	movf	___xxtofl@arg,w
  3594     0544  00BA               	movwf	?___xxtofl
  3595     0545                     l741:
  3596     0545  0008               	return
  3597     0546                     __end_of___xxtofl:
  3598                           
  3599                           	psect	text14
  3600     0379                     __ptext14:	
  3601 ;; *************** function ___fltol *****************
  3602 ;; Defined at:
  3603 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  f1              4    0[COMMON] unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  exp1            1    9[COMMON] unsigned char 
  3608 ;;  sign1           1    8[COMMON] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  4    0[COMMON] long 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         4       0       0       0       0
  3619 ;;      Locals:         2       0       0       0       0
  3620 ;;      Temps:          4       0       0       0       0
  3621 ;;      Totals:        10       0       0       0       0
  3622 ;;Total ram usage:       10 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_main
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631     0379                     ___fltol:	
  3632                           ;psect for function ___fltol
  3633                           
  3634     0379                     l1898:	
  3635                           ;incstack = 0
  3636                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3637                           
  3638     0379  1003               	clrc
  3639     037A  0D72               	rlf	___fltol@f1+2,w
  3640     037B  0D73               	rlf	___fltol@f1+3,w
  3641     037C  00F9               	movwf	___fltol@exp1
  3642     037D  0879               	movf	___fltol@exp1,w
  3643     037E  1D03               	btfss	3,2
  3644     037F  2B81               	goto	u1731
  3645     0380  2B82               	goto	u1730
  3646     0381                     u1731:
  3647     0381  2B8B               	goto	l1904
  3648     0382                     u1730:
  3649     0382                     l1900:
  3650     0382  3000               	movlw	0
  3651     0383  00F3               	movwf	?___fltol+3
  3652     0384  3000               	movlw	0
  3653     0385  00F2               	movwf	?___fltol+2
  3654     0386  3000               	movlw	0
  3655     0387  00F1               	movwf	?___fltol+1
  3656     0388  3000               	movlw	0
  3657     0389  00F0               	movwf	?___fltol
  3658     038A  2BEE               	goto	l492
  3659     038B                     l1904:
  3660     038B  0870               	movf	___fltol@f1,w
  3661     038C  00F4               	movwf	??___fltol
  3662     038D  0871               	movf	___fltol@f1+1,w
  3663     038E  00F5               	movwf	??___fltol+1
  3664     038F  0872               	movf	___fltol@f1+2,w
  3665     0390  00F6               	movwf	??___fltol+2
  3666     0391  0873               	movf	___fltol@f1+3,w
  3667     0392  00F7               	movwf	??___fltol+3
  3668     0393  301F               	movlw	31
  3669     0394                     u1745:
  3670     0394  1003               	clrc
  3671     0395  0CF7               	rrf	??___fltol+3,f
  3672     0396  0CF6               	rrf	??___fltol+2,f
  3673     0397  0CF5               	rrf	??___fltol+1,f
  3674     0398  0CF4               	rrf	??___fltol,f
  3675     0399                     u1740:
  3676     0399  3EFF               	addlw	-1
  3677     039A  1D03               	skipz
  3678     039B  2B94               	goto	u1745
  3679     039C  0874               	movf	??___fltol,w
  3680     039D  00F8               	movwf	___fltol@sign1
  3681     039E                     l1906:
  3682     039E  17F2               	bsf	___fltol@f1+2,7
  3683     039F                     l1908:
  3684     039F  30FF               	movlw	255
  3685     03A0  05F0               	andwf	___fltol@f1,f
  3686     03A1  30FF               	movlw	255
  3687     03A2  05F1               	andwf	___fltol@f1+1,f
  3688     03A3  30FF               	movlw	255
  3689     03A4  05F2               	andwf	___fltol@f1+2,f
  3690     03A5  3000               	movlw	0
  3691     03A6  05F3               	andwf	___fltol@f1+3,f
  3692     03A7                     l1910:
  3693     03A7  3096               	movlw	150
  3694     03A8  02F9               	subwf	___fltol@exp1,f
  3695     03A9                     l1912:
  3696     03A9  1FF9               	btfss	___fltol@exp1,7
  3697     03AA  2BAC               	goto	u1751
  3698     03AB  2BAD               	goto	u1750
  3699     03AC                     u1751:
  3700     03AC  2BC7               	goto	l1922
  3701     03AD                     u1750:
  3702     03AD                     l1914:
  3703     03AD  0879               	movf	___fltol@exp1,w
  3704     03AE  3A80               	xorlw	128
  3705     03AF  3E97               	addlw	151
  3706     03B0  1803               	skipnc
  3707     03B1  2BB3               	goto	u1761
  3708     03B2  2BB4               	goto	u1760
  3709     03B3                     u1761:
  3710     03B3  2BB5               	goto	l1920
  3711     03B4                     u1760:
  3712     03B4  2B82               	goto	l1900
  3713     03B5                     l1920:
  3714     03B5  3001               	movlw	1
  3715     03B6                     u1775:
  3716     03B6  1003               	clrc
  3717     03B7  0CF3               	rrf	___fltol@f1+3,f
  3718     03B8  0CF2               	rrf	___fltol@f1+2,f
  3719     03B9  0CF1               	rrf	___fltol@f1+1,f
  3720     03BA  0CF0               	rrf	___fltol@f1,f
  3721     03BB  3EFF               	addlw	-1
  3722     03BC  1D03               	skipz
  3723     03BD  2BB6               	goto	u1775
  3724     03BE  3001               	movlw	1
  3725     03BF  00F4               	movwf	??___fltol
  3726     03C0  0874               	movf	??___fltol,w
  3727     03C1  07F9               	addwf	___fltol@exp1,f
  3728     03C2  1D03               	btfss	3,2
  3729     03C3  2BC5               	goto	u1781
  3730     03C4  2BC6               	goto	u1780
  3731     03C5                     u1781:
  3732     03C5  2BB5               	goto	l1920
  3733     03C6                     u1780:
  3734     03C6  2BDE               	goto	l1930
  3735     03C7                     l1922:
  3736     03C7  3020               	movlw	32
  3737     03C8  0279               	subwf	___fltol@exp1,w
  3738     03C9  1C03               	skipc
  3739     03CA  2BCC               	goto	u1791
  3740     03CB  2BCD               	goto	u1790
  3741     03CC                     u1791:
  3742     03CC  2BD9               	goto	l499
  3743     03CD                     u1790:
  3744     03CD  2B82               	goto	l1900
  3745     03CE                     l1928:
  3746     03CE  3001               	movlw	1
  3747     03CF  00F4               	movwf	??___fltol
  3748     03D0                     u1805:
  3749     03D0  1003               	clrc
  3750     03D1  0DF0               	rlf	___fltol@f1,f
  3751     03D2  0DF1               	rlf	___fltol@f1+1,f
  3752     03D3  0DF2               	rlf	___fltol@f1+2,f
  3753     03D4  0DF3               	rlf	___fltol@f1+3,f
  3754     03D5  0BF4               	decfsz	??___fltol,f
  3755     03D6  2BD0               	goto	u1805
  3756     03D7  3001               	movlw	1
  3757     03D8  02F9               	subwf	___fltol@exp1,f
  3758     03D9                     l499:
  3759     03D9  0879               	movf	___fltol@exp1,w
  3760     03DA  1D03               	btfss	3,2
  3761     03DB  2BDD               	goto	u1811
  3762     03DC  2BDE               	goto	u1810
  3763     03DD                     u1811:
  3764     03DD  2BCE               	goto	l1928
  3765     03DE                     u1810:
  3766     03DE                     l1930:
  3767     03DE  0878               	movf	___fltol@sign1,w
  3768     03DF  1903               	btfsc	3,2
  3769     03E0  2BE2               	goto	u1821
  3770     03E1  2BE3               	goto	u1820
  3771     03E2                     u1821:
  3772     03E2  2BEE               	goto	l502
  3773     03E3                     u1820:
  3774     03E3                     l1932:
  3775     03E3  09F0               	comf	___fltol@f1,f
  3776     03E4  09F1               	comf	___fltol@f1+1,f
  3777     03E5  09F2               	comf	___fltol@f1+2,f
  3778     03E6  09F3               	comf	___fltol@f1+3,f
  3779     03E7  0AF0               	incf	___fltol@f1,f
  3780     03E8  1903               	skipnz
  3781     03E9  0AF1               	incf	___fltol@f1+1,f
  3782     03EA  1903               	skipnz
  3783     03EB  0AF2               	incf	___fltol@f1+2,f
  3784     03EC  1903               	skipnz
  3785     03ED  0AF3               	incf	___fltol@f1+3,f
  3786     03EE                     l502:
  3787     03EE                     l492:
  3788     03EE  0008               	return
  3789     03EF                     __end_of___fltol:
  3790                           
  3791                           	psect	text15
  3792     0FB0                     __ptext15:	
  3793 ;; *************** function _Lcd8_Write_String *****************
  3794 ;; Defined at:
  3795 ;;		line 65 in file "LCD8.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  a               1    wreg     PTR unsigned char 
  3798 ;;		 -> STR_2(2), STR_1(5), 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  a               1    4[COMMON] PTR unsigned char 
  3801 ;;		 -> STR_2(2), STR_1(5), 
  3802 ;;  i               1    3[COMMON] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       0       0       0       0
  3813 ;;      Locals:         2       0       0       0       0
  3814 ;;      Temps:          1       0       0       0       0
  3815 ;;      Totals:         3       0       0       0       0
  3816 ;;Total ram usage:        3 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 1
  3819 ;; This function calls:
  3820 ;;		_Lcd8_Write_Char
  3821 ;; This function is called by:
  3822 ;;		_main
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826     0FB0                     _Lcd8_Write_String:	
  3827                           ;psect for function _Lcd8_Write_String
  3828                           
  3829                           
  3830                           ;incstack = 0
  3831                           ; Regs used in _Lcd8_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3832                           ;Lcd8_Write_String@a stored from wreg
  3833     0FB0  00F4               	movwf	Lcd8_Write_String@a
  3834     0FB1                     l1750:
  3835                           
  3836                           ;LCD8.c: 66:     char i;;LCD8.c: 67:     for (i = 0; a[i] != '\0'; i++)
  3837     0FB1  01F3               	clrf	Lcd8_Write_String@i
  3838     0FB2  2FC4               	goto	l1756
  3839     0FB3                     l1752:
  3840                           
  3841                           ;LCD8.c: 68:         Lcd8_Write_Char(a[i]);
  3842     0FB3  0873               	movf	Lcd8_Write_String@i,w
  3843     0FB4  0774               	addwf	Lcd8_Write_String@a,w
  3844     0FB5  0084               	movwf	4
  3845     0FB6  120A  158A  2000  120A  158A  	fcall	stringdir
  3846     0FBB  120A  158A  274D  120A  158A  	fcall	_Lcd8_Write_Char
  3847     0FC0                     l1754:
  3848     0FC0  3001               	movlw	1
  3849     0FC1  00F2               	movwf	??_Lcd8_Write_String
  3850     0FC2  0872               	movf	??_Lcd8_Write_String,w
  3851     0FC3  07F3               	addwf	Lcd8_Write_String@i,f
  3852     0FC4                     l1756:
  3853     0FC4  0873               	movf	Lcd8_Write_String@i,w
  3854     0FC5  0774               	addwf	Lcd8_Write_String@a,w
  3855     0FC6  0084               	movwf	4
  3856     0FC7  120A  158A  2000  120A  158A  	fcall	stringdir
  3857     0FCC  3A00               	xorlw	0
  3858     0FCD  1D03               	skipz
  3859     0FCE  2FD0               	goto	u1581
  3860     0FCF  2FD1               	goto	u1580
  3861     0FD0                     u1581:
  3862     0FD0  2FB3               	goto	l1752
  3863     0FD1                     u1580:
  3864     0FD1                     l214:
  3865     0FD1  0008               	return
  3866     0FD2                     __end_of_Lcd8_Write_String:
  3867                           
  3868                           	psect	text16
  3869     0F4D                     __ptext16:	
  3870 ;; *************** function _Lcd8_Write_Char *****************
  3871 ;; Defined at:
  3872 ;;		line 55 in file "LCD8.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  a               1    wreg     unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  a               1    1[COMMON] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3886 ;;      Params:         0       0       0       0       0
  3887 ;;      Locals:         1       0       0       0       0
  3888 ;;      Temps:          1       0       0       0       0
  3889 ;;      Totals:         2       0       0       0       0
  3890 ;;Total ram usage:        2 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;;		_Lcd8_Write_String
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900     0F4D                     _Lcd8_Write_Char:	
  3901                           ;psect for function _Lcd8_Write_Char
  3902                           
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _Lcd8_Write_Char: [wreg]
  3906                           ;Lcd8_Write_Char@a stored from wreg
  3907     0F4D  00F1               	movwf	Lcd8_Write_Char@a
  3908     0F4E                     l1496:
  3909                           
  3910                           ;LCD8.c: 57:     RC0 = 1;
  3911     0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3912     0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3913     0F50  1407               	bsf	7,0	;volatile
  3914     0F51                     l1498:
  3915                           
  3916                           ;LCD8.c: 58:     PORTD = a;
  3917     0F51  0871               	movf	Lcd8_Write_Char@a,w
  3918     0F52  0088               	movwf	8	;volatile
  3919     0F53                     l1500:
  3920                           
  3921                           ;LCD8.c: 59:     RC1 = 1;
  3922     0F53  1487               	bsf	7,1	;volatile
  3923                           
  3924                           ;LCD8.c: 60:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3925     0F54  300D               	movlw	13
  3926     0F55  00F0               	movwf	??_Lcd8_Write_Char
  3927     0F56                     u1987:
  3928     0F56  0BF0               	decfsz	??_Lcd8_Write_Char,f
  3929     0F57  2F56               	goto	u1987
  3930     0F58                     l1502:
  3931                           
  3932                           ;LCD8.c: 61:     RC1 = 0;
  3933     0F58  1283               	bcf	3,5	;RP0=0, select bank0
  3934     0F59  1303               	bcf	3,6	;RP1=0, select bank0
  3935     0F5A  1087               	bcf	7,1	;volatile
  3936     0F5B                     l208:
  3937     0F5B  0008               	return
  3938     0F5C                     __end_of_Lcd8_Write_Char:
  3939                           
  3940                           	psect	text17
  3941     0F70                     __ptext17:	
  3942 ;; *************** function _Lcd8_Set_Cursor *****************
  3943 ;; Defined at:
  3944 ;;		line 24 in file "LCD8.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  a               1    wreg     unsigned char 
  3947 ;;  b               1    3[COMMON] unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  a               1    4[COMMON] unsigned char 
  3950 ;;  x               1    5[COMMON] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0, pclath, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3960 ;;      Params:         1       0       0       0       0
  3961 ;;      Locals:         2       0       0       0       0
  3962 ;;      Temps:          0       0       0       0       0
  3963 ;;      Totals:         3       0       0       0       0
  3964 ;;Total ram usage:        3 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 1
  3967 ;; This function calls:
  3968 ;;		_Lcd8_Cmd
  3969 ;; This function is called by:
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974     0F70                     _Lcd8_Set_Cursor:	
  3975                           ;psect for function _Lcd8_Set_Cursor
  3976                           
  3977                           
  3978                           ;incstack = 0
  3979                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3980                           ;Lcd8_Set_Cursor@a stored from wreg
  3981     0F70  00F4               	movwf	Lcd8_Set_Cursor@a
  3982     0F71                     l1738:
  3983                           
  3984                           ;LCD8.c: 24: void Lcd8_Set_Cursor(char a, char b);LCD8.c: 25: {;LCD8.c: 26:     char x;;
      +                          LCD8.c: 27:     if (a == 1) {
  3985     0F71  0374               	decf	Lcd8_Set_Cursor@a,w
  3986     0F72  1D03               	btfss	3,2
  3987     0F73  2F75               	goto	u1561
  3988     0F74  2F76               	goto	u1560
  3989     0F75                     u1561:
  3990     0F75  2F80               	goto	l1744
  3991     0F76                     u1560:
  3992     0F76                     l1740:
  3993                           
  3994                           ;LCD8.c: 29:         x = 0x80 + b - 1;
  3995     0F76  0873               	movf	Lcd8_Set_Cursor@b,w
  3996     0F77  3E7F               	addlw	127
  3997     0F78  00F5               	movwf	Lcd8_Set_Cursor@x
  3998     0F79                     l1742:
  3999                           
  4000                           ;LCD8.c: 30:         Lcd8_Cmd(x);
  4001     0F79  0875               	movf	Lcd8_Set_Cursor@x,w
  4002     0F7A  120A  158A  275C  120A  158A  	fcall	_Lcd8_Cmd
  4003                           
  4004                           ;LCD8.c: 31:     }
  4005     0F7F  2F8F               	goto	l202
  4006     0F80                     l1744:
  4007     0F80  3002               	movlw	2
  4008     0F81  0674               	xorwf	Lcd8_Set_Cursor@a,w
  4009     0F82  1D03               	btfss	3,2
  4010     0F83  2F85               	goto	u1571
  4011     0F84  2F86               	goto	u1570
  4012     0F85                     u1571:
  4013     0F85  2F8F               	goto	l202
  4014     0F86                     u1570:
  4015     0F86                     l1746:
  4016                           
  4017                           ;LCD8.c: 34:         x = 0xC0 + b - 1;
  4018     0F86  0873               	movf	Lcd8_Set_Cursor@b,w
  4019     0F87  3EBF               	addlw	191
  4020     0F88  00F5               	movwf	Lcd8_Set_Cursor@x
  4021     0F89                     l1748:
  4022                           
  4023                           ;LCD8.c: 35:         Lcd8_Cmd(x);
  4024     0F89  0875               	movf	Lcd8_Set_Cursor@x,w
  4025     0F8A  120A  158A  275C  120A  158A  	fcall	_Lcd8_Cmd
  4026     0F8F                     l202:
  4027     0F8F  0008               	return
  4028     0F90                     __end_of_Lcd8_Set_Cursor:
  4029                           
  4030                           	psect	text18
  4031     01A2                     __ptext18:	
  4032 ;; *************** function _Lcd8_Init *****************
  4033 ;; Defined at:
  4034 ;;		line 39 in file "LCD8.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0, pclath, cstack
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4048 ;;      Params:         0       0       0       0       0
  4049 ;;      Locals:         0       0       0       0       0
  4050 ;;      Temps:          2       0       0       0       0
  4051 ;;      Totals:         2       0       0       0       0
  4052 ;;Total ram usage:        2 bytes
  4053 ;; Hardware stack levels used: 1
  4054 ;; Hardware stack levels required when called: 1
  4055 ;; This function calls:
  4056 ;;		_Lcd8_Cmd
  4057 ;; This function is called by:
  4058 ;;		_main
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062     01A2                     _Lcd8_Init:	
  4063                           ;psect for function _Lcd8_Init
  4064                           
  4065     01A2                     l1716:	
  4066                           ;incstack = 0
  4067                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
  4068                           
  4069                           
  4070                           ;LCD8.c: 41:     Lcd8_Cmd(0x00);
  4071     01A2  3000               	movlw	0
  4072     01A3  120A  158A  275C  120A  118A  	fcall	_Lcd8_Cmd
  4073     01A8                     l1718:
  4074                           
  4075                           ;LCD8.c: 42:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4076     01A8  301A               	movlw	26
  4077     01A9  00F4               	movwf	??_Lcd8_Init+1
  4078     01AA  30F8               	movlw	248
  4079     01AB  00F3               	movwf	??_Lcd8_Init
  4080     01AC                     u1997:
  4081     01AC  0BF3               	decfsz	??_Lcd8_Init,f
  4082     01AD  29AC               	goto	u1997
  4083     01AE  0BF4               	decfsz	??_Lcd8_Init+1,f
  4084     01AF  29AC               	goto	u1997
  4085     01B0  0000               	nop
  4086     01B1                     l1720:
  4087                           
  4088                           ;LCD8.c: 43:     Lcd8_Cmd(0x30);
  4089     01B1  3030               	movlw	48
  4090     01B2  120A  158A  275C  120A  118A  	fcall	_Lcd8_Cmd
  4091                           
  4092                           ;LCD8.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4093     01B7  3007               	movlw	7
  4094     01B8  00F4               	movwf	??_Lcd8_Init+1
  4095     01B9  307D               	movlw	125
  4096     01BA  00F3               	movwf	??_Lcd8_Init
  4097     01BB                     u2007:
  4098     01BB  0BF3               	decfsz	??_Lcd8_Init,f
  4099     01BC  29BB               	goto	u2007
  4100     01BD  0BF4               	decfsz	??_Lcd8_Init+1,f
  4101     01BE  29BB               	goto	u2007
  4102     01BF                     l1722:
  4103                           
  4104                           ;LCD8.c: 45:     Lcd8_Cmd(0x30);
  4105     01BF  3030               	movlw	48
  4106     01C0  120A  158A  275C  120A  118A  	fcall	_Lcd8_Cmd
  4107     01C5                     l1724:
  4108                           
  4109                           ;LCD8.c: 46:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4110     01C5  300D               	movlw	13
  4111     01C6  00F4               	movwf	??_Lcd8_Init+1
  4112     01C7  30FB               	movlw	251
  4113     01C8  00F3               	movwf	??_Lcd8_Init
  4114     01C9                     u2017:
  4115     01C9  0BF3               	decfsz	??_Lcd8_Init,f
  4116     01CA  29C9               	goto	u2017
  4117     01CB  0BF4               	decfsz	??_Lcd8_Init+1,f
  4118     01CC  29C9               	goto	u2017
  4119     01CD  29CE               	nop2
  4120                           
  4121                           ;LCD8.c: 47:     Lcd8_Cmd(0x30);
  4122     01CE  3030               	movlw	48
  4123     01CF  120A  158A  275C  120A  118A  	fcall	_Lcd8_Cmd
  4124     01D4                     l1726:
  4125                           
  4126                           ;LCD8.c: 48:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4127     01D4  30C7               	movlw	199
  4128     01D5  00F3               	movwf	??_Lcd8_Init
  4129     01D6                     u2027:
  4130     01D6  29D7               	nop2
  4131     01D7  0BF3               	decfsz	??_Lcd8_Init,f
  4132     01D8  29D6               	goto	u2027
  4133     01D9  29DA               	nop2
  4134     01DA  29DB               	nop2
  4135     01DB                     l1728:
  4136                           
  4137                           ;LCD8.c: 49:     Lcd8_Cmd(0x38);
  4138     01DB  3038               	movlw	56
  4139     01DC  120A  158A  275C  120A  118A  	fcall	_Lcd8_Cmd
  4140     01E1                     l1730:
  4141                           
  4142                           ;LCD8.c: 50:     Lcd8_Cmd(0x0C);
  4143     01E1  300C               	movlw	12
  4144     01E2  120A  158A  275C  120A  118A  	fcall	_Lcd8_Cmd
  4145     01E7                     l1732:
  4146                           
  4147                           ;LCD8.c: 51:     Lcd8_Cmd(0x01);
  4148     01E7  3001               	movlw	1
  4149     01E8  120A  158A  275C  120A  118A  	fcall	_Lcd8_Cmd
  4150     01ED                     l1734:
  4151                           
  4152                           ;LCD8.c: 52:     Lcd8_Cmd(0x06);
  4153     01ED  3006               	movlw	6
  4154     01EE  120A  158A  275C  120A  118A  	fcall	_Lcd8_Cmd
  4155     01F3                     l205:
  4156     01F3  0008               	return
  4157     01F4                     __end_of_Lcd8_Init:
  4158                           
  4159                           	psect	text19
  4160     0F40                     __ptext19:	
  4161 ;; *************** function _Lcd8_Clear *****************
  4162 ;; Defined at:
  4163 ;;		line 19 in file "LCD8.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, pclath, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4177 ;;      Params:         0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0
  4180 ;;      Totals:         0       0       0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 1
  4184 ;; This function calls:
  4185 ;;		_Lcd8_Cmd
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191     0F40                     _Lcd8_Clear:	
  4192                           ;psect for function _Lcd8_Clear
  4193                           
  4194     0F40                     l1736:	
  4195                           ;incstack = 0
  4196                           ; Regs used in _Lcd8_Clear: [wreg+status,2+status,0+pclath+cstack]
  4197                           
  4198                           
  4199                           ;LCD8.c: 20:     Lcd8_Cmd(0);
  4200     0F40  3000               	movlw	0
  4201     0F41  120A  158A  275C  120A  158A  	fcall	_Lcd8_Cmd
  4202                           
  4203                           ;LCD8.c: 21:     Lcd8_Cmd(1);
  4204     0F46  3001               	movlw	1
  4205     0F47  120A  158A  275C  120A  158A  	fcall	_Lcd8_Cmd
  4206     0F4C                     l196:
  4207     0F4C  0008               	return
  4208     0F4D                     __end_of_Lcd8_Clear:
  4209                           
  4210                           	psect	text20
  4211     0F5C                     __ptext20:	
  4212 ;; *************** function _Lcd8_Cmd *****************
  4213 ;; Defined at:
  4214 ;;		line 9 in file "LCD8.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  a               1    wreg     unsigned char 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  a               1    2[COMMON] unsigned char 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4228 ;;      Params:         0       0       0       0       0
  4229 ;;      Locals:         1       0       0       0       0
  4230 ;;      Temps:          2       0       0       0       0
  4231 ;;      Totals:         3       0       0       0       0
  4232 ;;Total ram usage:        3 bytes
  4233 ;; Hardware stack levels used: 1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_Lcd8_Clear
  4238 ;;		_Lcd8_Set_Cursor
  4239 ;;		_Lcd8_Init
  4240 ;;		_Lcd8_Shift_Right
  4241 ;;		_Lcd8_Shift_Left
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245     0F5C                     _Lcd8_Cmd:	
  4246                           ;psect for function _Lcd8_Cmd
  4247                           
  4248                           
  4249                           ;incstack = 0
  4250                           ; Regs used in _Lcd8_Cmd: [wreg]
  4251                           ;Lcd8_Cmd@a stored from wreg
  4252     0F5C  00F2               	movwf	Lcd8_Cmd@a
  4253     0F5D                     l1520:
  4254                           
  4255                           ;LCD8.c: 9: void Lcd8_Cmd(char a);LCD8.c: 10: {;LCD8.c: 11:     RC0 = 0;
  4256     0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  4257     0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  4258     0F5F  1007               	bcf	7,0	;volatile
  4259     0F60                     l1522:
  4260                           
  4261                           ;LCD8.c: 12:     PORTD = a;
  4262     0F60  0872               	movf	Lcd8_Cmd@a,w
  4263     0F61  0088               	movwf	8	;volatile
  4264     0F62                     l1524:
  4265                           
  4266                           ;LCD8.c: 13:     RC1 = 1;
  4267     0F62  1487               	bsf	7,1	;volatile
  4268                           
  4269                           ;LCD8.c: 14:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4270     0F63  3006               	movlw	6
  4271     0F64  00F1               	movwf	??_Lcd8_Cmd+1
  4272     0F65  3030               	movlw	48
  4273     0F66  00F0               	movwf	??_Lcd8_Cmd
  4274     0F67                     u2037:
  4275     0F67  0BF0               	decfsz	??_Lcd8_Cmd,f
  4276     0F68  2F67               	goto	u2037
  4277     0F69  0BF1               	decfsz	??_Lcd8_Cmd+1,f
  4278     0F6A  2F67               	goto	u2037
  4279     0F6B  0000               	nop
  4280     0F6C                     l1526:
  4281                           
  4282                           ;LCD8.c: 15:     RC1 = 0;
  4283     0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  4284     0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  4285     0F6E  1087               	bcf	7,1	;volatile
  4286     0F6F                     l193:
  4287     0F6F  0008               	return
  4288     0F70                     __end_of_Lcd8_Cmd:
  4289                           
  4290                           	psect	text21
  4291     0005                     __ptext21:	
  4292 ;; *************** function _I2C_Master_Write *****************
  4293 ;; Defined at:
  4294 ;;		line 65 in file "I2C.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  d               2    0[COMMON] unsigned int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0, pclath, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4308 ;;      Params:         2       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0
  4311 ;;      Totals:         2       0       0       0       0
  4312 ;;Total ram usage:        2 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 1
  4315 ;; This function calls:
  4316 ;;		_I2C_Master_Wait
  4317 ;; This function is called by:
  4318 ;;		_main
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322     0005                     _I2C_Master_Write:	
  4323                           ;psect for function _I2C_Master_Write
  4324                           
  4325     0005                     l1762:	
  4326                           ;incstack = 0
  4327                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4328                           
  4329                           
  4330                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4331     0005  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Wait
  4332     000A                     l1764:
  4333                           
  4334                           ;I2C.c: 68:     SSPBUF = d;
  4335     000A  0870               	movf	I2C_Master_Write@d,w
  4336     000B  1283               	bcf	3,5	;RP0=0, select bank0
  4337     000C  1303               	bcf	3,6	;RP1=0, select bank0
  4338     000D  0093               	movwf	19	;volatile
  4339     000E                     l171:
  4340     000E  0008               	return
  4341     000F                     __end_of_I2C_Master_Write:
  4342                           
  4343                           	psect	text22
  4344     0F2A                     __ptext22:	
  4345 ;; *************** function _I2C_Master_Stop *****************
  4346 ;; Defined at:
  4347 ;;		line 55 in file "I2C.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0, pclath, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4361 ;;      Params:         0       0       0       0       0
  4362 ;;      Locals:         0       0       0       0       0
  4363 ;;      Temps:          0       0       0       0       0
  4364 ;;      Totals:         0       0       0       0       0
  4365 ;;Total ram usage:        0 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 1
  4368 ;; This function calls:
  4369 ;;		_I2C_Master_Wait
  4370 ;; This function is called by:
  4371 ;;		_main
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375     0F2A                     _I2C_Master_Stop:	
  4376                           ;psect for function _I2C_Master_Stop
  4377                           
  4378     0F2A                     l1782:	
  4379                           ;incstack = 0
  4380                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4381                           
  4382                           
  4383                           ;I2C.c: 57:     I2C_Master_Wait();
  4384     0F2A  120A  158A  2733  120A  158A  	fcall	_I2C_Master_Wait
  4385     0F2F                     l1784:
  4386                           
  4387                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4388     0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  4389     0F30  1303               	bcf	3,6	;RP1=0, select bank1
  4390     0F31  1511               	bsf	17,2	;volatile
  4391     0F32                     l168:
  4392     0F32  0008               	return
  4393     0F33                     __end_of_I2C_Master_Stop:
  4394                           
  4395                           	psect	text23
  4396     0F21                     __ptext23:	
  4397 ;; *************** function _I2C_Master_Start *****************
  4398 ;; Defined at:
  4399 ;;		line 39 in file "I2C.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, pclath, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 1
  4420 ;; This function calls:
  4421 ;;		_I2C_Master_Wait
  4422 ;; This function is called by:
  4423 ;;		_main
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427     0F21                     _I2C_Master_Start:	
  4428                           ;psect for function _I2C_Master_Start
  4429                           
  4430     0F21                     l1758:	
  4431                           ;incstack = 0
  4432                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4433                           
  4434                           
  4435                           ;I2C.c: 41:     I2C_Master_Wait();
  4436     0F21  120A  158A  2733  120A  158A  	fcall	_I2C_Master_Wait
  4437     0F26                     l1760:
  4438                           
  4439                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4440     0F26  1683               	bsf	3,5	;RP0=1, select bank1
  4441     0F27  1303               	bcf	3,6	;RP1=0, select bank1
  4442     0F28  1411               	bsf	17,0	;volatile
  4443     0F29                     l162:
  4444     0F29  0008               	return
  4445     0F2A                     __end_of_I2C_Master_Start:
  4446                           
  4447                           	psect	text24
  4448     0F18                     __ptext24:	
  4449 ;; *************** function _I2C_Master_RepeatedStart *****************
  4450 ;; Defined at:
  4451 ;;		line 47 in file "I2C.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0, pclath, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4465 ;;      Params:         0       0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0
  4468 ;;      Totals:         0       0       0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; Hardware stack levels required when called: 1
  4472 ;; This function calls:
  4473 ;;		_I2C_Master_Wait
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479     0F18                     _I2C_Master_RepeatedStart:	
  4480                           ;psect for function _I2C_Master_RepeatedStart
  4481                           
  4482     0F18                     l1894:	
  4483                           ;incstack = 0
  4484                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4485                           
  4486                           
  4487                           ;I2C.c: 49:     I2C_Master_Wait();
  4488     0F18  120A  158A  2733  120A  158A  	fcall	_I2C_Master_Wait
  4489     0F1D                     l1896:
  4490                           
  4491                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  4492     0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  4493     0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  4494     0F1F  1491               	bsf	17,1	;volatile
  4495     0F20                     l165:
  4496     0F20  0008               	return
  4497     0F21                     __end_of_I2C_Master_RepeatedStart:
  4498                           
  4499                           	psect	text25
  4500     0FD2                     __ptext25:	
  4501 ;; *************** function _I2C_Master_Read *****************
  4502 ;; Defined at:
  4503 ;;		line 74 in file "I2C.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  a               2    0[COMMON] unsigned short 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  temp            2    4[COMMON] unsigned short 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2    0[COMMON] unsigned short 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, pclath, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4517 ;;      Params:         2       0       0       0       0
  4518 ;;      Locals:         2       0       0       0       0
  4519 ;;      Temps:          2       0       0       0       0
  4520 ;;      Totals:         6       0       0       0       0
  4521 ;;Total ram usage:        6 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 1
  4524 ;; This function calls:
  4525 ;;		_I2C_Master_Wait
  4526 ;; This function is called by:
  4527 ;;		_main
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531     0FD2                     _I2C_Master_Read:	
  4532                           ;psect for function _I2C_Master_Read
  4533                           
  4534     0FD2                     l1766:	
  4535                           ;incstack = 0
  4536                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4537                           
  4538                           
  4539                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4540     0FD2  120A  158A  2733  120A  158A  	fcall	_I2C_Master_Wait
  4541     0FD7                     l1768:
  4542                           
  4543                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4544     0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  4545     0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  4546     0FD9  1591               	bsf	17,3	;volatile
  4547                           
  4548                           ;I2C.c: 79:     I2C_Master_Wait();
  4549     0FDA  120A  158A  2733  120A  158A  	fcall	_I2C_Master_Wait
  4550     0FDF                     l1770:
  4551                           
  4552                           ;I2C.c: 80:     temp = SSPBUF;
  4553     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  4554     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  4555     0FE1  0813               	movf	19,w	;volatile
  4556     0FE2  00F2               	movwf	??_I2C_Master_Read
  4557     0FE3  01F3               	clrf	??_I2C_Master_Read+1
  4558     0FE4  0872               	movf	??_I2C_Master_Read,w
  4559     0FE5  00F4               	movwf	I2C_Master_Read@temp
  4560     0FE6  0873               	movf	??_I2C_Master_Read+1,w
  4561     0FE7  00F5               	movwf	I2C_Master_Read@temp+1
  4562     0FE8                     l1772:
  4563                           
  4564                           ;I2C.c: 81:     I2C_Master_Wait();
  4565     0FE8  120A  158A  2733  120A  158A  	fcall	_I2C_Master_Wait
  4566     0FED                     l1774:
  4567                           
  4568                           ;I2C.c: 82:     if(a == 1){
  4569     0FED  0370               	decf	I2C_Master_Read@a,w
  4570     0FEE  0471               	iorwf	I2C_Master_Read@a+1,w
  4571     0FEF  1D03               	btfss	3,2
  4572     0FF0  2FF2               	goto	u1591
  4573     0FF1  2FF3               	goto	u1590
  4574     0FF2                     u1591:
  4575     0FF2  2FF7               	goto	l174
  4576     0FF3                     u1590:
  4577     0FF3                     l1776:
  4578                           
  4579                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4580     0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  4581     0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  4582     0FF5  1291               	bcf	17,5	;volatile
  4583                           
  4584                           ;I2C.c: 84:     }else{
  4585     0FF6  2FFA               	goto	l175
  4586     0FF7                     l174:
  4587                           
  4588                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4589     0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  4590     0FF8  1303               	bcf	3,6	;RP1=0, select bank1
  4591     0FF9  1691               	bsf	17,5	;volatile
  4592     0FFA                     l175:	
  4593                           ;I2C.c: 86:     }
  4594                           
  4595                           
  4596                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4597     0FFA  1611               	bsf	17,4	;volatile
  4598     0FFB                     l1778:
  4599                           
  4600                           ;I2C.c: 88:     return temp;
  4601     0FFB  0875               	movf	I2C_Master_Read@temp+1,w
  4602     0FFC  00F1               	movwf	?_I2C_Master_Read+1
  4603     0FFD  0874               	movf	I2C_Master_Read@temp,w
  4604     0FFE  00F0               	movwf	?_I2C_Master_Read
  4605     0FFF                     l176:
  4606     0FFF  0008               	return
  4607     1000                     __end_of_I2C_Master_Read:
  4608                           
  4609                           	psect	text26
  4610     0F33                     __ptext26:	
  4611 ;; *************** function _I2C_Master_Wait *****************
  4612 ;; Defined at:
  4613 ;;		line 32 in file "I2C.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0
  4630 ;;      Totals:         0       0       0       0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_I2C_Master_Start
  4637 ;;		_I2C_Master_RepeatedStart
  4638 ;;		_I2C_Master_Stop
  4639 ;;		_I2C_Master_Write
  4640 ;;		_I2C_Master_Read
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644     0F33                     _I2C_Master_Wait:	
  4645                           ;psect for function _I2C_Master_Wait
  4646                           
  4647     0F33                     l1516:	
  4648                           ;incstack = 0
  4649                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4650                           
  4651     0F33                     l156:	
  4652                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4653                           
  4654     0F33  1683               	bsf	3,5	;RP0=1, select bank1
  4655     0F34  1303               	bcf	3,6	;RP1=0, select bank1
  4656     0F35  1914               	btfsc	20,2	;volatile
  4657     0F36  2F38               	goto	u1071
  4658     0F37  2F39               	goto	u1070
  4659     0F38                     u1071:
  4660     0F38  2F33               	goto	l156
  4661     0F39                     u1070:
  4662     0F39                     l1518:
  4663     0F39  0811               	movf	17,w	;volatile
  4664     0F3A  391F               	andlw	31
  4665     0F3B  1D03               	btfss	3,2
  4666     0F3C  2F3E               	goto	u1081
  4667     0F3D  2F3F               	goto	u1080
  4668     0F3E                     u1081:
  4669     0F3E  2F33               	goto	l156
  4670     0F3F                     u1080:
  4671     0F3F                     l159:
  4672     0F3F  0008               	return
  4673     0F40                     __end_of_I2C_Master_Wait:
  4674     007E                     btemp	set	126	;btemp
  4675     007E                     wtemp0	set	126
  4676                           
  4677                           	psect	idloc
  4678                           
  4679                           ;Config register IDLOC0 @ 0x2000
  4680                           ;	unspecified, using default values
  4681     2000                     	org	8192
  4682     2000  3FFF               	dw	16383
  4683                           
  4684                           ;Config register IDLOC1 @ 0x2001
  4685                           ;	unspecified, using default values
  4686     2001                     	org	8193
  4687     2001  3FFF               	dw	16383
  4688                           
  4689                           ;Config register IDLOC2 @ 0x2002
  4690                           ;	unspecified, using default values
  4691     2002                     	org	8194
  4692     2002  3FFF               	dw	16383
  4693                           
  4694                           ;Config register IDLOC3 @ 0x2003
  4695                           ;	unspecified, using default values
  4696     2003                     	org	8195
  4697     2003  3FFF               	dw	16383
  4698                           
  4699                           	psect	config
  4700                           
  4701                           ;Config register CONFIG1 @ 0x2007
  4702                           ;	Oscillator Selection bits
  4703                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4704                           ;	Watchdog Timer Enable bit
  4705                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4706                           ;	Power-up Timer Enable bit
  4707                           ;	PWRTE = OFF, PWRT disabled
  4708                           ;	RE3/MCLR pin function select bit
  4709                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4710                           ;	Code Protection bit
  4711                           ;	CP = OFF, Program memory code protection is disabled
  4712                           ;	Data Code Protection bit
  4713                           ;	CPD = OFF, Data memory code protection is disabled
  4714                           ;	Brown Out Reset Selection bits
  4715                           ;	BOREN = OFF, BOR disabled
  4716                           ;	Internal External Switchover bit
  4717                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4718                           ;	Fail-Safe Clock Monitor Enabled bit
  4719                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4720                           ;	Low Voltage Programming Enable bit
  4721                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4722                           ;	In-Circuit Debugger Mode bit
  4723                           ;	DEBUG = 0x1, unprogramme  4724     2007                     	org	8199
  4725     2007  20D4               	dw	8404
  4726                           
  4727                           ;Config register CONFIG2 @ 0x2008
  4728                           ;	Brown-out Reset Selection bit
  4729                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4730                           ;	Flash Program Memory Self Write Enable bits
  4731                           ;	WRT = OFF, Write protection off
  4732     2008                     	org	8200
  4733     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd8_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[2]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_deshacer
    _I2C_Master_Init->___lldiv
    _map->___aldiv
    ___aldiv->___lmul
    _deshacer->___fltol
    _Lcd8_Write_String->_Lcd8_Write_Char
    _Lcd8_Set_Cursor->_Lcd8_Cmd
    _Lcd8_Init->_Lcd8_Cmd
    _Lcd8_Clear->_Lcd8_Cmd

Critical Paths under _main in BANK0

    _main->___xxtofl
    _setup->_I2C_Master_Init
    _map->___aldiv
    ___xxtofl->_map

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8103
                                             40 BANK0      4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _Lcd8_Clear
                          _Lcd8_Init
                    _Lcd8_Set_Cursor
                    _Lcd8_Write_Char
                  _Lcd8_Write_String
                            ___fltol
                           ___xxtofl
                           _deshacer
                           _intachar
                                _map
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _map                                                 12     7      5    1155
                                             14 BANK0     12     7      5
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _intachar                                             1     1      0     220
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _deshacer                                             9     5      4    2182
                                             10 COMMON     4     0      4
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             26 BANK0     14    10      4
                                _map (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     457
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Write_String                                    3     3      0     178
                                              2 COMMON     3     3      0
                    _Lcd8_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Write_Char                                      2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Set_Cursor                                      3     2      1     992
                                              3 COMMON     3     2      1
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Init                                            2     2      0      22
                                              3 COMMON     2     2      0
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd8_Clear                                           0     0      0      22
                           _Lcd8_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd8_Cmd                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1466
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd8_Clear
     _Lcd8_Cmd
   _Lcd8_Init
     _Lcd8_Cmd
   _Lcd8_Set_Cursor
     _Lcd8_Cmd
   _Lcd8_Write_Char
   _Lcd8_Write_String
     _Lcd8_Write_Char
   ___fltol
   ___xxtofl
     _map (ARG)
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _deshacer
     ___awdiv
     ___awmod
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
   _intachar
   _map
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      50       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      50      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 23:55:46 2023

                               _t 0060                                 _u 0050                                 pc 0002  
                              l91 0FAF                                l95 01A1                      ___awdiv@sign 0076  
                              _ce 0054                                _de 0052                                _an 0059  
                              _va 005F                                fsr 0004                               l202 0F8F  
                             l108 01A1                               l124 0151                               l205 01F3  
                             l117 02AB                               l214 0FD1                               l208 0F5B  
                             l320 010A                               l153 0046                               l162 0F29  
                             l171 000E                               l156 0F33                               l165 0F20  
                             l174 0FF7                               l502 03EE                               l342 0311  
                             l159 0F3F                               l175 0FFA                               _ADC 0061  
                             l176 0FFF                               l168 0F32                               l193 0F6F  
                             l371 0403                               l196 0F4C                               l381 048B  
                             l472 024C                               l459 0378                               l492 03EE  
                             l741 0545                               l752 050F                               l753 051B  
                             l745 04F3                               l578 00C4                               l499 03D9  
                             l739 04B0                               l588 0080                               _GIE 005F  
                             _RC0 0038                               _RC1 0039                               u990 02BC  
                             u991 02BB                               _dia 005B                               _map 010B  
                             _hor 005C                               _mes 005A                               _min 005D  
                             _seg 005E                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0076                        _Lcd8_Clear 0F40                      map@resultado 0037  
                    ___fltol@exp1 0079                              l2000 05E6                              l2010 0628  
                            l2002 05EE                              l2100 07BC                              l2020 0678  
                            l2012 064B                              l2004 05F4                              l2110 07E7  
                            l2102 07C5                              l2030 06A2                              l2022 0680  
                            l2014 0653                              l2006 0618                              l2104 07CA  
                            l2040 06C6                              l2032 06AA                              l2024 0685  
                            l2016 066A                              l2008 0620                              l2106 07D3  
                            l2050 06F0                              l2042 06CF                              l2034 06AF  
                            l2026 068E                              l2018 066F                              l1500 0F53  
                            l2108 07DF                              l2060 071C                              l2052 06F9  
                            l2044 06DB                              l2036 06B8                              l2028 069A  
                            l1502 0F58                              l1510 0043                              l2070 0743  
                            l2062 0724                              l2054 0702                              l2046 06E3  
                            l2038 06C1                              l1520 0F5D                              l1600 0333  
                            l1512 0044                              l1504 000F                              l2080 076D  
                            l2072 0748                              l2064 072C                              l2056 0707  
                            l2048 06EB                              l1522 0F60                              l1610 0356  
                            l1602 0336                              l1530 00CD                              l1514 0045  
                            l1506 0013                              l2090 0792                              l2082 0772  
                            l2074 0751                              l2066 0731                              l2058 0710  
                            l1516 0F33                              l1524 0F62                              l1620 036F  
                            l1612 035C                              l1604 033D                              l1700 005F  
                            l1532 00D1                              l1508 0016                              l2092 079E  
                            l2084 077B                              l2076 075D                              l2068 073A  
                            l1518 0F39                              l1526 0F6C                              l1622 0374  
                            l1614 035D                              l1606 0341                              l1630 01F9  
                            l1702 0069                              l1550 0412                              l1542 03EF  
                            l1534 00E8                              l2094 07A6                              l2086 0784  
                            l2078 0765                              l1720 01B1                              l1616 0364  
                            l1608 0345                              l1640 020F                              l1632 01FE  
                            l1704 006F                              l1560 0436                              l1552 0416  
                            l1544 03F2                              l1536 00F1                              l1528 00C5  
                            l1480 02D0                              l1472 02AC                              l1712 0F90  
                            l2096 07AE                              l2088 0789                              l1730 01E1  
                            l1722 01BF                              l1618 036A                              l1650 022B  
                            l1642 0212                              l1634 0200                              l1626 01F4  
                            l1706 0076                              l1810 02A4                              l1802 028C  
                            l1570 0464                              l1562 043A                              l1554 041E  
                            l1546 03F6                              l1538 0102                              l1490 0303  
                            l1482 02D9                              l1474 02BC                              l1714 0FA2  
                            l2098 07B3                              l1732 01E7                              l1724 01C5  
                            l1716 01A2                              l1740 0F76                              l1900 0382  
                            l1660 0248                              l1652 0231                              l1644 0219  
                            l1636 0204                              l1628 01F5                              l1708 007C  
                            l1812 02AA                              l1804 0292                              l1572 046D  
                            l1564 0443                              l1556 0426                              l1548 0407  
                            l1484 02EB                              l1476 02BF                              l1492 0309  
                            l1734 01ED                              l1726 01D4                              l1718 01A8  
                            l1742 0F79                              l1750 0FB1                              l1910 03A7  
                            l1590 031E                              l1582 0312                              l1654 0238  
                            l1646 021D                              l1638 0209                              l1670 008C  
                            l1566 0455                              l1558 0429                              l1574 0473  
                            l1486 02F9                              l1478 02CC                              l1760 0F26  
                            l1736 0F40                              l1728 01DB                              l1744 0F80  
                            l1496 0F4E                              l1752 0FB3                              l1920 03B5  
                            l1912 03A9                              l1904 038B                              l1592 0322  
                            l1584 0313                              l1648 0221                              l1656 023E  
                            l1680 00B2                              l1672 0093                              l1664 0081  
                            l1840 0169                              l1832 0161                              l1824 015A  
                            l1816 0153                              l1576 0478                              l1568 0463  
                            l1488 02FA                              l1770 0FDF                              l1762 0005  
                            l1746 0F86                              l1738 0F71                              l1498 0F51  
                            l1754 0FC0                              l1930 03DE                              l1914 03AD  
                            l1922 03C7                              l1906 039E                              l1594 0327  
                            l1586 0317                              l1658 0243                              l1682 00B3  
                            l1674 0097                              l1666 0083                              l1690 0047  
                            l1850 0177                              l1842 016F                              l1834 0167  
                            l1826 015F                              l1818 0158                              l1578 0483  
                            l1772 0FE8                              l1764 000A                              l1748 0F89  
                            l1756 0FC4                              l1932 03E3                              l1908 039F  
                            l1940 04A8                              l1596 032B                              l1588 031C  
                            l1684 00BA                              l1676 009B                              l1668 0089  
                            l1692 004D                              l1774 0FED                              l1766 0FD2  
                            l1758 0F21                              l1782 0F2A                              l1950 04D1  
                            l1942 04B8                              l1934 048F                              l1598 032D  
                            l1678 00AC                              l1686 00C0                              l1694 0050  
                            l1776 0FF3                              l1768 0FD7                              l1784 0F2F  
                            l1928 03CE                              l1960 0505                              l1952 04D8  
                            l1936 0494                              l1696 0057                              l1792 024D  
                            l1880 0191                              l1872 0189                              l1864 0181  
                            l1856 0179                              l1848 0171                              l1778 0FFB  
                            l1970 0538                              l1962 0509                              l1954 04DC  
                            l1946 04C1                              l1938 0498                              l1698 005B  
                            l1794 0283                              l1890 019F                              l1882 0197  
                            l1874 018F                              l1866 0187                              l1858 017F  
                            l1786 010E                              l1972 053C                              l1964 0513  
                            l1956 04EA                              l1948 04C4                              l1796 028A  
                            l1788 014D                              l1980 055D                              l1894 0F18  
                            l1974 053D                              l1966 051D                              l1958 04FA  
                            l1990 0582                              l1982 0563                              ?_map 002E  
                            l1896 0F1D                              l1968 0533                              l1888 0199  
                            l1992 0586                              l1984 0568                              l1898 0379  
                            l1994 05B4                              l1986 0571                              l1978 0546  
                            l1996 05D6                              l1988 057D                              l1998 05DE  
                            STR_1 0806                              STR_2 080B                              u1010 02D0  
                            u1011 02CF                              u1101 00DA                              u1005 02C1  
                            u1102 00E1                              u1030 02EB                              u1103 00E8  
                            u1031 02EA                              u1200 0455                              u1201 0454  
                            u1025 02D2                              u1130 0102                              u1050 0309  
                            u1131 0101                              u1115 00EA                              u1051 0308  
                            u1035 02E7                              u1300 0356                              u1220 0473  
                            u1140 03F6                              u1060 0026                              u1301 0355  
                            u1221 0472                              u1205 0451                              u1141 03F5  
                            u1125 00F2                              u1045 02FB                              u1070 0F39  
                            u1230 0478                              u1150 0407                              u1071 0F38  
                            u2007 01BB                              u1231 0477                              u1215 0465  
                            u1151 0406                              u1080 0F3F                              u1320 036A  
                            u1240 0317                              u1160 0426                              u1081 0F3E  
                            u2017 01C9                              u1321 0369                              u1305 0352  
                            u1241 0316                              u1161 0425                              u1065 0021  
                            u1330 036F                              u1250 0322                              u1410 023E  
                            u1090 00D1                              u2027 01D6                              u1331 036E  
                            u1315 035E                              u1251 0321                              u1411 023D  
                            u1091 00D0                              u1260 0333                              u1420 0243  
                            u1340 01F9                              u1500 004D                              u1180 043A  
                            u2037 0F67                              u1261 0332                              u1421 0242  
                            u1405 0232                              u1341 01F8                              u1501 004C  
                            u1181 0439                              u1350 0204                              u1430 0089  
                            u1351 0203                              u1431 0088                              u1175 042B  
                            u1280 0345                              u1360 020F                              u1520 005F  
                            u1600 028A                              u1281 0344                              u1361 020E  
                            u1521 005E                              u1601 0289                              u1450 009B  
                            u1530 0069                              u1610 0292                              u1275 0337  
                            u1451 009A                              u1531 0068                              u1515 0051  
                            u1611 0291                              u1195 043C                              u1380 0221  
                            u1620 02AA                              u1700 018F                              u1381 0220  
                            u1445 008D                              u1621 02A9                              u1701 018E  
                            u1390 022B                              u1470 00AC                              u1550 007C  
                            u1710 0197                              u1630 0158                              u1295 0346  
                            u1391 022A                              u1375 0213                              u1471 00AB  
                            u1551 007B                              u1535 0065                              u1711 0196  
                            u1631 0157                              u1560 0F76                              u1720 019F  
                            u1640 015F                              u1561 0F75                              u1465 009C  
                            u1545 0070                              u1721 019E                              u1641 015E  
                            u1570 0F86                              u1810 03DE                              u1730 0382  
                            u1490 00C0                              u1650 0167                              u1571 0F85  
                            u1811 03DD                              u1731 0381                              u1395 0227  
                            u1491 00BF                              u1475 00A8                              u1651 0166  
                            u1580 0FD1                              u1820 03E3                              u1740 0399  
                            u1660 016F                              u1581 0FD0                              u1821 03E2  
                            u1805 03D0                              u1485 00B4                              u1661 016E  
                            u1590 0FF3                              u1750 03AD                              u1910 0509  
                            u1830 0494                              u1670 0177                              u1591 0FF2  
                            u1751 03AC                              u1911 0508                              u1831 0493  
                            u1671 0176                              u1760 03B4                              u1920 050F  
                            u1840 0498                              u1680 017F                              u1761 03B3  
                            u1745 0394                              u1921 050E                              u1905 04FE  
                            u1841 0497                              u1681 017E                              u1930 0513  
                            u1850 04B8                              u1690 0187                              u1931 0512  
                            u1851 04B7                              u1691 0186                              u1780 03C6  
                            u1940 0528                              u1781 03C5                              u1790 03CD  
                            u1950 0538                              u1870 04D7                              u1791 03CC  
                            u1775 03B6                              u1951 0537                              u1871 04D6  
                            u1960 053C                              u1961 053B                              u1945 0523  
                            u1865 04C9                              u1890 04F9                              u1891 04F8  
                            _PEIE 005E                              u1885 04EB                              u1977 0663  
                            u1987 0F56                              u1997 01AC                              _vADC 004C  
                            _cent 0056  __end_of_I2C_Master_RepeatedStart 0F21                              _main 0546  
               ??_Lcd8_Set_Cursor 0074                              _unid 0058                              map@v 0039  
                            btemp 007E                              start 0000                             ??_map 0033  
                ?_I2C_Master_Init 0020                  ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                     ___fltol@sign1 0078                   __end_of___aldiv 048C  
                           ?_main 0070                   __end_of___awdiv 0379                   __end_of___awmod 024D  
                 __end_of___fltol 03EF                             _ANSEL 0188                   __end_of___lldiv 0312  
                 ___awdiv@divisor 0070                   __end_of___lwdiv 00C5                   __end_of___lwmod 0081  
                 ___awdiv@counter 0075                             _PORTB 0006                             _PORTC 0007  
                           _PORTD 0008                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
             ___lmul@multiplicand 0074                             _decen 0057                             _setup 0F90  
                           pclath 000A                             status 0003                  __end_of_Lcd8_Cmd 0F70  
                           wtemp0 007E                   __initialization 07F3                      __end_of_main 07F3  
               ??_Lcd8_Write_Char 0070                            ??_main 0048                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                       ?_Lcd8_Clear 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072                            ?_setup 0070  
                          _ANSELH 0189                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
                __end_of___xxtofl 0546                  __end_of_deshacer 02AC          _I2C_Master_RepeatedStart 0F18  
                          ___lmul 00C5                         ??___aldiv 007D                         ??___awdiv 0074  
                       ??___awmod 0074                         ??___fltol 0074                         ??___lldiv 0078  
                       ??___lwdiv 0074                         ??___lwmod 0074                  __end_of_intachar 01A2  
                ___awdiv@quotient 0077                   ___awmod@divisor 0070                   ___awmod@counter 0075  
               __end_of_Lcd8_Init 01F4                      ___xxtofl@arg 0044                      ___xxtofl@exp 0043  
                    ___xxtofl@val 003A           __end_of__initialization 07FC                        ___fltol@f1 0070  
                  __pcstackCOMMON 0070                     __end_of_setup 0FB0                         ?_Lcd8_Cmd 0070  
                 _Lcd8_Set_Cursor 0F70                           ??_setup 007E                        __pbssBANK0 004C  
                      __pmaintext 0546                           ?___lmul 0070                    ___lmul@product 0079  
                Lcd8_Set_Cursor@a 0074                  Lcd8_Set_Cursor@b 0073                  Lcd8_Set_Cursor@x 0075  
                      ??_Lcd8_Cmd 0070                         ?___xxtofl 003A                         ?_deshacer 007A  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0800  
                       ?_intachar 0070                   _Lcd8_Write_Char 0F4D                           ___aldiv 03EF  
                         ___awdiv 0312                           ___awmod 01F4                           ___fltol 0379  
                         ___lldiv 02AC                           ___lwdiv 0081                           ___lwmod 0047  
         __end_of_Lcd8_Set_Cursor 0F90                           __ptext1 0F90                           __ptext2 000F  
                         __ptext3 02AC                           __ptext4 010B                           __ptext5 00C5  
                         __ptext6 03EF                           __ptext7 0152                           __ptext8 024D  
                         __ptext9 0047                         Lcd8_Cmd@a 0072                        ??___xxtofl 003E  
                ___awmod@dividend 0072                  ___aldiv@dividend 0024                        ??_deshacer 0020  
                    ??_Lcd8_Clear 0073                           clrloop0 0F11              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                        ??_intachar 0070                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  ___aldiv@quotient 002A                  I2C_Master_Init@c 0020  
                I2C_Master_Read@a 0070                __end_of_Lcd8_Clear 0F4D                     ___xxtofl@sign 0042  
                       _TRISCbits 0087           __end_of_Lcd8_Write_Char 0F5C                         _Lcd8_Init 01A2  
                  __end_of___lmul 010B                  ?_Lcd8_Set_Cursor 0073               start_initialization 07F3  
                     __end_of_map 0152                 _Lcd8_Write_String 0FB0                ?_Lcd8_Write_String 0070  
               ??_I2C_Master_Init 0024                 ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070  
               ??_I2C_Master_Stop 0070                        ?_Lcd8_Init 0070               ??_Lcd8_Write_String 0072  
                        ??___lmul 0078                         ___latbits 0002                     __pcstackBANK0 0020  
       __end_of_Lcd8_Write_String 0FD2                  ?_Lcd8_Write_Char 0070                  _I2C_Master_Start 0F21  
                _I2C_Master_Write 0005                  ___lwdiv@dividend 0072                          ?___aldiv 0020  
                        ?___awdiv 0070                          ?___awmod 0070                          ?___fltol 0070  
                        ?___lldiv 0070                          ?___lwdiv 0070                          ?___lwmod 0070  
                       __pstrings 0800                     deshacer@cente 0022                  ___lwdiv@quotient 0075  
                 ___aldiv@divisor 0020                   ___aldiv@counter 0028                       ??_Lcd8_Init 0073  
                Lcd8_Write_Char@a 0071                         clear_ram0 0F10                         deshacer@p 007A  
                     __stringbase 0805                          _Lcd8_Cmd 0F5C               I2C_Master_Read@temp 0074  
               ___lmul@multiplier 0070                         intachar@n 0070         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0806                   _I2C_Master_Init 000F                   _I2C_Master_Read 0FD2  
                        ___xxtofl 048C                   _I2C_Master_Wait 0F33                   _I2C_Master_Stop 0F2A  
                 ___lwdiv@divisor 0070                          _deshacer 024D                   ___lwdiv@counter 0077  
                        __ptext10 0081                          __ptext11 01F4                          __ptext20 0F5C  
                        __ptext12 0312                          __ptext21 0005                          __ptext13 048C  
                        __ptext22 0F2A                          __ptext14 0379                          __ptext23 0F21  
                        __ptext15 0FB0                          __ptext24 0F18                          __ptext16 0F4D  
                        __ptext25 0FD2                          __ptext17 0F70                          __ptext26 0F33  
                        __ptext18 01A2                          __ptext19 0F40                      deshacer@nume 007C  
                        _intachar 0152                          map@maxen 002F                          map@maxsa 0031  
                        map@minen 002E                          map@minsa 0030          __end_of_I2C_Master_Start 0F2A  
        __end_of_I2C_Master_Write 000F                  ___lwmod@dividend 0072                  ___lldiv@dividend 0074  
                     deshacer@dec 0024                       deshacer@uni 0023                         stringcode 0800  
              Lcd8_Write_String@a 0074                Lcd8_Write_String@i 0073           __end_of_I2C_Master_Init 0047  
         __end_of_I2C_Master_Read 1000           __end_of_I2C_Master_Wait 0F40           __end_of_I2C_Master_Stop 0F33  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                   ___lwmod@divisor 0070  
                 ___lwmod@counter 0075                          stringdir 0800                          stringtab 0800  
                    ___aldiv@sign 0029                       _SSPCON2bits 0091  
